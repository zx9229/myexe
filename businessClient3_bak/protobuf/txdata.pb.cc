// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: txdata.proto

#include "txdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_txdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_txdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_txdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UniKey;
}  // namespace protobuf_txdata_2eproto
namespace txdata {
class UniKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UniKey>
      _instance;
} _UniKey_default_instance_;
class MessageAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageAck>
      _instance;
} _MessageAck_default_instance_;
class CommonErrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonErr>
      _instance;
} _CommonErr_default_instance_;
class CommonReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonReq>
      _instance;
} _CommonReq_default_instance_;
class CommonRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonRsp>
      _instance;
} _CommonRsp_default_instance_;
class ConnectionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionInfo>
      _instance;
} _ConnectionInfo_default_instance_;
class DisconnectedDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisconnectedData>
      _instance;
} _DisconnectedData_default_instance_;
class ConnectReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectReq>
      _instance;
} _ConnectReq_default_instance_;
class ConnectRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectRsp>
      _instance;
} _ConnectRsp_default_instance_;
class OnlineNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlineNotice>
      _instance;
} _OnlineNotice_default_instance_;
class SystemReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemReport>
      _instance;
} _SystemReport_default_instance_;
class QueryRecordReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRecordReq>
      _instance;
} _QueryRecordReq_default_instance_;
class QueryRecordRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRecordRsp>
      _instance;
} _QueryRecordRsp_default_instance_;
class ExecCmdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecCmdReq>
      _instance;
} _ExecCmdReq_default_instance_;
class ExecCmdRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecCmdRsp>
      _instance;
} _ExecCmdRsp_default_instance_;
class EchoItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EchoItem>
      _instance;
} _EchoItem_default_instance_;
class ReportDataItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportDataItem>
      _instance;
} _ReportDataItem_default_instance_;
class SendMailItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendMailItem>
      _instance;
} _SendMailItem_default_instance_;
}  // namespace txdata
namespace protobuf_txdata_2eproto {
static void InitDefaultsUniKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_UniKey_default_instance_;
    new (ptr) ::txdata::UniKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::UniKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UniKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUniKey}, {}};

static void InitDefaultsMessageAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_MessageAck_default_instance_;
    new (ptr) ::txdata::MessageAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::MessageAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MessageAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessageAck}, {
      &protobuf_txdata_2eproto::scc_info_UniKey.base,}};

static void InitDefaultsCommonErr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_CommonErr_default_instance_;
    new (ptr) ::txdata::CommonErr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::CommonErr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommonErr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommonErr}, {}};

static void InitDefaultsCommonReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_CommonReq_default_instance_;
    new (ptr) ::txdata::CommonReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::CommonReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CommonReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCommonReq}, {
      &protobuf_txdata_2eproto::scc_info_UniKey.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsCommonRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_CommonRsp_default_instance_;
    new (ptr) ::txdata::CommonRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::CommonRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CommonRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCommonRsp}, {
      &protobuf_txdata_2eproto::scc_info_UniKey.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsConnectionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ConnectionInfo_default_instance_;
    new (ptr) ::txdata::ConnectionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ConnectionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionInfo}, {}};

static void InitDefaultsDisconnectedData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_DisconnectedData_default_instance_;
    new (ptr) ::txdata::DisconnectedData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::DisconnectedData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DisconnectedData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDisconnectedData}, {
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base,}};

static void InitDefaultsConnectReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ConnectReq_default_instance_;
    new (ptr) ::txdata::ConnectReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ConnectReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectReq}, {
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base,}};

static void InitDefaultsConnectRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ConnectRsp_default_instance_;
    new (ptr) ::txdata::ConnectRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ConnectRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectRsp}, {
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base,}};

static void InitDefaultsOnlineNotice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_OnlineNotice_default_instance_;
    new (ptr) ::txdata::OnlineNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::OnlineNotice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnlineNotice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnlineNotice}, {}};

static void InitDefaultsSystemReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_SystemReport_default_instance_;
    new (ptr) ::txdata::SystemReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::SystemReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemReport}, {}};

static void InitDefaultsQueryRecordReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_QueryRecordReq_default_instance_;
    new (ptr) ::txdata::QueryRecordReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::QueryRecordReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryRecordReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryRecordReq}, {}};

static void InitDefaultsQueryRecordRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_QueryRecordRsp_default_instance_;
    new (ptr) ::txdata::QueryRecordRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::QueryRecordRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryRecordRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryRecordRsp}, {}};

static void InitDefaultsExecCmdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ExecCmdReq_default_instance_;
    new (ptr) ::txdata::ExecCmdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ExecCmdReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecCmdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecCmdReq}, {}};

static void InitDefaultsExecCmdRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ExecCmdRsp_default_instance_;
    new (ptr) ::txdata::ExecCmdRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ExecCmdRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecCmdRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecCmdRsp}, {}};

static void InitDefaultsEchoItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_EchoItem_default_instance_;
    new (ptr) ::txdata::EchoItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::EchoItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EchoItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEchoItem}, {}};

static void InitDefaultsReportDataItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ReportDataItem_default_instance_;
    new (ptr) ::txdata::ReportDataItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ReportDataItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportDataItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportDataItem}, {}};

static void InitDefaultsSendMailItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_SendMailItem_default_instance_;
    new (ptr) ::txdata::SendMailItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::SendMailItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendMailItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendMailItem}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UniKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommonErr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommonReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommonRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisconnectedData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnlineNotice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRecordReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRecordRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecCmdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecCmdRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EchoItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportDataItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendMailItem.base);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, msgno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, seqno_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::MessageAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::MessageAck, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::MessageAck, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::MessageAck, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::MessageAck, txtoroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::MessageAck, islog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonErr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonErr, errno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonErr, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, txtoroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, islog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, issafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, ispush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, upcache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, reqtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, reqdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonReq, reqtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, txtoroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, islog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, issafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, ispush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, upcache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, rsptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, rspdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, rsptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonRsp, islast_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, belongid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, linkmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, exepid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, exepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, remark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::DisconnectedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::DisconnectedData, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectReq, inforeq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectReq, pathway_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, inforeq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, inforsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, errno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::OnlineNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::OnlineNotice, rootisonline_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, pathway_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordReq, seqno_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, seqno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdReq, cmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdRsp, reply_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, localid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, remoteid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ReportDataItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ReportDataItem, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ReportDataItem, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, smtpaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, contenttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SendMailItem, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::txdata::UniKey)},
  { 8, -1, sizeof(::txdata::MessageAck)},
  { 18, -1, sizeof(::txdata::CommonErr)},
  { 25, -1, sizeof(::txdata::CommonReq)},
  { 41, -1, sizeof(::txdata::CommonRsp)},
  { 58, -1, sizeof(::txdata::ConnectionInfo)},
  { 70, -1, sizeof(::txdata::DisconnectedData)},
  { 76, -1, sizeof(::txdata::ConnectReq)},
  { 83, -1, sizeof(::txdata::ConnectRsp)},
  { 92, -1, sizeof(::txdata::OnlineNotice)},
  { 98, -1, sizeof(::txdata::SystemReport)},
  { 106, -1, sizeof(::txdata::QueryRecordReq)},
  { 113, -1, sizeof(::txdata::QueryRecordRsp)},
  { 121, -1, sizeof(::txdata::ExecCmdReq)},
  { 127, -1, sizeof(::txdata::ExecCmdRsp)},
  { 133, -1, sizeof(::txdata::EchoItem)},
  { 141, -1, sizeof(::txdata::ReportDataItem)},
  { 148, -1, sizeof(::txdata::SendMailItem)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_UniKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_MessageAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_CommonErr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_CommonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_CommonRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ConnectionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_DisconnectedData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ConnectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ConnectRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_OnlineNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_SystemReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_QueryRecordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_QueryRecordRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ExecCmdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ExecCmdRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_EchoItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ReportDataItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_SendMailItem_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "txdata.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014txdata.proto\022\006txdata\032\037google/protobuf/"
      "timestamp.proto\"6\n\006UniKey\022\016\n\006UserID\030\001 \001("
      "\t\022\r\n\005MsgNo\030\002 \001(\003\022\r\n\005SeqNo\030\003 \001(\005\"n\n\nMessa"
      "geAck\022\033\n\003Key\030\001 \001(\0132\016.txdata.UniKey\022\020\n\010Se"
      "nderID\030\002 \001(\t\022\020\n\010RecverID\030\003 \001(\t\022\020\n\010TxToRo"
      "ot\030\004 \001(\010\022\r\n\005IsLog\030\005 \001(\010\"*\n\tCommonErr\022\r\n\005"
      "ErrNo\030\001 \001(\005\022\016\n\006ErrMsg\030\002 \001(\t\"\376\001\n\tCommonRe"
      "q\022\033\n\003Key\030\001 \001(\0132\016.txdata.UniKey\022\020\n\010Sender"
      "ID\030\002 \001(\t\022\020\n\010RecverID\030\003 \001(\t\022\020\n\010TxToRoot\030\004"
      " \001(\010\022\r\n\005IsLog\030\005 \001(\010\022\016\n\006IsSafe\030\006 \001(\010\022\016\n\006I"
      "sPush\030\007 \001(\010\022\017\n\007UpCache\030\010 \001(\010\022 \n\007ReqType\030"
      "\t \001(\0162\017.txdata.MsgType\022\017\n\007ReqData\030\n \001(\014\022"
      "+\n\007ReqTime\030\013 \001(\0132\032.google.protobuf.Times"
      "tamp\"\216\002\n\tCommonRsp\022\033\n\003Key\030\001 \001(\0132\016.txdata"
      ".UniKey\022\020\n\010SenderID\030\002 \001(\t\022\020\n\010RecverID\030\003 "
      "\001(\t\022\020\n\010TxToRoot\030\004 \001(\010\022\r\n\005IsLog\030\005 \001(\010\022\016\n\006"
      "IsSafe\030\006 \001(\010\022\016\n\006IsPush\030\007 \001(\010\022\017\n\007UpCache\030"
      "\010 \001(\010\022 \n\007RspType\030\t \001(\0162\017.txdata.MsgType\022"
      "\017\n\007RspData\030\n \001(\014\022+\n\007RspTime\030\013 \001(\0132\032.goog"
      "le.protobuf.Timestamp\022\016\n\006IsLast\030\014 \001(\010\"\327\001"
      "\n\016ConnectionInfo\022\016\n\006UserID\030\001 \001(\t\022\020\n\010Belo"
      "ngID\030\002 \001(\t\022\017\n\007Version\030\003 \001(\t\0221\n\010LinkMode\030"
      "\004 \001(\0162\037.txdata.ConnectionInfo.LinkType\022\016"
      "\n\006ExePid\030\005 \001(\005\022\017\n\007ExePath\030\006 \001(\t\022\016\n\006Remar"
      "k\030\007 \001(\t\".\n\010LinkType\022\t\n\005Zero2\020\000\022\013\n\007CONNEC"
      "T\020\001\022\n\n\006ACCEPT\020\002\"8\n\020DisconnectedData\022$\n\004I"
      "nfo\030\001 \001(\0132\026.txdata.ConnectionInfo\"F\n\nCon"
      "nectReq\022\'\n\007InfoReq\030\001 \001(\0132\026.txdata.Connec"
      "tionInfo\022\017\n\007Pathway\030\002 \003(\t\"}\n\nConnectRsp\022"
      "\'\n\007InfoReq\030\001 \001(\0132\026.txdata.ConnectionInfo"
      "\022\'\n\007InfoRsp\030\002 \001(\0132\026.txdata.ConnectionInf"
      "o\022\r\n\005ErrNo\030\003 \001(\005\022\016\n\006ErrMsg\030\004 \001(\t\"$\n\014Onli"
      "neNotice\022\024\n\014RootIsOnline\030\001 \001(\010\"@\n\014System"
      "Report\022\016\n\006UserID\030\001 \001(\t\022\017\n\007Pathway\030\002 \003(\t\022"
      "\017\n\007Message\030\003 \001(\t\"/\n\016QueryRecordReq\022\016\n\006Us"
      "erID\030\001 \001(\t\022\r\n\005SeqNo\030\002 \001(\003\"=\n\016QueryRecord"
      "Rsp\022\016\n\006UserID\030\001 \001(\t\022\r\n\005SeqNo\030\002 \001(\003\022\014\n\004Da"
      "ta\030\003 \003(\014\"\031\n\nExecCmdReq\022\013\n\003Cmd\030\001 \001(\t\"\033\n\nE"
      "xecCmdRsp\022\r\n\005Reply\030\001 \001(\t\";\n\010EchoItem\022\017\n\007"
      "LocalID\030\001 \001(\t\022\020\n\010RemoteID\030\002 \001(\t\022\014\n\004Data\030"
      "\003 \001(\t\"-\n\016ReportDataItem\022\r\n\005Topic\030\001 \001(\t\022\014"
      "\n\004Data\030\002 \001(\t\"\207\001\n\014SendMailItem\022\020\n\010Usernam"
      "e\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\022\020\n\010SmtpAddr\030\003 "
      "\001(\t\022\n\n\002To\030\004 \001(\t\022\017\n\007Subject\030\005 \001(\t\022\023\n\013Cont"
      "entType\030\006 \001(\t\022\017\n\007Content\030\007 \001(\t*\356\002\n\007MsgTy"
      "pe\022\t\n\005Zero1\020\000\022\021\n\rID_MessageAck\020\001\022\020\n\014ID_C"
      "ommonErr\020\002\022\020\n\014ID_CommonReq\020\003\022\020\n\014ID_Commo"
      "nRsp\020\004\022\025\n\021ID_ConnectionInfo\020\005\022\027\n\023ID_Disc"
      "onnectedData\020\006\022\021\n\rID_ConnectReq\020\007\022\021\n\rID_"
      "ConnectRsp\020\010\022\023\n\017ID_OnlineNotice\020\t\022\023\n\017ID_"
      "SystemReport\020\n\022\025\n\021ID_QueryRecordReq\020\013\022\025\n"
      "\021ID_QueryRecordRsp\020\014\022\021\n\rID_ExecCmdReq\020\r\022"
      "\021\n\rID_ExecCmdRsp\020\016\022\017\n\013ID_EchoItem\020\017\022\025\n\021I"
      "D_ReportDataItem\020\020\022\023\n\017ID_SendMailItem\020\021P"
      "\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2169);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "txdata.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_txdata_2eproto
namespace txdata {
const ::google::protobuf::EnumDescriptor* ConnectionInfo_LinkType_descriptor() {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txdata_2eproto::file_level_enum_descriptors[0];
}
bool ConnectionInfo_LinkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConnectionInfo_LinkType ConnectionInfo::Zero2;
const ConnectionInfo_LinkType ConnectionInfo::CONNECT;
const ConnectionInfo_LinkType ConnectionInfo::ACCEPT;
const ConnectionInfo_LinkType ConnectionInfo::LinkType_MIN;
const ConnectionInfo_LinkType ConnectionInfo::LinkType_MAX;
const int ConnectionInfo::LinkType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txdata_2eproto::file_level_enum_descriptors[1];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UniKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UniKey::kUserIDFieldNumber;
const int UniKey::kMsgNoFieldNumber;
const int UniKey::kSeqNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UniKey::UniKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_UniKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.UniKey)
}
UniKey::UniKey(const UniKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  ::memcpy(&msgno_, &from.msgno_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqno_) -
    reinterpret_cast<char*>(&msgno_)) + sizeof(seqno_));
  // @@protoc_insertion_point(copy_constructor:txdata.UniKey)
}

void UniKey::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqno_) -
      reinterpret_cast<char*>(&msgno_)) + sizeof(seqno_));
}

UniKey::~UniKey() {
  // @@protoc_insertion_point(destructor:txdata.UniKey)
  SharedDtor();
}

void UniKey::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UniKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UniKey::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UniKey& UniKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_UniKey.base);
  return *internal_default_instance();
}


void UniKey::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.UniKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqno_) -
      reinterpret_cast<char*>(&msgno_)) + sizeof(seqno_));
  _internal_metadata_.Clear();
}

bool UniKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.UniKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.UniKey.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 MsgNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SeqNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.UniKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.UniKey)
  return false;
#undef DO_
}

void UniKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.UniKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.UniKey.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // int64 MsgNo = 2;
  if (this->msgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->msgno(), output);
  }

  // int32 SeqNo = 3;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seqno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.UniKey)
}

::google::protobuf::uint8* UniKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.UniKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.UniKey.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // int64 MsgNo = 2;
  if (this->msgno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->msgno(), target);
  }

  // int32 SeqNo = 3;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seqno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.UniKey)
  return target;
}

size_t UniKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.UniKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int64 MsgNo = 2;
  if (this->msgno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgno());
  }

  // int32 SeqNo = 3;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seqno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.UniKey)
  GOOGLE_DCHECK_NE(&from, this);
  const UniKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UniKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.UniKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.UniKey)
    MergeFrom(*source);
  }
}

void UniKey::MergeFrom(const UniKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.UniKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.msgno() != 0) {
    set_msgno(from.msgno());
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
}

void UniKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.UniKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniKey::CopyFrom(const UniKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.UniKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniKey::IsInitialized() const {
  return true;
}

void UniKey::Swap(UniKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UniKey::InternalSwap(UniKey* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgno_, other->msgno_);
  swap(seqno_, other->seqno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UniKey::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageAck::InitAsDefaultInstance() {
  ::txdata::_MessageAck_default_instance_._instance.get_mutable()->key_ = const_cast< ::txdata::UniKey*>(
      ::txdata::UniKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageAck::kKeyFieldNumber;
const int MessageAck::kSenderIDFieldNumber;
const int MessageAck::kRecverIDFieldNumber;
const int MessageAck::kTxToRootFieldNumber;
const int MessageAck::kIsLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageAck::MessageAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_MessageAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.MessageAck)
}
MessageAck::MessageAck(const MessageAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.has_key()) {
    key_ = new ::txdata::UniKey(*from.key_);
  } else {
    key_ = NULL;
  }
  ::memcpy(&txtoroot_, &from.txtoroot_,
    static_cast<size_t>(reinterpret_cast<char*>(&islog_) -
    reinterpret_cast<char*>(&txtoroot_)) + sizeof(islog_));
  // @@protoc_insertion_point(copy_constructor:txdata.MessageAck)
}

void MessageAck::SharedCtor() {
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islog_) -
      reinterpret_cast<char*>(&key_)) + sizeof(islog_));
}

MessageAck::~MessageAck() {
  // @@protoc_insertion_point(destructor:txdata.MessageAck)
  SharedDtor();
}

void MessageAck::SharedDtor() {
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
}

void MessageAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageAck::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageAck& MessageAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_MessageAck.base);
  return *internal_default_instance();
}


void MessageAck::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.MessageAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  ::memset(&txtoroot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islog_) -
      reinterpret_cast<char*>(&txtoroot_)) + sizeof(islog_));
  _internal_metadata_.Clear();
}

bool MessageAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.MessageAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.UniKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.MessageAck.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.MessageAck.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool TxToRoot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &txtoroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.MessageAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.MessageAck)
  return false;
#undef DO_
}

void MessageAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.MessageAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.MessageAck.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->senderid(), output);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.MessageAck.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->recverid(), output);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->txtoroot(), output);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->islog(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.MessageAck)
}

::google::protobuf::uint8* MessageAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.MessageAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.MessageAck.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->senderid(), target);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.MessageAck.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->recverid(), target);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->txtoroot(), target);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->islog(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.MessageAck)
  return target;
}

size_t MessageAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.MessageAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.MessageAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.MessageAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.MessageAck)
    MergeFrom(*source);
  }
}

void MessageAck::MergeFrom(const MessageAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.MessageAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.has_key()) {
    mutable_key()->::txdata::UniKey::MergeFrom(from.key());
  }
  if (from.txtoroot() != 0) {
    set_txtoroot(from.txtoroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
}

void MessageAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.MessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageAck::CopyFrom(const MessageAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.MessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageAck::IsInitialized() const {
  return true;
}

void MessageAck::Swap(MessageAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageAck::InternalSwap(MessageAck* other) {
  using std::swap;
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(txtoroot_, other->txtoroot_);
  swap(islog_, other->islog_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageAck::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonErr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonErr::kErrNoFieldNumber;
const int CommonErr::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonErr::CommonErr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_CommonErr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.CommonErr)
}
CommonErr::CommonErr(const CommonErr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  errno_ = from.errno_;
  // @@protoc_insertion_point(copy_constructor:txdata.CommonErr)
}

void CommonErr::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errno_ = 0;
}

CommonErr::~CommonErr() {
  // @@protoc_insertion_point(destructor:txdata.CommonErr)
  SharedDtor();
}

void CommonErr::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommonErr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommonErr::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonErr& CommonErr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_CommonErr.base);
  return *internal_default_instance();
}


void CommonErr::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.CommonErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errno_ = 0;
  _internal_metadata_.Clear();
}

bool CommonErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.CommonErr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ErrNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.CommonErr.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.CommonErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.CommonErr)
  return false;
#undef DO_
}

void CommonErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.CommonErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ErrNo = 1;
  if (this->errno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errno(), output);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonErr.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.CommonErr)
}

::google::protobuf::uint8* CommonErr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.CommonErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ErrNo = 1;
  if (this->errno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errno(), target);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonErr.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.CommonErr)
  return target;
}

size_t CommonErr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.CommonErr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int32 ErrNo = 1;
  if (this->errno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.CommonErr)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonErr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonErr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.CommonErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.CommonErr)
    MergeFrom(*source);
  }
}

void CommonErr::MergeFrom(const CommonErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.CommonErr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.errno() != 0) {
    set_errno(from.errno());
  }
}

void CommonErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.CommonErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonErr::CopyFrom(const CommonErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.CommonErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonErr::IsInitialized() const {
  return true;
}

void CommonErr::Swap(CommonErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonErr::InternalSwap(CommonErr* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errno_, other->errno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommonErr::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonReq::InitAsDefaultInstance() {
  ::txdata::_CommonReq_default_instance_._instance.get_mutable()->key_ = const_cast< ::txdata::UniKey*>(
      ::txdata::UniKey::internal_default_instance());
  ::txdata::_CommonReq_default_instance_._instance.get_mutable()->reqtime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void CommonReq::clear_reqtime() {
  if (GetArenaNoVirtual() == NULL && reqtime_ != NULL) {
    delete reqtime_;
  }
  reqtime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonReq::kKeyFieldNumber;
const int CommonReq::kSenderIDFieldNumber;
const int CommonReq::kRecverIDFieldNumber;
const int CommonReq::kTxToRootFieldNumber;
const int CommonReq::kIsLogFieldNumber;
const int CommonReq::kIsSafeFieldNumber;
const int CommonReq::kIsPushFieldNumber;
const int CommonReq::kUpCacheFieldNumber;
const int CommonReq::kReqTypeFieldNumber;
const int CommonReq::kReqDataFieldNumber;
const int CommonReq::kReqTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonReq::CommonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_CommonReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.CommonReq)
}
CommonReq::CommonReq(const CommonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  reqdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reqdata().size() > 0) {
    reqdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqdata_);
  }
  if (from.has_key()) {
    key_ = new ::txdata::UniKey(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_reqtime()) {
    reqtime_ = new ::google::protobuf::Timestamp(*from.reqtime_);
  } else {
    reqtime_ = NULL;
  }
  ::memcpy(&txtoroot_, &from.txtoroot_,
    static_cast<size_t>(reinterpret_cast<char*>(&reqtype_) -
    reinterpret_cast<char*>(&txtoroot_)) + sizeof(reqtype_));
  // @@protoc_insertion_point(copy_constructor:txdata.CommonReq)
}

void CommonReq::SharedCtor() {
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&key_)) + sizeof(reqtype_));
}

CommonReq::~CommonReq() {
  // @@protoc_insertion_point(destructor:txdata.CommonReq)
  SharedDtor();
}

void CommonReq::SharedDtor() {
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete reqtime_;
}

void CommonReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommonReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonReq& CommonReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_CommonReq.base);
  return *internal_default_instance();
}


void CommonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.CommonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && reqtime_ != NULL) {
    delete reqtime_;
  }
  reqtime_ = NULL;
  ::memset(&txtoroot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&txtoroot_)) + sizeof(reqtype_));
  _internal_metadata_.Clear();
}

bool CommonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.CommonReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.UniKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.CommonReq.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.CommonReq.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool TxToRoot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &txtoroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsSafe = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsPush = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool UpCache = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &upcache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.MsgType ReqType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reqtype(static_cast< ::txdata::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ReqData = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reqdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp ReqTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reqtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.CommonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.CommonReq)
  return false;
#undef DO_
}

void CommonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.CommonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonReq.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->senderid(), output);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonReq.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->recverid(), output);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->txtoroot(), output);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->islog(), output);
  }

  // bool IsSafe = 6;
  if (this->issafe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->issafe(), output);
  }

  // bool IsPush = 7;
  if (this->ispush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->ispush(), output);
  }

  // bool UpCache = 8;
  if (this->upcache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->upcache(), output);
  }

  // .txdata.MsgType ReqType = 9;
  if (this->reqtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->reqtype(), output);
  }

  // bytes ReqData = 10;
  if (this->reqdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->reqdata(), output);
  }

  // .google.protobuf.Timestamp ReqTime = 11;
  if (this->has_reqtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_reqtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.CommonReq)
}

::google::protobuf::uint8* CommonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.CommonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonReq.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->senderid(), target);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonReq.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->recverid(), target);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->txtoroot(), target);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->islog(), target);
  }

  // bool IsSafe = 6;
  if (this->issafe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->issafe(), target);
  }

  // bool IsPush = 7;
  if (this->ispush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->ispush(), target);
  }

  // bool UpCache = 8;
  if (this->upcache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->upcache(), target);
  }

  // .txdata.MsgType ReqType = 9;
  if (this->reqtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->reqtype(), target);
  }

  // bytes ReqData = 10;
  if (this->reqdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->reqdata(), target);
  }

  // .google.protobuf.Timestamp ReqTime = 11;
  if (this->has_reqtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_reqtime(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.CommonReq)
  return target;
}

size_t CommonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.CommonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // bytes ReqData = 10;
  if (this->reqdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reqdata());
  }

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .google.protobuf.Timestamp ReqTime = 11;
  if (this->has_reqtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reqtime_);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  // bool IsSafe = 6;
  if (this->issafe() != 0) {
    total_size += 1 + 1;
  }

  // bool IsPush = 7;
  if (this->ispush() != 0) {
    total_size += 1 + 1;
  }

  // bool UpCache = 8;
  if (this->upcache() != 0) {
    total_size += 1 + 1;
  }

  // .txdata.MsgType ReqType = 9;
  if (this->reqtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reqtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.CommonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.CommonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.CommonReq)
    MergeFrom(*source);
  }
}

void CommonReq::MergeFrom(const CommonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.CommonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.reqdata().size() > 0) {

    reqdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqdata_);
  }
  if (from.has_key()) {
    mutable_key()->::txdata::UniKey::MergeFrom(from.key());
  }
  if (from.has_reqtime()) {
    mutable_reqtime()->::google::protobuf::Timestamp::MergeFrom(from.reqtime());
  }
  if (from.txtoroot() != 0) {
    set_txtoroot(from.txtoroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
  if (from.issafe() != 0) {
    set_issafe(from.issafe());
  }
  if (from.ispush() != 0) {
    set_ispush(from.ispush());
  }
  if (from.upcache() != 0) {
    set_upcache(from.upcache());
  }
  if (from.reqtype() != 0) {
    set_reqtype(from.reqtype());
  }
}

void CommonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.CommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonReq::CopyFrom(const CommonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.CommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonReq::IsInitialized() const {
  return true;
}

void CommonReq::Swap(CommonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonReq::InternalSwap(CommonReq* other) {
  using std::swap;
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reqdata_.Swap(&other->reqdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(reqtime_, other->reqtime_);
  swap(txtoroot_, other->txtoroot_);
  swap(islog_, other->islog_);
  swap(issafe_, other->issafe_);
  swap(ispush_, other->ispush_);
  swap(upcache_, other->upcache_);
  swap(reqtype_, other->reqtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommonReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonRsp::InitAsDefaultInstance() {
  ::txdata::_CommonRsp_default_instance_._instance.get_mutable()->key_ = const_cast< ::txdata::UniKey*>(
      ::txdata::UniKey::internal_default_instance());
  ::txdata::_CommonRsp_default_instance_._instance.get_mutable()->rsptime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void CommonRsp::clear_rsptime() {
  if (GetArenaNoVirtual() == NULL && rsptime_ != NULL) {
    delete rsptime_;
  }
  rsptime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonRsp::kKeyFieldNumber;
const int CommonRsp::kSenderIDFieldNumber;
const int CommonRsp::kRecverIDFieldNumber;
const int CommonRsp::kTxToRootFieldNumber;
const int CommonRsp::kIsLogFieldNumber;
const int CommonRsp::kIsSafeFieldNumber;
const int CommonRsp::kIsPushFieldNumber;
const int CommonRsp::kUpCacheFieldNumber;
const int CommonRsp::kRspTypeFieldNumber;
const int CommonRsp::kRspDataFieldNumber;
const int CommonRsp::kRspTimeFieldNumber;
const int CommonRsp::kIsLastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonRsp::CommonRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_CommonRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.CommonRsp)
}
CommonRsp::CommonRsp(const CommonRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  rspdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rspdata().size() > 0) {
    rspdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdata_);
  }
  if (from.has_key()) {
    key_ = new ::txdata::UniKey(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_rsptime()) {
    rsptime_ = new ::google::protobuf::Timestamp(*from.rsptime_);
  } else {
    rsptime_ = NULL;
  }
  ::memcpy(&txtoroot_, &from.txtoroot_,
    static_cast<size_t>(reinterpret_cast<char*>(&islast_) -
    reinterpret_cast<char*>(&txtoroot_)) + sizeof(islast_));
  // @@protoc_insertion_point(copy_constructor:txdata.CommonRsp)
}

void CommonRsp::SharedCtor() {
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&key_)) + sizeof(islast_));
}

CommonRsp::~CommonRsp() {
  // @@protoc_insertion_point(destructor:txdata.CommonRsp)
  SharedDtor();
}

void CommonRsp::SharedDtor() {
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete rsptime_;
}

void CommonRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommonRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonRsp& CommonRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_CommonRsp.base);
  return *internal_default_instance();
}


void CommonRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.CommonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && rsptime_ != NULL) {
    delete rsptime_;
  }
  rsptime_ = NULL;
  ::memset(&txtoroot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&txtoroot_)) + sizeof(islast_));
  _internal_metadata_.Clear();
}

bool CommonRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.CommonRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.UniKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.CommonRsp.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.CommonRsp.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool TxToRoot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &txtoroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsSafe = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsPush = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool UpCache = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &upcache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.MsgType RspType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rsptype(static_cast< ::txdata::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes RspData = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rspdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp RspTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsptime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLast = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.CommonRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.CommonRsp)
  return false;
#undef DO_
}

void CommonRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.CommonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonRsp.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->senderid(), output);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonRsp.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->recverid(), output);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->txtoroot(), output);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->islog(), output);
  }

  // bool IsSafe = 6;
  if (this->issafe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->issafe(), output);
  }

  // bool IsPush = 7;
  if (this->ispush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->ispush(), output);
  }

  // bool UpCache = 8;
  if (this->upcache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->upcache(), output);
  }

  // .txdata.MsgType RspType = 9;
  if (this->rsptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->rsptype(), output);
  }

  // bytes RspData = 10;
  if (this->rspdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->rspdata(), output);
  }

  // .google.protobuf.Timestamp RspTime = 11;
  if (this->has_rsptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_rsptime(), output);
  }

  // bool IsLast = 12;
  if (this->islast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->islast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.CommonRsp)
}

::google::protobuf::uint8* CommonRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.CommonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonRsp.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->senderid(), target);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonRsp.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->recverid(), target);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->txtoroot(), target);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->islog(), target);
  }

  // bool IsSafe = 6;
  if (this->issafe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->issafe(), target);
  }

  // bool IsPush = 7;
  if (this->ispush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->ispush(), target);
  }

  // bool UpCache = 8;
  if (this->upcache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->upcache(), target);
  }

  // .txdata.MsgType RspType = 9;
  if (this->rsptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->rsptype(), target);
  }

  // bytes RspData = 10;
  if (this->rspdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->rspdata(), target);
  }

  // .google.protobuf.Timestamp RspTime = 11;
  if (this->has_rsptime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_rsptime(), deterministic, target);
  }

  // bool IsLast = 12;
  if (this->islast() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->islast(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.CommonRsp)
  return target;
}

size_t CommonRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.CommonRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // bytes RspData = 10;
  if (this->rspdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rspdata());
  }

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .google.protobuf.Timestamp RspTime = 11;
  if (this->has_rsptime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rsptime_);
  }

  // bool TxToRoot = 4;
  if (this->txtoroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  // bool IsSafe = 6;
  if (this->issafe() != 0) {
    total_size += 1 + 1;
  }

  // bool IsPush = 7;
  if (this->ispush() != 0) {
    total_size += 1 + 1;
  }

  // .txdata.MsgType RspType = 9;
  if (this->rsptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rsptype());
  }

  // bool UpCache = 8;
  if (this->upcache() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLast = 12;
  if (this->islast() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.CommonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.CommonRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.CommonRsp)
    MergeFrom(*source);
  }
}

void CommonRsp::MergeFrom(const CommonRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.CommonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.rspdata().size() > 0) {

    rspdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdata_);
  }
  if (from.has_key()) {
    mutable_key()->::txdata::UniKey::MergeFrom(from.key());
  }
  if (from.has_rsptime()) {
    mutable_rsptime()->::google::protobuf::Timestamp::MergeFrom(from.rsptime());
  }
  if (from.txtoroot() != 0) {
    set_txtoroot(from.txtoroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
  if (from.issafe() != 0) {
    set_issafe(from.issafe());
  }
  if (from.ispush() != 0) {
    set_ispush(from.ispush());
  }
  if (from.rsptype() != 0) {
    set_rsptype(from.rsptype());
  }
  if (from.upcache() != 0) {
    set_upcache(from.upcache());
  }
  if (from.islast() != 0) {
    set_islast(from.islast());
  }
}

void CommonRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.CommonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonRsp::CopyFrom(const CommonRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.CommonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonRsp::IsInitialized() const {
  return true;
}

void CommonRsp::Swap(CommonRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonRsp::InternalSwap(CommonRsp* other) {
  using std::swap;
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rspdata_.Swap(&other->rspdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(rsptime_, other->rsptime_);
  swap(txtoroot_, other->txtoroot_);
  swap(islog_, other->islog_);
  swap(issafe_, other->issafe_);
  swap(ispush_, other->ispush_);
  swap(rsptype_, other->rsptype_);
  swap(upcache_, other->upcache_);
  swap(islast_, other->islast_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommonRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionInfo::kUserIDFieldNumber;
const int ConnectionInfo::kBelongIDFieldNumber;
const int ConnectionInfo::kVersionFieldNumber;
const int ConnectionInfo::kLinkModeFieldNumber;
const int ConnectionInfo::kExePidFieldNumber;
const int ConnectionInfo::kExePathFieldNumber;
const int ConnectionInfo::kRemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionInfo::ConnectionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ConnectionInfo)
}
ConnectionInfo::ConnectionInfo(const ConnectionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  belongid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.belongid().size() > 0) {
    belongid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.belongid_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  exepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exepath().size() > 0) {
    exepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exepath_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  ::memcpy(&linkmode_, &from.linkmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&exepid_) -
    reinterpret_cast<char*>(&linkmode_)) + sizeof(exepid_));
  // @@protoc_insertion_point(copy_constructor:txdata.ConnectionInfo)
}

void ConnectionInfo::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  belongid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&linkmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exepid_) -
      reinterpret_cast<char*>(&linkmode_)) + sizeof(exepid_));
}

ConnectionInfo::~ConnectionInfo() {
  // @@protoc_insertion_point(destructor:txdata.ConnectionInfo)
  SharedDtor();
}

void ConnectionInfo::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  belongid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionInfo::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionInfo& ConnectionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ConnectionInfo.base);
  return *internal_default_instance();
}


void ConnectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  belongid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&linkmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exepid_) -
      reinterpret_cast<char*>(&linkmode_)) + sizeof(exepid_));
  _internal_metadata_.Clear();
}

bool ConnectionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ConnectionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BelongID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_belongid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->belongid().data(), static_cast<int>(this->belongid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.BelongID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.Version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.ConnectionInfo.LinkType LinkMode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_linkmode(static_cast< ::txdata::ConnectionInfo_LinkType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ExePid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exepid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ExePath = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exepath().data(), static_cast<int>(this->exepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.ExePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Remark = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.Remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ConnectionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ConnectionInfo)
  return false;
#undef DO_
}

void ConnectionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string BelongID = 2;
  if (this->belongid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->belongid().data(), static_cast<int>(this->belongid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.BelongID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->belongid(), output);
  }

  // string Version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // .txdata.ConnectionInfo.LinkType LinkMode = 4;
  if (this->linkmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->linkmode(), output);
  }

  // int32 ExePid = 5;
  if (this->exepid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->exepid(), output);
  }

  // string ExePath = 6;
  if (this->exepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exepath().data(), static_cast<int>(this->exepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.ExePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->exepath(), output);
  }

  // string Remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->remark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ConnectionInfo)
}

::google::protobuf::uint8* ConnectionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string BelongID = 2;
  if (this->belongid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->belongid().data(), static_cast<int>(this->belongid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.BelongID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->belongid(), target);
  }

  // string Version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // .txdata.ConnectionInfo.LinkType LinkMode = 4;
  if (this->linkmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->linkmode(), target);
  }

  // int32 ExePid = 5;
  if (this->exepid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->exepid(), target);
  }

  // string ExePath = 6;
  if (this->exepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exepath().data(), static_cast<int>(this->exepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.ExePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->exepath(), target);
  }

  // string Remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->remark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ConnectionInfo)
  return target;
}

size_t ConnectionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ConnectionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string BelongID = 2;
  if (this->belongid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->belongid());
  }

  // string Version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string ExePath = 6;
  if (this->exepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exepath());
  }

  // string Remark = 7;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // .txdata.ConnectionInfo.LinkType LinkMode = 4;
  if (this->linkmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->linkmode());
  }

  // int32 ExePid = 5;
  if (this->exepid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exepid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ConnectionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ConnectionInfo)
    MergeFrom(*source);
  }
}

void ConnectionInfo::MergeFrom(const ConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.belongid().size() > 0) {

    belongid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.belongid_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.exepath().size() > 0) {

    exepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exepath_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.linkmode() != 0) {
    set_linkmode(from.linkmode());
  }
  if (from.exepid() != 0) {
    set_exepid(from.exepid());
  }
}

void ConnectionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionInfo::CopyFrom(const ConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionInfo::IsInitialized() const {
  return true;
}

void ConnectionInfo::Swap(ConnectionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionInfo::InternalSwap(ConnectionInfo* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  belongid_.Swap(&other->belongid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exepath_.Swap(&other->exepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(linkmode_, other->linkmode_);
  swap(exepid_, other->exepid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionInfo::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisconnectedData::InitAsDefaultInstance() {
  ::txdata::_DisconnectedData_default_instance_._instance.get_mutable()->info_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisconnectedData::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisconnectedData::DisconnectedData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_DisconnectedData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.DisconnectedData)
}
DisconnectedData::DisconnectedData(const DisconnectedData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::txdata::ConnectionInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:txdata.DisconnectedData)
}

void DisconnectedData::SharedCtor() {
  info_ = NULL;
}

DisconnectedData::~DisconnectedData() {
  // @@protoc_insertion_point(destructor:txdata.DisconnectedData)
  SharedDtor();
}

void DisconnectedData::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void DisconnectedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisconnectedData::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisconnectedData& DisconnectedData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_DisconnectedData.base);
  return *internal_default_instance();
}


void DisconnectedData::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.DisconnectedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool DisconnectedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.DisconnectedData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.ConnectionInfo Info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.DisconnectedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.DisconnectedData)
  return false;
#undef DO_
}

void DisconnectedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.DisconnectedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo Info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.DisconnectedData)
}

::google::protobuf::uint8* DisconnectedData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.DisconnectedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo Info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.DisconnectedData)
  return target;
}

size_t DisconnectedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.DisconnectedData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .txdata.ConnectionInfo Info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisconnectedData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.DisconnectedData)
  GOOGLE_DCHECK_NE(&from, this);
  const DisconnectedData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisconnectedData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.DisconnectedData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.DisconnectedData)
    MergeFrom(*source);
  }
}

void DisconnectedData::MergeFrom(const DisconnectedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.DisconnectedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::txdata::ConnectionInfo::MergeFrom(from.info());
  }
}

void DisconnectedData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.DisconnectedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectedData::CopyFrom(const DisconnectedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.DisconnectedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectedData::IsInitialized() const {
  return true;
}

void DisconnectedData::Swap(DisconnectedData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisconnectedData::InternalSwap(DisconnectedData* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisconnectedData::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectReq::InitAsDefaultInstance() {
  ::txdata::_ConnectReq_default_instance_._instance.get_mutable()->inforeq_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectReq::kInfoReqFieldNumber;
const int ConnectReq::kPathwayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectReq::ConnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ConnectReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ConnectReq)
}
ConnectReq::ConnectReq(const ConnectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pathway_(from.pathway_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inforeq()) {
    inforeq_ = new ::txdata::ConnectionInfo(*from.inforeq_);
  } else {
    inforeq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:txdata.ConnectReq)
}

void ConnectReq::SharedCtor() {
  inforeq_ = NULL;
}

ConnectReq::~ConnectReq() {
  // @@protoc_insertion_point(destructor:txdata.ConnectReq)
  SharedDtor();
}

void ConnectReq::SharedDtor() {
  if (this != internal_default_instance()) delete inforeq_;
}

void ConnectReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectReq& ConnectReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ConnectReq.base);
  return *internal_default_instance();
}


void ConnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ConnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pathway_.Clear();
  if (GetArenaNoVirtual() == NULL && inforeq_ != NULL) {
    delete inforeq_;
  }
  inforeq_ = NULL;
  _internal_metadata_.Clear();
}

bool ConnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ConnectReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.ConnectionInfo InfoReq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inforeq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Pathway = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pathway()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathway(this->pathway_size() - 1).data(),
            static_cast<int>(this->pathway(this->pathway_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectReq.Pathway"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ConnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ConnectReq)
  return false;
#undef DO_
}

void ConnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ConnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_inforeq(), output);
  }

  // repeated string Pathway = 2;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectReq.Pathway");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->pathway(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ConnectReq)
}

::google::protobuf::uint8* ConnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ConnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_inforeq(), deterministic, target);
  }

  // repeated string Pathway = 2;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectReq.Pathway");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->pathway(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ConnectReq)
  return target;
}

size_t ConnectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ConnectReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string Pathway = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pathway_size());
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pathway(i));
  }

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inforeq_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ConnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ConnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ConnectReq)
    MergeFrom(*source);
  }
}

void ConnectReq::MergeFrom(const ConnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ConnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pathway_.MergeFrom(from.pathway_);
  if (from.has_inforeq()) {
    mutable_inforeq()->::txdata::ConnectionInfo::MergeFrom(from.inforeq());
  }
}

void ConnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectReq::CopyFrom(const ConnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectReq::IsInitialized() const {
  return true;
}

void ConnectReq::Swap(ConnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectReq::InternalSwap(ConnectReq* other) {
  using std::swap;
  pathway_.InternalSwap(CastToBase(&other->pathway_));
  swap(inforeq_, other->inforeq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectRsp::InitAsDefaultInstance() {
  ::txdata::_ConnectRsp_default_instance_._instance.get_mutable()->inforeq_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
  ::txdata::_ConnectRsp_default_instance_._instance.get_mutable()->inforsp_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectRsp::kInfoReqFieldNumber;
const int ConnectRsp::kInfoRspFieldNumber;
const int ConnectRsp::kErrNoFieldNumber;
const int ConnectRsp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectRsp::ConnectRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ConnectRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ConnectRsp)
}
ConnectRsp::ConnectRsp(const ConnectRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_inforeq()) {
    inforeq_ = new ::txdata::ConnectionInfo(*from.inforeq_);
  } else {
    inforeq_ = NULL;
  }
  if (from.has_inforsp()) {
    inforsp_ = new ::txdata::ConnectionInfo(*from.inforsp_);
  } else {
    inforsp_ = NULL;
  }
  errno_ = from.errno_;
  // @@protoc_insertion_point(copy_constructor:txdata.ConnectRsp)
}

void ConnectRsp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inforeq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errno_) -
      reinterpret_cast<char*>(&inforeq_)) + sizeof(errno_));
}

ConnectRsp::~ConnectRsp() {
  // @@protoc_insertion_point(destructor:txdata.ConnectRsp)
  SharedDtor();
}

void ConnectRsp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inforeq_;
  if (this != internal_default_instance()) delete inforsp_;
}

void ConnectRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectRsp& ConnectRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ConnectRsp.base);
  return *internal_default_instance();
}


void ConnectRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ConnectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && inforeq_ != NULL) {
    delete inforeq_;
  }
  inforeq_ = NULL;
  if (GetArenaNoVirtual() == NULL && inforsp_ != NULL) {
    delete inforsp_;
  }
  inforsp_ = NULL;
  errno_ = 0;
  _internal_metadata_.Clear();
}

bool ConnectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ConnectRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.ConnectionInfo InfoReq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inforeq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.ConnectionInfo InfoRsp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inforsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ErrNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectRsp.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ConnectRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ConnectRsp)
  return false;
#undef DO_
}

void ConnectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ConnectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_inforeq(), output);
  }

  // .txdata.ConnectionInfo InfoRsp = 2;
  if (this->has_inforsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_inforsp(), output);
  }

  // int32 ErrNo = 3;
  if (this->errno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->errno(), output);
  }

  // string ErrMsg = 4;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectRsp.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ConnectRsp)
}

::google::protobuf::uint8* ConnectRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ConnectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_inforeq(), deterministic, target);
  }

  // .txdata.ConnectionInfo InfoRsp = 2;
  if (this->has_inforsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_inforsp(), deterministic, target);
  }

  // int32 ErrNo = 3;
  if (this->errno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->errno(), target);
  }

  // string ErrMsg = 4;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectRsp.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ConnectRsp)
  return target;
}

size_t ConnectRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ConnectRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ErrMsg = 4;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inforeq_);
  }

  // .txdata.ConnectionInfo InfoRsp = 2;
  if (this->has_inforsp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inforsp_);
  }

  // int32 ErrNo = 3;
  if (this->errno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ConnectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ConnectRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ConnectRsp)
    MergeFrom(*source);
  }
}

void ConnectRsp::MergeFrom(const ConnectRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ConnectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_inforeq()) {
    mutable_inforeq()->::txdata::ConnectionInfo::MergeFrom(from.inforeq());
  }
  if (from.has_inforsp()) {
    mutable_inforsp()->::txdata::ConnectionInfo::MergeFrom(from.inforsp());
  }
  if (from.errno() != 0) {
    set_errno(from.errno());
  }
}

void ConnectRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ConnectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectRsp::CopyFrom(const ConnectRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ConnectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectRsp::IsInitialized() const {
  return true;
}

void ConnectRsp::Swap(ConnectRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectRsp::InternalSwap(ConnectRsp* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(inforeq_, other->inforeq_);
  swap(inforsp_, other->inforsp_);
  swap(errno_, other->errno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnlineNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineNotice::kRootIsOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineNotice::OnlineNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_OnlineNotice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.OnlineNotice)
}
OnlineNotice::OnlineNotice(const OnlineNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rootisonline_ = from.rootisonline_;
  // @@protoc_insertion_point(copy_constructor:txdata.OnlineNotice)
}

void OnlineNotice::SharedCtor() {
  rootisonline_ = false;
}

OnlineNotice::~OnlineNotice() {
  // @@protoc_insertion_point(destructor:txdata.OnlineNotice)
  SharedDtor();
}

void OnlineNotice::SharedDtor() {
}

void OnlineNotice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnlineNotice::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineNotice& OnlineNotice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_OnlineNotice.base);
  return *internal_default_instance();
}


void OnlineNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.OnlineNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rootisonline_ = false;
  _internal_metadata_.Clear();
}

bool OnlineNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.OnlineNotice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool RootIsOnline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rootisonline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.OnlineNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.OnlineNotice)
  return false;
#undef DO_
}

void OnlineNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.OnlineNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool RootIsOnline = 1;
  if (this->rootisonline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rootisonline(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.OnlineNotice)
}

::google::protobuf::uint8* OnlineNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.OnlineNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool RootIsOnline = 1;
  if (this->rootisonline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rootisonline(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.OnlineNotice)
  return target;
}

size_t OnlineNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.OnlineNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool RootIsOnline = 1;
  if (this->rootisonline() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlineNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.OnlineNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.OnlineNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.OnlineNotice)
    MergeFrom(*source);
  }
}

void OnlineNotice::MergeFrom(const OnlineNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.OnlineNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rootisonline() != 0) {
    set_rootisonline(from.rootisonline());
  }
}

void OnlineNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.OnlineNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineNotice::CopyFrom(const OnlineNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.OnlineNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineNotice::IsInitialized() const {
  return true;
}

void OnlineNotice::Swap(OnlineNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineNotice::InternalSwap(OnlineNotice* other) {
  using std::swap;
  swap(rootisonline_, other->rootisonline_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnlineNotice::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemReport::kUserIDFieldNumber;
const int SystemReport::kPathwayFieldNumber;
const int SystemReport::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemReport::SystemReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_SystemReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.SystemReport)
}
SystemReport::SystemReport(const SystemReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pathway_(from.pathway_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.SystemReport)
}

void SystemReport::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SystemReport::~SystemReport() {
  // @@protoc_insertion_point(destructor:txdata.SystemReport)
  SharedDtor();
}

void SystemReport::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SystemReport::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemReport& SystemReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_SystemReport.base);
  return *internal_default_instance();
}


void SystemReport::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.SystemReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pathway_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SystemReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.SystemReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SystemReport.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Pathway = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pathway()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathway(this->pathway_size() - 1).data(),
            static_cast<int>(this->pathway(this->pathway_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SystemReport.Pathway"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SystemReport.Message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.SystemReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.SystemReport)
  return false;
#undef DO_
}

void SystemReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.SystemReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // repeated string Pathway = 2;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Pathway");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->pathway(i), output);
  }

  // string Message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.SystemReport)
}

::google::protobuf::uint8* SystemReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.SystemReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // repeated string Pathway = 2;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Pathway");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->pathway(i), target);
  }

  // string Message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.SystemReport)
  return target;
}

size_t SystemReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.SystemReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string Pathway = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pathway_size());
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pathway(i));
  }

  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string Message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.SystemReport)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.SystemReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.SystemReport)
    MergeFrom(*source);
  }
}

void SystemReport::MergeFrom(const SystemReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.SystemReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pathway_.MergeFrom(from.pathway_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void SystemReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.SystemReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemReport::CopyFrom(const SystemReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.SystemReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemReport::IsInitialized() const {
  return true;
}

void SystemReport::Swap(SystemReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemReport::InternalSwap(SystemReport* other) {
  using std::swap;
  pathway_.InternalSwap(CastToBase(&other->pathway_));
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SystemReport::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryRecordReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRecordReq::kUserIDFieldNumber;
const int QueryRecordReq::kSeqNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRecordReq::QueryRecordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_QueryRecordReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.QueryRecordReq)
}
QueryRecordReq::QueryRecordReq(const QueryRecordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  seqno_ = from.seqno_;
  // @@protoc_insertion_point(copy_constructor:txdata.QueryRecordReq)
}

void QueryRecordReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
}

QueryRecordReq::~QueryRecordReq() {
  // @@protoc_insertion_point(destructor:txdata.QueryRecordReq)
  SharedDtor();
}

void QueryRecordReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryRecordReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryRecordReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRecordReq& QueryRecordReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_QueryRecordReq.base);
  return *internal_default_instance();
}


void QueryRecordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.QueryRecordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool QueryRecordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.QueryRecordReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.QueryRecordReq.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 SeqNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.QueryRecordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.QueryRecordReq)
  return false;
#undef DO_
}

void QueryRecordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.QueryRecordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordReq.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.QueryRecordReq)
}

::google::protobuf::uint8* QueryRecordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.QueryRecordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordReq.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.QueryRecordReq)
  return target;
}

size_t QueryRecordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.QueryRecordReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRecordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.QueryRecordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRecordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRecordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.QueryRecordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.QueryRecordReq)
    MergeFrom(*source);
  }
}

void QueryRecordReq::MergeFrom(const QueryRecordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.QueryRecordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
}

void QueryRecordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.QueryRecordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRecordReq::CopyFrom(const QueryRecordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.QueryRecordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRecordReq::IsInitialized() const {
  return true;
}

void QueryRecordReq::Swap(QueryRecordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRecordReq::InternalSwap(QueryRecordReq* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seqno_, other->seqno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRecordReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryRecordRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRecordRsp::kUserIDFieldNumber;
const int QueryRecordRsp::kSeqNoFieldNumber;
const int QueryRecordRsp::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRecordRsp::QueryRecordRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_QueryRecordRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.QueryRecordRsp)
}
QueryRecordRsp::QueryRecordRsp(const QueryRecordRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  seqno_ = from.seqno_;
  // @@protoc_insertion_point(copy_constructor:txdata.QueryRecordRsp)
}

void QueryRecordRsp::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
}

QueryRecordRsp::~QueryRecordRsp() {
  // @@protoc_insertion_point(destructor:txdata.QueryRecordRsp)
  SharedDtor();
}

void QueryRecordRsp::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryRecordRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryRecordRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRecordRsp& QueryRecordRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_QueryRecordRsp.base);
  return *internal_default_instance();
}


void QueryRecordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.QueryRecordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool QueryRecordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.QueryRecordRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.QueryRecordRsp.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 SeqNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes Data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.QueryRecordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.QueryRecordRsp)
  return false;
#undef DO_
}

void QueryRecordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.QueryRecordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordRsp.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqno(), output);
  }

  // repeated bytes Data = 3;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->data(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.QueryRecordRsp)
}

::google::protobuf::uint8* QueryRecordRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.QueryRecordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordRsp.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqno(), target);
  }

  // repeated bytes Data = 3;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->data(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.QueryRecordRsp)
  return target;
}

size_t QueryRecordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.QueryRecordRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes Data = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0, n = this->data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRecordRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.QueryRecordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRecordRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRecordRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.QueryRecordRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.QueryRecordRsp)
    MergeFrom(*source);
  }
}

void QueryRecordRsp::MergeFrom(const QueryRecordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.QueryRecordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
}

void QueryRecordRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.QueryRecordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRecordRsp::CopyFrom(const QueryRecordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.QueryRecordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRecordRsp::IsInitialized() const {
  return true;
}

void QueryRecordRsp::Swap(QueryRecordRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRecordRsp::InternalSwap(QueryRecordRsp* other) {
  using std::swap;
  data_.InternalSwap(CastToBase(&other->data_));
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seqno_, other->seqno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRecordRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecCmdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecCmdReq::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecCmdReq::ExecCmdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ExecCmdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ExecCmdReq)
}
ExecCmdReq::ExecCmdReq(const ExecCmdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.ExecCmdReq)
}

void ExecCmdReq::SharedCtor() {
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecCmdReq::~ExecCmdReq() {
  // @@protoc_insertion_point(destructor:txdata.ExecCmdReq)
  SharedDtor();
}

void ExecCmdReq::SharedDtor() {
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecCmdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecCmdReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecCmdReq& ExecCmdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ExecCmdReq.base);
  return *internal_default_instance();
}


void ExecCmdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecCmdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ExecCmdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ExecCmdReq.Cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ExecCmdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ExecCmdReq)
  return false;
#undef DO_
}

void ExecCmdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdReq.Cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ExecCmdReq)
}

::google::protobuf::uint8* ExecCmdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdReq.Cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ExecCmdReq)
  return target;
}

size_t ExecCmdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ExecCmdReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecCmdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ExecCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecCmdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecCmdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ExecCmdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ExecCmdReq)
    MergeFrom(*source);
  }
}

void ExecCmdReq::MergeFrom(const ExecCmdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ExecCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd().size() > 0) {

    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
}

void ExecCmdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ExecCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecCmdReq::CopyFrom(const ExecCmdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ExecCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecCmdReq::IsInitialized() const {
  return true;
}

void ExecCmdReq::Swap(ExecCmdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecCmdReq::InternalSwap(ExecCmdReq* other) {
  using std::swap;
  cmd_.Swap(&other->cmd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecCmdReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecCmdRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecCmdRsp::kReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecCmdRsp::ExecCmdRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ExecCmdRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ExecCmdRsp)
}
ExecCmdRsp::ExecCmdRsp(const ExecCmdRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reply().size() > 0) {
    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.ExecCmdRsp)
}

void ExecCmdRsp::SharedCtor() {
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecCmdRsp::~ExecCmdRsp() {
  // @@protoc_insertion_point(destructor:txdata.ExecCmdRsp)
  SharedDtor();
}

void ExecCmdRsp::SharedDtor() {
  reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecCmdRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecCmdRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecCmdRsp& ExecCmdRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ExecCmdRsp.base);
  return *internal_default_instance();
}


void ExecCmdRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecCmdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ExecCmdRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Reply = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reply()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reply().data(), static_cast<int>(this->reply().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ExecCmdRsp.Reply"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ExecCmdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ExecCmdRsp)
  return false;
#undef DO_
}

void ExecCmdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Reply = 1;
  if (this->reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdRsp.Reply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reply(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ExecCmdRsp)
}

::google::protobuf::uint8* ExecCmdRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Reply = 1;
  if (this->reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdRsp.Reply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reply(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ExecCmdRsp)
  return target;
}

size_t ExecCmdRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ExecCmdRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Reply = 1;
  if (this->reply().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reply());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecCmdRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ExecCmdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecCmdRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecCmdRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ExecCmdRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ExecCmdRsp)
    MergeFrom(*source);
  }
}

void ExecCmdRsp::MergeFrom(const ExecCmdRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ExecCmdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reply().size() > 0) {

    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
}

void ExecCmdRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ExecCmdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecCmdRsp::CopyFrom(const ExecCmdRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ExecCmdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecCmdRsp::IsInitialized() const {
  return true;
}

void ExecCmdRsp::Swap(ExecCmdRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecCmdRsp::InternalSwap(ExecCmdRsp* other) {
  using std::swap;
  reply_.Swap(&other->reply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecCmdRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EchoItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoItem::kLocalIDFieldNumber;
const int EchoItem::kRemoteIDFieldNumber;
const int EchoItem::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoItem::EchoItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_EchoItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.EchoItem)
}
EchoItem::EchoItem(const EchoItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  localid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.localid().size() > 0) {
    localid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localid_);
  }
  remoteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remoteid().size() > 0) {
    remoteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remoteid_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.EchoItem)
}

void EchoItem::SharedCtor() {
  localid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remoteid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EchoItem::~EchoItem() {
  // @@protoc_insertion_point(destructor:txdata.EchoItem)
  SharedDtor();
}

void EchoItem::SharedDtor() {
  localid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remoteid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EchoItem::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoItem& EchoItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_EchoItem.base);
  return *internal_default_instance();
}


void EchoItem::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.EchoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  localid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remoteid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EchoItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.EchoItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string LocalID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->localid().data(), static_cast<int>(this->localid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EchoItem.LocalID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RemoteID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remoteid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remoteid().data(), static_cast<int>(this->remoteid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EchoItem.RemoteID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EchoItem.Data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.EchoItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.EchoItem)
  return false;
#undef DO_
}

void EchoItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.EchoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string LocalID = 1;
  if (this->localid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->localid().data(), static_cast<int>(this->localid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.LocalID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->localid(), output);
  }

  // string RemoteID = 2;
  if (this->remoteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remoteid().data(), static_cast<int>(this->remoteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.RemoteID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->remoteid(), output);
  }

  // string Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.EchoItem)
}

::google::protobuf::uint8* EchoItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.EchoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string LocalID = 1;
  if (this->localid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->localid().data(), static_cast<int>(this->localid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.LocalID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->localid(), target);
  }

  // string RemoteID = 2;
  if (this->remoteid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remoteid().data(), static_cast<int>(this->remoteid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.RemoteID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->remoteid(), target);
  }

  // string Data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.EchoItem)
  return target;
}

size_t EchoItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.EchoItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string LocalID = 1;
  if (this->localid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->localid());
  }

  // string RemoteID = 2;
  if (this->remoteid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remoteid());
  }

  // string Data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EchoItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.EchoItem)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.EchoItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.EchoItem)
    MergeFrom(*source);
  }
}

void EchoItem::MergeFrom(const EchoItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.EchoItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.localid().size() > 0) {

    localid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localid_);
  }
  if (from.remoteid().size() > 0) {

    remoteid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remoteid_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void EchoItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.EchoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoItem::CopyFrom(const EchoItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.EchoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoItem::IsInitialized() const {
  return true;
}

void EchoItem::Swap(EchoItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoItem::InternalSwap(EchoItem* other) {
  using std::swap;
  localid_.Swap(&other->localid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remoteid_.Swap(&other->remoteid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EchoItem::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportDataItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportDataItem::kTopicFieldNumber;
const int ReportDataItem::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportDataItem::ReportDataItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ReportDataItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ReportDataItem)
}
ReportDataItem::ReportDataItem(const ReportDataItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.ReportDataItem)
}

void ReportDataItem::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReportDataItem::~ReportDataItem() {
  // @@protoc_insertion_point(destructor:txdata.ReportDataItem)
  SharedDtor();
}

void ReportDataItem::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReportDataItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportDataItem::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportDataItem& ReportDataItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ReportDataItem.base);
  return *internal_default_instance();
}


void ReportDataItem::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ReportDataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReportDataItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ReportDataItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ReportDataItem.Topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ReportDataItem.Data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ReportDataItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ReportDataItem)
  return false;
#undef DO_
}

void ReportDataItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ReportDataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ReportDataItem.Topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ReportDataItem.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ReportDataItem)
}

::google::protobuf::uint8* ReportDataItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ReportDataItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ReportDataItem.Topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ReportDataItem.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ReportDataItem)
  return target;
}

size_t ReportDataItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ReportDataItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportDataItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ReportDataItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportDataItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportDataItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ReportDataItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ReportDataItem)
    MergeFrom(*source);
  }
}

void ReportDataItem::MergeFrom(const ReportDataItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ReportDataItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ReportDataItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ReportDataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportDataItem::CopyFrom(const ReportDataItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ReportDataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportDataItem::IsInitialized() const {
  return true;
}

void ReportDataItem::Swap(ReportDataItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportDataItem::InternalSwap(ReportDataItem* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportDataItem::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendMailItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMailItem::kUsernameFieldNumber;
const int SendMailItem::kPasswordFieldNumber;
const int SendMailItem::kSmtpAddrFieldNumber;
const int SendMailItem::kToFieldNumber;
const int SendMailItem::kSubjectFieldNumber;
const int SendMailItem::kContentTypeFieldNumber;
const int SendMailItem::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMailItem::SendMailItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_SendMailItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.SendMailItem)
}
SendMailItem::SendMailItem(const SendMailItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  smtpaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smtpaddr().size() > 0) {
    smtpaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smtpaddr_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  contenttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contenttype().size() > 0) {
    contenttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttype_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.SendMailItem)
}

void SendMailItem::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smtpaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendMailItem::~SendMailItem() {
  // @@protoc_insertion_point(destructor:txdata.SendMailItem)
  SharedDtor();
}

void SendMailItem::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smtpaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendMailItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendMailItem::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendMailItem& SendMailItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_SendMailItem.base);
  return *internal_default_instance();
}


void SendMailItem::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.SendMailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smtpaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendMailItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.SendMailItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SendMailItem.Username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SendMailItem.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SmtpAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smtpaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smtpaddr().data(), static_cast<int>(this->smtpaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SendMailItem.SmtpAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string To = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SendMailItem.To"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Subject = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SendMailItem.Subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ContentType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contenttype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contenttype().data(), static_cast<int>(this->contenttype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SendMailItem.ContentType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SendMailItem.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.SendMailItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.SendMailItem)
  return false;
#undef DO_
}

void SendMailItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.SendMailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string SmtpAddr = 3;
  if (this->smtpaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smtpaddr().data(), static_cast<int>(this->smtpaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.SmtpAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smtpaddr(), output);
  }

  // string To = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.To");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // string Subject = 5;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->subject(), output);
  }

  // string ContentType = 6;
  if (this->contenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttype().data(), static_cast<int>(this->contenttype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.ContentType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->contenttype(), output);
  }

  // string Content = 7;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.SendMailItem)
}

::google::protobuf::uint8* SendMailItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.SendMailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string SmtpAddr = 3;
  if (this->smtpaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smtpaddr().data(), static_cast<int>(this->smtpaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.SmtpAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smtpaddr(), target);
  }

  // string To = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.To");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // string Subject = 5;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->subject(), target);
  }

  // string ContentType = 6;
  if (this->contenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttype().data(), static_cast<int>(this->contenttype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.ContentType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->contenttype(), target);
  }

  // string Content = 7;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SendMailItem.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.SendMailItem)
  return target;
}

size_t SendMailItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.SendMailItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string SmtpAddr = 3;
  if (this->smtpaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smtpaddr());
  }

  // string To = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string Subject = 5;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string ContentType = 6;
  if (this->contenttype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contenttype());
  }

  // string Content = 7;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendMailItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.SendMailItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SendMailItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMailItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.SendMailItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.SendMailItem)
    MergeFrom(*source);
  }
}

void SendMailItem::MergeFrom(const SendMailItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.SendMailItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.smtpaddr().size() > 0) {

    smtpaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smtpaddr_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.contenttype().size() > 0) {

    contenttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttype_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void SendMailItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.SendMailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMailItem::CopyFrom(const SendMailItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.SendMailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMailItem::IsInitialized() const {
  return true;
}

void SendMailItem::Swap(SendMailItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMailItem::InternalSwap(SendMailItem* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smtpaddr_.Swap(&other->smtpaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contenttype_.Swap(&other->contenttype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendMailItem::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace txdata
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::UniKey* Arena::CreateMaybeMessage< ::txdata::UniKey >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::UniKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::MessageAck* Arena::CreateMaybeMessage< ::txdata::MessageAck >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::MessageAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::CommonErr* Arena::CreateMaybeMessage< ::txdata::CommonErr >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::CommonErr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::CommonReq* Arena::CreateMaybeMessage< ::txdata::CommonReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::CommonReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::CommonRsp* Arena::CreateMaybeMessage< ::txdata::CommonRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::CommonRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ConnectionInfo* Arena::CreateMaybeMessage< ::txdata::ConnectionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ConnectionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::DisconnectedData* Arena::CreateMaybeMessage< ::txdata::DisconnectedData >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::DisconnectedData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ConnectReq* Arena::CreateMaybeMessage< ::txdata::ConnectReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ConnectReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ConnectRsp* Arena::CreateMaybeMessage< ::txdata::ConnectRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ConnectRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::OnlineNotice* Arena::CreateMaybeMessage< ::txdata::OnlineNotice >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::OnlineNotice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::SystemReport* Arena::CreateMaybeMessage< ::txdata::SystemReport >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::SystemReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::QueryRecordReq* Arena::CreateMaybeMessage< ::txdata::QueryRecordReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::QueryRecordReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::QueryRecordRsp* Arena::CreateMaybeMessage< ::txdata::QueryRecordRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::QueryRecordRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ExecCmdReq* Arena::CreateMaybeMessage< ::txdata::ExecCmdReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ExecCmdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ExecCmdRsp* Arena::CreateMaybeMessage< ::txdata::ExecCmdRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ExecCmdRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::EchoItem* Arena::CreateMaybeMessage< ::txdata::EchoItem >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::EchoItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ReportDataItem* Arena::CreateMaybeMessage< ::txdata::ReportDataItem >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ReportDataItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::SendMailItem* Arena::CreateMaybeMessage< ::txdata::SendMailItem >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::SendMailItem >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
