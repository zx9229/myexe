// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: txdata.proto

#include "txdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_txdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_txdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_txdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UniKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_txdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConnectReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_txdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QryConnInfoRsp_CacheEntry_DoNotUse;
}  // namespace protobuf_txdata_2eproto
namespace txdata {
class UniKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UniKey>
      _instance;
} _UniKey_default_instance_;
class Common1ReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Common1Req>
      _instance;
} _Common1Req_default_instance_;
class Common1RspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Common1Rsp>
      _instance;
} _Common1Rsp_default_instance_;
class Common2ReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Common2Req>
      _instance;
} _Common2Req_default_instance_;
class Common2RspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Common2Rsp>
      _instance;
} _Common2Rsp_default_instance_;
class Common2AckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Common2Ack>
      _instance;
} _Common2Ack_default_instance_;
class CommonErrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonErr>
      _instance;
} _CommonErr_default_instance_;
class ConnectionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionInfo>
      _instance;
} _ConnectionInfo_default_instance_;
class DisconnectedDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisconnectedData>
      _instance;
} _DisconnectedData_default_instance_;
class ConnectReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectReq>
      _instance;
} _ConnectReq_default_instance_;
class ConnectRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectRsp>
      _instance;
} _ConnectRsp_default_instance_;
class OnlineNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlineNotice>
      _instance;
} _OnlineNotice_default_instance_;
class SystemReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemReport>
      _instance;
} _SystemReport_default_instance_;
class EchoItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EchoItem>
      _instance;
} _EchoItem_default_instance_;
class BinItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BinItem>
      _instance;
} _BinItem_default_instance_;
class EmailItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailItem>
      _instance;
} _EmailItem_default_instance_;
class QryConnInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QryConnInfoReq>
      _instance;
} _QryConnInfoReq_default_instance_;
class QryConnInfoRsp_CacheEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QryConnInfoRsp_CacheEntry_DoNotUse>
      _instance;
} _QryConnInfoRsp_CacheEntry_DoNotUse_default_instance_;
class QryConnInfoRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QryConnInfoRsp>
      _instance;
} _QryConnInfoRsp_default_instance_;
class QueryRecordReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRecordReq>
      _instance;
} _QueryRecordReq_default_instance_;
class QueryRecordRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRecordRsp>
      _instance;
} _QueryRecordRsp_default_instance_;
class ExecCmdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecCmdReq>
      _instance;
} _ExecCmdReq_default_instance_;
class ExecCmdRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecCmdRsp>
      _instance;
} _ExecCmdRsp_default_instance_;
class PushWrapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushWrap>
      _instance;
} _PushWrap_default_instance_;
class PushItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushItem>
      _instance;
} _PushItem_default_instance_;
class SubscribeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeReq>
      _instance;
} _SubscribeReq_default_instance_;
class SubscribeRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRsp>
      _instance;
} _SubscribeRsp_default_instance_;
}  // namespace txdata
namespace protobuf_txdata_2eproto {
static void InitDefaultsUniKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_UniKey_default_instance_;
    new (ptr) ::txdata::UniKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::UniKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UniKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUniKey}, {}};

static void InitDefaultsCommon1Req() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_Common1Req_default_instance_;
    new (ptr) ::txdata::Common1Req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::Common1Req::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Common1Req =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommon1Req}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsCommon1Rsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_Common1Rsp_default_instance_;
    new (ptr) ::txdata::Common1Rsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::Common1Rsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Common1Rsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommon1Rsp}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsCommon2Req() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_Common2Req_default_instance_;
    new (ptr) ::txdata::Common2Req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::Common2Req::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Common2Req =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCommon2Req}, {
      &protobuf_txdata_2eproto::scc_info_UniKey.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsCommon2Rsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_Common2Rsp_default_instance_;
    new (ptr) ::txdata::Common2Rsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::Common2Rsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Common2Rsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCommon2Rsp}, {
      &protobuf_txdata_2eproto::scc_info_UniKey.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsCommon2Ack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_Common2Ack_default_instance_;
    new (ptr) ::txdata::Common2Ack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::Common2Ack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Common2Ack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommon2Ack}, {
      &protobuf_txdata_2eproto::scc_info_UniKey.base,}};

static void InitDefaultsCommonErr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_CommonErr_default_instance_;
    new (ptr) ::txdata::CommonErr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::CommonErr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommonErr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommonErr}, {}};

static void InitDefaultsConnectionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ConnectionInfo_default_instance_;
    new (ptr) ::txdata::ConnectionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ConnectionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionInfo}, {}};

static void InitDefaultsDisconnectedData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_DisconnectedData_default_instance_;
    new (ptr) ::txdata::DisconnectedData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::DisconnectedData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DisconnectedData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDisconnectedData}, {
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base,}};

static void InitDefaultsConnectReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ConnectReq_default_instance_;
    new (ptr) ::txdata::ConnectReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ConnectReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectReq}, {
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base,}};

static void InitDefaultsConnectRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ConnectRsp_default_instance_;
    new (ptr) ::txdata::ConnectRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ConnectRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectRsp}, {
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base,}};

static void InitDefaultsOnlineNotice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_OnlineNotice_default_instance_;
    new (ptr) ::txdata::OnlineNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::OnlineNotice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnlineNotice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnlineNotice}, {}};

static void InitDefaultsSystemReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_SystemReport_default_instance_;
    new (ptr) ::txdata::SystemReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::SystemReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemReport}, {}};

static void InitDefaultsEchoItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_EchoItem_default_instance_;
    new (ptr) ::txdata::EchoItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::EchoItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EchoItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEchoItem}, {}};

static void InitDefaultsBinItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_BinItem_default_instance_;
    new (ptr) ::txdata::BinItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::BinItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BinItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBinItem}, {}};

static void InitDefaultsEmailItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_EmailItem_default_instance_;
    new (ptr) ::txdata::EmailItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::EmailItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmailItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmailItem}, {}};

static void InitDefaultsQryConnInfoReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_QryConnInfoReq_default_instance_;
    new (ptr) ::txdata::QryConnInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::QryConnInfoReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QryConnInfoReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQryConnInfoReq}, {}};

static void InitDefaultsQryConnInfoRsp_CacheEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_QryConnInfoRsp_CacheEntry_DoNotUse_default_instance_;
    new (ptr) ::txdata::QryConnInfoRsp_CacheEntry_DoNotUse();
  }
  ::txdata::QryConnInfoRsp_CacheEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QryConnInfoRsp_CacheEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQryConnInfoRsp_CacheEntry_DoNotUse}, {
      &protobuf_txdata_2eproto::scc_info_ConnectReq.base,}};

static void InitDefaultsQryConnInfoRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_QryConnInfoRsp_default_instance_;
    new (ptr) ::txdata::QryConnInfoRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::QryConnInfoRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QryConnInfoRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQryConnInfoRsp}, {
      &protobuf_txdata_2eproto::scc_info_QryConnInfoRsp_CacheEntry_DoNotUse.base,}};

static void InitDefaultsQueryRecordReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_QueryRecordReq_default_instance_;
    new (ptr) ::txdata::QueryRecordReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::QueryRecordReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryRecordReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryRecordReq}, {}};

static void InitDefaultsQueryRecordRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_QueryRecordRsp_default_instance_;
    new (ptr) ::txdata::QueryRecordRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::QueryRecordRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryRecordRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryRecordRsp}, {}};

static void InitDefaultsExecCmdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ExecCmdReq_default_instance_;
    new (ptr) ::txdata::ExecCmdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ExecCmdReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecCmdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecCmdReq}, {}};

static void InitDefaultsExecCmdRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_ExecCmdRsp_default_instance_;
    new (ptr) ::txdata::ExecCmdRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::ExecCmdRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecCmdRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecCmdRsp}, {}};

static void InitDefaultsPushWrap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_PushWrap_default_instance_;
    new (ptr) ::txdata::PushWrap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::PushWrap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PushWrap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPushWrap}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsPushItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_PushItem_default_instance_;
    new (ptr) ::txdata::PushItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::PushItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PushItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPushItem}, {}};

static void InitDefaultsSubscribeReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_SubscribeReq_default_instance_;
    new (ptr) ::txdata::SubscribeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::SubscribeReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SubscribeReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubscribeReq}, {}};

static void InitDefaultsSubscribeRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::txdata::_SubscribeRsp_default_instance_;
    new (ptr) ::txdata::SubscribeRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::txdata::SubscribeRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SubscribeRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubscribeRsp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UniKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Common1Req.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Common1Rsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Common2Req.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Common2Rsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Common2Ack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommonErr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisconnectedData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnlineNotice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EchoItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BinItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QryConnInfoReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QryConnInfoRsp_CacheEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QryConnInfoRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRecordReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRecordRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecCmdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecCmdRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushWrap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRsp.base);
}

::google::protobuf::Metadata file_level_metadata[27];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, msgno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::UniKey, seqno_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, msgno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, seqno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, batchno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, refnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, reftext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, toroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, islog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, ispush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, reqtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, reqdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Req, reqtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, msgno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, seqno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, batchno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, refnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, reftext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, toroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, islog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, ispush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, rsptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, rspdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, rsptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common1Rsp, islast_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, batchno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, refnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, reftext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, toroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, islog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, issafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, ispush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, upcache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, reqtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, reqdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Req, reqtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, batchno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, refnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, reftext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, toroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, islog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, issafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, ispush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, upcache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, rsptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, rspdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, rsptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Rsp, islast_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Ack, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Ack, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Ack, recverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Ack, toroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::Common2Ack, islog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonErr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonErr, errno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::CommonErr, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, belongid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, linkmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, exepid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, exepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectionInfo, remark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::DisconnectedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::DisconnectedData, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectReq, inforeq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectReq, pathway_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, inforeq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, inforsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, errno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ConnectRsp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::OnlineNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::OnlineNotice, rootisonline_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, pathway_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SystemReport, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, rspcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EchoItem, secgap_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::BinItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::BinItem, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::BinItem, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, smtpaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, contenttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::EmailItem, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoRsp_CacheEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoRsp_CacheEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoRsp_CacheEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoRsp_CacheEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoRsp, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QryConnInfoRsp, cache_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordReq, seqno_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, seqno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::QueryRecordRsp, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdReq, cmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::ExecCmdRsp, reply_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushWrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushWrap, msgno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushWrap, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushWrap, msgtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushWrap, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushWrap, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushItem, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushItem, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::PushItem, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SubscribeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SubscribeReq, frommsgno_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SubscribeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SubscribeRsp, frommsgno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SubscribeRsp, errno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::txdata::SubscribeRsp, errmsg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::txdata::UniKey)},
  { 8, -1, sizeof(::txdata::Common1Req)},
  { 26, -1, sizeof(::txdata::Common1Rsp)},
  { 45, -1, sizeof(::txdata::Common2Req)},
  { 64, -1, sizeof(::txdata::Common2Rsp)},
  { 84, -1, sizeof(::txdata::Common2Ack)},
  { 94, -1, sizeof(::txdata::CommonErr)},
  { 101, -1, sizeof(::txdata::ConnectionInfo)},
  { 113, -1, sizeof(::txdata::DisconnectedData)},
  { 119, -1, sizeof(::txdata::ConnectReq)},
  { 126, -1, sizeof(::txdata::ConnectRsp)},
  { 135, -1, sizeof(::txdata::OnlineNotice)},
  { 141, -1, sizeof(::txdata::SystemReport)},
  { 150, -1, sizeof(::txdata::EchoItem)},
  { 158, -1, sizeof(::txdata::BinItem)},
  { 165, -1, sizeof(::txdata::EmailItem)},
  { 177, -1, sizeof(::txdata::QryConnInfoReq)},
  { 182, 189, sizeof(::txdata::QryConnInfoRsp_CacheEntry_DoNotUse)},
  { 191, -1, sizeof(::txdata::QryConnInfoRsp)},
  { 198, -1, sizeof(::txdata::QueryRecordReq)},
  { 205, -1, sizeof(::txdata::QueryRecordRsp)},
  { 213, -1, sizeof(::txdata::ExecCmdReq)},
  { 219, -1, sizeof(::txdata::ExecCmdRsp)},
  { 225, -1, sizeof(::txdata::PushWrap)},
  { 235, -1, sizeof(::txdata::PushItem)},
  { 243, -1, sizeof(::txdata::SubscribeReq)},
  { 249, -1, sizeof(::txdata::SubscribeRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_UniKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_Common1Req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_Common1Rsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_Common2Req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_Common2Rsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_Common2Ack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_CommonErr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ConnectionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_DisconnectedData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ConnectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ConnectRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_OnlineNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_SystemReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_EchoItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_BinItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_EmailItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_QryConnInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_QryConnInfoRsp_CacheEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_QryConnInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_QueryRecordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_QueryRecordRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ExecCmdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_ExecCmdRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_PushWrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_PushItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_SubscribeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::txdata::_SubscribeRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "txdata.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 27);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014txdata.proto\022\006txdata\032\037google/protobuf/"
      "timestamp.proto\"6\n\006UniKey\022\016\n\006UserID\030\001 \001("
      "\t\022\r\n\005MsgNo\030\002 \001(\003\022\r\n\005SeqNo\030\003 \001(\005\"\217\002\n\nComm"
      "on1Req\022\r\n\005MsgNo\030\001 \001(\003\022\r\n\005SeqNo\030\002 \001(\005\022\017\n\007"
      "BatchNo\030\003 \001(\003\022\016\n\006RefNum\030\004 \001(\003\022\017\n\007RefText"
      "\030\005 \001(\t\022\020\n\010SenderID\030\006 \001(\t\022\020\n\010RecverID\030\007 \001"
      "(\t\022\016\n\006ToRoot\030\010 \001(\010\022\r\n\005IsLog\030\t \001(\010\022\016\n\006IsP"
      "ush\030\n \001(\010\022 \n\007ReqType\030\013 \001(\0162\017.txdata.MsgT"
      "ype\022\017\n\007ReqData\030\014 \001(\014\022+\n\007ReqTime\030\r \001(\0132\032."
      "google.protobuf.Timestamp\"\237\002\n\nCommon1Rsp"
      "\022\r\n\005MsgNo\030\001 \001(\003\022\r\n\005SeqNo\030\002 \001(\005\022\017\n\007BatchN"
      "o\030\003 \001(\003\022\016\n\006RefNum\030\004 \001(\003\022\017\n\007RefText\030\005 \001(\t"
      "\022\020\n\010SenderID\030\006 \001(\t\022\020\n\010RecverID\030\007 \001(\t\022\016\n\006"
      "ToRoot\030\010 \001(\010\022\r\n\005IsLog\030\t \001(\010\022\016\n\006IsPush\030\n "
      "\001(\010\022 \n\007RspType\030\013 \001(\0162\017.txdata.MsgType\022\017\n"
      "\007RspData\030\014 \001(\014\022+\n\007RspTime\030\r \001(\0132\032.google"
      ".protobuf.Timestamp\022\016\n\006IsLast\030\016 \001(\010\"\257\002\n\n"
      "Common2Req\022\033\n\003Key\030\001 \001(\0132\016.txdata.UniKey\022"
      "\017\n\007BatchNo\030\002 \001(\003\022\016\n\006RefNum\030\003 \001(\003\022\017\n\007RefT"
      "ext\030\004 \001(\t\022\020\n\010SenderID\030\005 \001(\t\022\020\n\010RecverID\030"
      "\006 \001(\t\022\016\n\006ToRoot\030\007 \001(\010\022\r\n\005IsLog\030\010 \001(\010\022\016\n\006"
      "IsSafe\030\t \001(\010\022\016\n\006IsPush\030\n \001(\010\022\017\n\007UpCache\030"
      "\013 \001(\010\022 \n\007ReqType\030\014 \001(\0162\017.txdata.MsgType\022"
      "\017\n\007ReqData\030\r \001(\014\022+\n\007ReqTime\030\016 \001(\0132\032.goog"
      "le.protobuf.Timestamp\"\277\002\n\nCommon2Rsp\022\033\n\003"
      "Key\030\001 \001(\0132\016.txdata.UniKey\022\017\n\007BatchNo\030\002 \001"
      "(\003\022\016\n\006RefNum\030\003 \001(\003\022\017\n\007RefText\030\004 \001(\t\022\020\n\010S"
      "enderID\030\005 \001(\t\022\020\n\010RecverID\030\006 \001(\t\022\016\n\006ToRoo"
      "t\030\007 \001(\010\022\r\n\005IsLog\030\010 \001(\010\022\016\n\006IsSafe\030\t \001(\010\022\016"
      "\n\006IsPush\030\n \001(\010\022\017\n\007UpCache\030\013 \001(\010\022 \n\007RspTy"
      "pe\030\014 \001(\0162\017.txdata.MsgType\022\017\n\007RspData\030\r \001"
      "(\014\022+\n\007RspTime\030\016 \001(\0132\032.google.protobuf.Ti"
      "mestamp\022\016\n\006IsLast\030\017 \001(\010\"l\n\nCommon2Ack\022\033\n"
      "\003Key\030\001 \001(\0132\016.txdata.UniKey\022\020\n\010SenderID\030\002"
      " \001(\t\022\020\n\010RecverID\030\003 \001(\t\022\016\n\006ToRoot\030\004 \001(\010\022\r"
      "\n\005IsLog\030\005 \001(\010\"*\n\tCommonErr\022\r\n\005ErrNo\030\001 \001("
      "\005\022\016\n\006ErrMsg\030\002 \001(\t\"\327\001\n\016ConnectionInfo\022\016\n\006"
      "UserID\030\001 \001(\t\022\020\n\010BelongID\030\002 \001(\t\022\017\n\007Versio"
      "n\030\003 \001(\t\0221\n\010LinkMode\030\004 \001(\0162\037.txdata.Conne"
      "ctionInfo.LinkType\022\016\n\006ExePid\030\005 \001(\005\022\017\n\007Ex"
      "ePath\030\006 \001(\t\022\016\n\006Remark\030\007 \001(\t\".\n\010LinkType\022"
      "\t\n\005Zero2\020\000\022\013\n\007CONNECT\020\001\022\n\n\006ACCEPT\020\002\"8\n\020D"
      "isconnectedData\022$\n\004Info\030\001 \001(\0132\026.txdata.C"
      "onnectionInfo\"F\n\nConnectReq\022\'\n\007InfoReq\030\001"
      " \001(\0132\026.txdata.ConnectionInfo\022\017\n\007Pathway\030"
      "\002 \003(\t\"}\n\nConnectRsp\022\'\n\007InfoReq\030\001 \001(\0132\026.t"
      "xdata.ConnectionInfo\022\'\n\007InfoRsp\030\002 \001(\0132\026."
      "txdata.ConnectionInfo\022\r\n\005ErrNo\030\003 \001(\005\022\016\n\006"
      "ErrMsg\030\004 \001(\t\"$\n\014OnlineNotice\022\024\n\014RootIsOn"
      "line\030\001 \001(\010\"O\n\014SystemReport\022\r\n\005Level\030\001 \001("
      "\005\022\016\n\006UserID\030\002 \001(\t\022\017\n\007Pathway\030\003 \003(\t\022\017\n\007Me"
      "ssage\030\004 \001(\t\"8\n\010EchoItem\022\014\n\004Data\030\001 \001(\t\022\016\n"
      "\006RspCnt\030\002 \001(\005\022\016\n\006SecGap\030\003 \001(\005\"%\n\007BinItem"
      "\022\014\n\004Type\030\001 \001(\005\022\014\n\004Data\030\002 \003(\014\"\204\001\n\tEmailIt"
      "em\022\020\n\010Username\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\022\020"
      "\n\010SmtpAddr\030\003 \001(\t\022\n\n\002To\030\004 \001(\t\022\017\n\007Subject\030"
      "\005 \001(\t\022\023\n\013ContentType\030\006 \001(\t\022\017\n\007Content\030\007 "
      "\001(\t\"\020\n\016QryConnInfoReq\"\224\001\n\016QryConnInfoRsp"
      "\022\016\n\006UserID\030\001 \001(\t\0220\n\005Cache\030\002 \003(\0132!.txdata"
      ".QryConnInfoRsp.CacheEntry\032@\n\nCacheEntry"
      "\022\013\n\003key\030\001 \001(\t\022!\n\005value\030\002 \001(\0132\022.txdata.Co"
      "nnectReq:\0028\001\"/\n\016QueryRecordReq\022\016\n\006UserID"
      "\030\001 \001(\t\022\r\n\005SeqNo\030\002 \001(\003\"=\n\016QueryRecordRsp\022"
      "\016\n\006UserID\030\001 \001(\t\022\r\n\005SeqNo\030\002 \001(\003\022\014\n\004Data\030\003"
      " \003(\014\"\031\n\nExecCmdReq\022\013\n\003Cmd\030\001 \001(\t\"\033\n\nExecC"
      "mdRsp\022\r\n\005Reply\030\001 \001(\t\"\211\001\n\010PushWrap\022\r\n\005Msg"
      "No\030\001 \001(\003\022\016\n\006UserID\030\002 \001(\t\022+\n\007MsgTime\030\003 \001("
      "\0132\032.google.protobuf.Timestamp\022 \n\007MsgType"
      "\030\013 \001(\0162\017.txdata.MsgType\022\017\n\007MsgData\030\014 \001(\014"
      "\";\n\010PushItem\022\017\n\007Subject\030\001 \001(\t\022\017\n\007Content"
      "\030\002 \001(\t\022\r\n\005Level\030\003 \001(\005\"!\n\014SubscribeReq\022\021\n"
      "\tFromMsgNo\030\001 \001(\003\"@\n\014SubscribeRsp\022\021\n\tFrom"
      "MsgNo\030\001 \001(\003\022\r\n\005ErrNo\030\002 \001(\005\022\016\n\006ErrMsg\030\003 \001"
      "(\t*\206\004\n\007MsgType\022\t\n\005Zero1\020\000\022\021\n\rID_Common1R"
      "eq\020\001\022\021\n\rID_Common1Rsp\020\002\022\021\n\rID_Common2Req"
      "\020\003\022\021\n\rID_Common2Rsp\020\004\022\021\n\rID_Common2Ack\020\005"
      "\022\020\n\014ID_CommonErr\020\006\022\025\n\021ID_ConnectionInfo\020"
      "\007\022\027\n\023ID_DisconnectedData\020\010\022\021\n\rID_Connect"
      "Req\020\t\022\021\n\rID_ConnectRsp\020\n\022\023\n\017ID_OnlineNot"
      "ice\020\013\022\023\n\017ID_SystemReport\020\014\022\017\n\013ID_EchoIte"
      "m\020\r\022\016\n\nID_BinItem\020\016\022\020\n\014ID_EmailItem\020\017\022\025\n"
      "\021ID_QryConnInfoReq\020\020\022\025\n\021ID_QryConnInfoRs"
      "p\020\021\022\025\n\021ID_QueryRecordReq\020\022\022\025\n\021ID_QueryRe"
      "cordRsp\020\023\022\021\n\rID_ExecCmdReq\020\024\022\021\n\rID_ExecC"
      "mdRsp\020\025\022\017\n\013ID_PushWrap\020\026\022\017\n\013ID_PushItem\020"
      "\027\022\023\n\017ID_SubscribeReq\020\030\022\023\n\017ID_SubscribeRs"
      "p\020\031P\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3453);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "txdata.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_txdata_2eproto
namespace txdata {
const ::google::protobuf::EnumDescriptor* ConnectionInfo_LinkType_descriptor() {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txdata_2eproto::file_level_enum_descriptors[0];
}
bool ConnectionInfo_LinkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConnectionInfo_LinkType ConnectionInfo::Zero2;
const ConnectionInfo_LinkType ConnectionInfo::CONNECT;
const ConnectionInfo_LinkType ConnectionInfo::ACCEPT;
const ConnectionInfo_LinkType ConnectionInfo::LinkType_MIN;
const ConnectionInfo_LinkType ConnectionInfo::LinkType_MAX;
const int ConnectionInfo::LinkType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txdata_2eproto::file_level_enum_descriptors[1];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UniKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UniKey::kUserIDFieldNumber;
const int UniKey::kMsgNoFieldNumber;
const int UniKey::kSeqNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UniKey::UniKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_UniKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.UniKey)
}
UniKey::UniKey(const UniKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  ::memcpy(&msgno_, &from.msgno_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqno_) -
    reinterpret_cast<char*>(&msgno_)) + sizeof(seqno_));
  // @@protoc_insertion_point(copy_constructor:txdata.UniKey)
}

void UniKey::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqno_) -
      reinterpret_cast<char*>(&msgno_)) + sizeof(seqno_));
}

UniKey::~UniKey() {
  // @@protoc_insertion_point(destructor:txdata.UniKey)
  SharedDtor();
}

void UniKey::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UniKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UniKey::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UniKey& UniKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_UniKey.base);
  return *internal_default_instance();
}


void UniKey::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.UniKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqno_) -
      reinterpret_cast<char*>(&msgno_)) + sizeof(seqno_));
  _internal_metadata_.Clear();
}

bool UniKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.UniKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.UniKey.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 MsgNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SeqNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.UniKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.UniKey)
  return false;
#undef DO_
}

void UniKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.UniKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.UniKey.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // int64 MsgNo = 2;
  if (this->msgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->msgno(), output);
  }

  // int32 SeqNo = 3;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seqno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.UniKey)
}

::google::protobuf::uint8* UniKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.UniKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.UniKey.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // int64 MsgNo = 2;
  if (this->msgno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->msgno(), target);
  }

  // int32 SeqNo = 3;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seqno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.UniKey)
  return target;
}

size_t UniKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.UniKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int64 MsgNo = 2;
  if (this->msgno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgno());
  }

  // int32 SeqNo = 3;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seqno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UniKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.UniKey)
  GOOGLE_DCHECK_NE(&from, this);
  const UniKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UniKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.UniKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.UniKey)
    MergeFrom(*source);
  }
}

void UniKey::MergeFrom(const UniKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.UniKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.msgno() != 0) {
    set_msgno(from.msgno());
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
}

void UniKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.UniKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniKey::CopyFrom(const UniKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.UniKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniKey::IsInitialized() const {
  return true;
}

void UniKey::Swap(UniKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UniKey::InternalSwap(UniKey* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgno_, other->msgno_);
  swap(seqno_, other->seqno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UniKey::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Common1Req::InitAsDefaultInstance() {
  ::txdata::_Common1Req_default_instance_._instance.get_mutable()->reqtime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Common1Req::clear_reqtime() {
  if (GetArenaNoVirtual() == NULL && reqtime_ != NULL) {
    delete reqtime_;
  }
  reqtime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Common1Req::kMsgNoFieldNumber;
const int Common1Req::kSeqNoFieldNumber;
const int Common1Req::kBatchNoFieldNumber;
const int Common1Req::kRefNumFieldNumber;
const int Common1Req::kRefTextFieldNumber;
const int Common1Req::kSenderIDFieldNumber;
const int Common1Req::kRecverIDFieldNumber;
const int Common1Req::kToRootFieldNumber;
const int Common1Req::kIsLogFieldNumber;
const int Common1Req::kIsPushFieldNumber;
const int Common1Req::kReqTypeFieldNumber;
const int Common1Req::kReqDataFieldNumber;
const int Common1Req::kReqTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Common1Req::Common1Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_Common1Req.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.Common1Req)
}
Common1Req::Common1Req(const Common1Req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reftext().size() > 0) {
    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  reqdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reqdata().size() > 0) {
    reqdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqdata_);
  }
  if (from.has_reqtime()) {
    reqtime_ = new ::google::protobuf::Timestamp(*from.reqtime_);
  } else {
    reqtime_ = NULL;
  }
  ::memcpy(&msgno_, &from.msgno_,
    static_cast<size_t>(reinterpret_cast<char*>(&reqtype_) -
    reinterpret_cast<char*>(&msgno_)) + sizeof(reqtype_));
  // @@protoc_insertion_point(copy_constructor:txdata.Common1Req)
}

void Common1Req::SharedCtor() {
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&reqtime_)) + sizeof(reqtype_));
}

Common1Req::~Common1Req() {
  // @@protoc_insertion_point(destructor:txdata.Common1Req)
  SharedDtor();
}

void Common1Req::SharedDtor() {
  reftext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete reqtime_;
}

void Common1Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Common1Req::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Common1Req& Common1Req::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_Common1Req.base);
  return *internal_default_instance();
}


void Common1Req::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.Common1Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reftext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqtime_ != NULL) {
    delete reqtime_;
  }
  reqtime_ = NULL;
  ::memset(&msgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&msgno_)) + sizeof(reqtype_));
  _internal_metadata_.Clear();
}

bool Common1Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.Common1Req)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 MsgNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SeqNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BatchNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &batchno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RefNum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RefText = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reftext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reftext().data(), static_cast<int>(this->reftext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common1Req.RefText"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common1Req.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common1Req.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ToRoot = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsPush = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.MsgType ReqType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reqtype(static_cast< ::txdata::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ReqData = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reqdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp ReqTime = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reqtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.Common1Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.Common1Req)
  return false;
#undef DO_
}

void Common1Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.Common1Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->msgno(), output);
  }

  // int32 SeqNo = 2;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seqno(), output);
  }

  // int64 BatchNo = 3;
  if (this->batchno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->batchno(), output);
  }

  // int64 RefNum = 4;
  if (this->refnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->refnum(), output);
  }

  // string RefText = 5;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Req.RefText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->reftext(), output);
  }

  // string SenderID = 6;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Req.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->senderid(), output);
  }

  // string RecverID = 7;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Req.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->recverid(), output);
  }

  // bool ToRoot = 8;
  if (this->toroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->toroot(), output);
  }

  // bool IsLog = 9;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->islog(), output);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->ispush(), output);
  }

  // .txdata.MsgType ReqType = 11;
  if (this->reqtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->reqtype(), output);
  }

  // bytes ReqData = 12;
  if (this->reqdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->reqdata(), output);
  }

  // .google.protobuf.Timestamp ReqTime = 13;
  if (this->has_reqtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_reqtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.Common1Req)
}

::google::protobuf::uint8* Common1Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.Common1Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->msgno(), target);
  }

  // int32 SeqNo = 2;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seqno(), target);
  }

  // int64 BatchNo = 3;
  if (this->batchno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->batchno(), target);
  }

  // int64 RefNum = 4;
  if (this->refnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->refnum(), target);
  }

  // string RefText = 5;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Req.RefText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->reftext(), target);
  }

  // string SenderID = 6;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Req.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->senderid(), target);
  }

  // string RecverID = 7;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Req.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->recverid(), target);
  }

  // bool ToRoot = 8;
  if (this->toroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->toroot(), target);
  }

  // bool IsLog = 9;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->islog(), target);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->ispush(), target);
  }

  // .txdata.MsgType ReqType = 11;
  if (this->reqtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->reqtype(), target);
  }

  // bytes ReqData = 12;
  if (this->reqdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->reqdata(), target);
  }

  // .google.protobuf.Timestamp ReqTime = 13;
  if (this->has_reqtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_reqtime(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.Common1Req)
  return target;
}

size_t Common1Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.Common1Req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RefText = 5;
  if (this->reftext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reftext());
  }

  // string SenderID = 6;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 7;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // bytes ReqData = 12;
  if (this->reqdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reqdata());
  }

  // .google.protobuf.Timestamp ReqTime = 13;
  if (this->has_reqtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reqtime_);
  }

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgno());
  }

  // int64 BatchNo = 3;
  if (this->batchno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->batchno());
  }

  // int64 RefNum = 4;
  if (this->refnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->refnum());
  }

  // int32 SeqNo = 2;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seqno());
  }

  // bool ToRoot = 8;
  if (this->toroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 9;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    total_size += 1 + 1;
  }

  // .txdata.MsgType ReqType = 11;
  if (this->reqtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reqtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Common1Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.Common1Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Common1Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Common1Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.Common1Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.Common1Req)
    MergeFrom(*source);
  }
}

void Common1Req::MergeFrom(const Common1Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.Common1Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reftext().size() > 0) {

    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.reqdata().size() > 0) {

    reqdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqdata_);
  }
  if (from.has_reqtime()) {
    mutable_reqtime()->::google::protobuf::Timestamp::MergeFrom(from.reqtime());
  }
  if (from.msgno() != 0) {
    set_msgno(from.msgno());
  }
  if (from.batchno() != 0) {
    set_batchno(from.batchno());
  }
  if (from.refnum() != 0) {
    set_refnum(from.refnum());
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
  if (from.toroot() != 0) {
    set_toroot(from.toroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
  if (from.ispush() != 0) {
    set_ispush(from.ispush());
  }
  if (from.reqtype() != 0) {
    set_reqtype(from.reqtype());
  }
}

void Common1Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.Common1Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Common1Req::CopyFrom(const Common1Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.Common1Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Common1Req::IsInitialized() const {
  return true;
}

void Common1Req::Swap(Common1Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Common1Req::InternalSwap(Common1Req* other) {
  using std::swap;
  reftext_.Swap(&other->reftext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reqdata_.Swap(&other->reqdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reqtime_, other->reqtime_);
  swap(msgno_, other->msgno_);
  swap(batchno_, other->batchno_);
  swap(refnum_, other->refnum_);
  swap(seqno_, other->seqno_);
  swap(toroot_, other->toroot_);
  swap(islog_, other->islog_);
  swap(ispush_, other->ispush_);
  swap(reqtype_, other->reqtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Common1Req::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Common1Rsp::InitAsDefaultInstance() {
  ::txdata::_Common1Rsp_default_instance_._instance.get_mutable()->rsptime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Common1Rsp::clear_rsptime() {
  if (GetArenaNoVirtual() == NULL && rsptime_ != NULL) {
    delete rsptime_;
  }
  rsptime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Common1Rsp::kMsgNoFieldNumber;
const int Common1Rsp::kSeqNoFieldNumber;
const int Common1Rsp::kBatchNoFieldNumber;
const int Common1Rsp::kRefNumFieldNumber;
const int Common1Rsp::kRefTextFieldNumber;
const int Common1Rsp::kSenderIDFieldNumber;
const int Common1Rsp::kRecverIDFieldNumber;
const int Common1Rsp::kToRootFieldNumber;
const int Common1Rsp::kIsLogFieldNumber;
const int Common1Rsp::kIsPushFieldNumber;
const int Common1Rsp::kRspTypeFieldNumber;
const int Common1Rsp::kRspDataFieldNumber;
const int Common1Rsp::kRspTimeFieldNumber;
const int Common1Rsp::kIsLastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Common1Rsp::Common1Rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_Common1Rsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.Common1Rsp)
}
Common1Rsp::Common1Rsp(const Common1Rsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reftext().size() > 0) {
    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  rspdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rspdata().size() > 0) {
    rspdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdata_);
  }
  if (from.has_rsptime()) {
    rsptime_ = new ::google::protobuf::Timestamp(*from.rsptime_);
  } else {
    rsptime_ = NULL;
  }
  ::memcpy(&msgno_, &from.msgno_,
    static_cast<size_t>(reinterpret_cast<char*>(&rsptype_) -
    reinterpret_cast<char*>(&msgno_)) + sizeof(rsptype_));
  // @@protoc_insertion_point(copy_constructor:txdata.Common1Rsp)
}

void Common1Rsp::SharedCtor() {
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rsptime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rsptype_) -
      reinterpret_cast<char*>(&rsptime_)) + sizeof(rsptype_));
}

Common1Rsp::~Common1Rsp() {
  // @@protoc_insertion_point(destructor:txdata.Common1Rsp)
  SharedDtor();
}

void Common1Rsp::SharedDtor() {
  reftext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rsptime_;
}

void Common1Rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Common1Rsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Common1Rsp& Common1Rsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_Common1Rsp.base);
  return *internal_default_instance();
}


void Common1Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.Common1Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reftext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rsptime_ != NULL) {
    delete rsptime_;
  }
  rsptime_ = NULL;
  ::memset(&msgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rsptype_) -
      reinterpret_cast<char*>(&msgno_)) + sizeof(rsptype_));
  _internal_metadata_.Clear();
}

bool Common1Rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.Common1Rsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 MsgNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SeqNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BatchNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &batchno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RefNum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RefText = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reftext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reftext().data(), static_cast<int>(this->reftext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common1Rsp.RefText"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common1Rsp.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common1Rsp.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ToRoot = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsPush = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.MsgType RspType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rsptype(static_cast< ::txdata::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes RspData = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rspdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp RspTime = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsptime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLast = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.Common1Rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.Common1Rsp)
  return false;
#undef DO_
}

void Common1Rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.Common1Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->msgno(), output);
  }

  // int32 SeqNo = 2;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seqno(), output);
  }

  // int64 BatchNo = 3;
  if (this->batchno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->batchno(), output);
  }

  // int64 RefNum = 4;
  if (this->refnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->refnum(), output);
  }

  // string RefText = 5;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Rsp.RefText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->reftext(), output);
  }

  // string SenderID = 6;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Rsp.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->senderid(), output);
  }

  // string RecverID = 7;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Rsp.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->recverid(), output);
  }

  // bool ToRoot = 8;
  if (this->toroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->toroot(), output);
  }

  // bool IsLog = 9;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->islog(), output);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->ispush(), output);
  }

  // .txdata.MsgType RspType = 11;
  if (this->rsptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->rsptype(), output);
  }

  // bytes RspData = 12;
  if (this->rspdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->rspdata(), output);
  }

  // .google.protobuf.Timestamp RspTime = 13;
  if (this->has_rsptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_rsptime(), output);
  }

  // bool IsLast = 14;
  if (this->islast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->islast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.Common1Rsp)
}

::google::protobuf::uint8* Common1Rsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.Common1Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->msgno(), target);
  }

  // int32 SeqNo = 2;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seqno(), target);
  }

  // int64 BatchNo = 3;
  if (this->batchno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->batchno(), target);
  }

  // int64 RefNum = 4;
  if (this->refnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->refnum(), target);
  }

  // string RefText = 5;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Rsp.RefText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->reftext(), target);
  }

  // string SenderID = 6;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Rsp.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->senderid(), target);
  }

  // string RecverID = 7;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common1Rsp.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->recverid(), target);
  }

  // bool ToRoot = 8;
  if (this->toroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->toroot(), target);
  }

  // bool IsLog = 9;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->islog(), target);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->ispush(), target);
  }

  // .txdata.MsgType RspType = 11;
  if (this->rsptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->rsptype(), target);
  }

  // bytes RspData = 12;
  if (this->rspdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->rspdata(), target);
  }

  // .google.protobuf.Timestamp RspTime = 13;
  if (this->has_rsptime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_rsptime(), deterministic, target);
  }

  // bool IsLast = 14;
  if (this->islast() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->islast(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.Common1Rsp)
  return target;
}

size_t Common1Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.Common1Rsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RefText = 5;
  if (this->reftext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reftext());
  }

  // string SenderID = 6;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 7;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // bytes RspData = 12;
  if (this->rspdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rspdata());
  }

  // .google.protobuf.Timestamp RspTime = 13;
  if (this->has_rsptime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rsptime_);
  }

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgno());
  }

  // int64 BatchNo = 3;
  if (this->batchno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->batchno());
  }

  // int64 RefNum = 4;
  if (this->refnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->refnum());
  }

  // int32 SeqNo = 2;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seqno());
  }

  // bool ToRoot = 8;
  if (this->toroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 9;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLast = 14;
  if (this->islast() != 0) {
    total_size += 1 + 1;
  }

  // .txdata.MsgType RspType = 11;
  if (this->rsptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rsptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Common1Rsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.Common1Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Common1Rsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Common1Rsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.Common1Rsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.Common1Rsp)
    MergeFrom(*source);
  }
}

void Common1Rsp::MergeFrom(const Common1Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.Common1Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reftext().size() > 0) {

    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.rspdata().size() > 0) {

    rspdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdata_);
  }
  if (from.has_rsptime()) {
    mutable_rsptime()->::google::protobuf::Timestamp::MergeFrom(from.rsptime());
  }
  if (from.msgno() != 0) {
    set_msgno(from.msgno());
  }
  if (from.batchno() != 0) {
    set_batchno(from.batchno());
  }
  if (from.refnum() != 0) {
    set_refnum(from.refnum());
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
  if (from.toroot() != 0) {
    set_toroot(from.toroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
  if (from.ispush() != 0) {
    set_ispush(from.ispush());
  }
  if (from.islast() != 0) {
    set_islast(from.islast());
  }
  if (from.rsptype() != 0) {
    set_rsptype(from.rsptype());
  }
}

void Common1Rsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.Common1Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Common1Rsp::CopyFrom(const Common1Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.Common1Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Common1Rsp::IsInitialized() const {
  return true;
}

void Common1Rsp::Swap(Common1Rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Common1Rsp::InternalSwap(Common1Rsp* other) {
  using std::swap;
  reftext_.Swap(&other->reftext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rspdata_.Swap(&other->rspdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rsptime_, other->rsptime_);
  swap(msgno_, other->msgno_);
  swap(batchno_, other->batchno_);
  swap(refnum_, other->refnum_);
  swap(seqno_, other->seqno_);
  swap(toroot_, other->toroot_);
  swap(islog_, other->islog_);
  swap(ispush_, other->ispush_);
  swap(islast_, other->islast_);
  swap(rsptype_, other->rsptype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Common1Rsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Common2Req::InitAsDefaultInstance() {
  ::txdata::_Common2Req_default_instance_._instance.get_mutable()->key_ = const_cast< ::txdata::UniKey*>(
      ::txdata::UniKey::internal_default_instance());
  ::txdata::_Common2Req_default_instance_._instance.get_mutable()->reqtime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Common2Req::clear_reqtime() {
  if (GetArenaNoVirtual() == NULL && reqtime_ != NULL) {
    delete reqtime_;
  }
  reqtime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Common2Req::kKeyFieldNumber;
const int Common2Req::kBatchNoFieldNumber;
const int Common2Req::kRefNumFieldNumber;
const int Common2Req::kRefTextFieldNumber;
const int Common2Req::kSenderIDFieldNumber;
const int Common2Req::kRecverIDFieldNumber;
const int Common2Req::kToRootFieldNumber;
const int Common2Req::kIsLogFieldNumber;
const int Common2Req::kIsSafeFieldNumber;
const int Common2Req::kIsPushFieldNumber;
const int Common2Req::kUpCacheFieldNumber;
const int Common2Req::kReqTypeFieldNumber;
const int Common2Req::kReqDataFieldNumber;
const int Common2Req::kReqTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Common2Req::Common2Req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_Common2Req.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.Common2Req)
}
Common2Req::Common2Req(const Common2Req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reftext().size() > 0) {
    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  reqdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reqdata().size() > 0) {
    reqdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqdata_);
  }
  if (from.has_key()) {
    key_ = new ::txdata::UniKey(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_reqtime()) {
    reqtime_ = new ::google::protobuf::Timestamp(*from.reqtime_);
  } else {
    reqtime_ = NULL;
  }
  ::memcpy(&batchno_, &from.batchno_,
    static_cast<size_t>(reinterpret_cast<char*>(&reqtype_) -
    reinterpret_cast<char*>(&batchno_)) + sizeof(reqtype_));
  // @@protoc_insertion_point(copy_constructor:txdata.Common2Req)
}

void Common2Req::SharedCtor() {
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&key_)) + sizeof(reqtype_));
}

Common2Req::~Common2Req() {
  // @@protoc_insertion_point(destructor:txdata.Common2Req)
  SharedDtor();
}

void Common2Req::SharedDtor() {
  reftext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete reqtime_;
}

void Common2Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Common2Req::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Common2Req& Common2Req::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_Common2Req.base);
  return *internal_default_instance();
}


void Common2Req::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.Common2Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reftext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && reqtime_ != NULL) {
    delete reqtime_;
  }
  reqtime_ = NULL;
  ::memset(&batchno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqtype_) -
      reinterpret_cast<char*>(&batchno_)) + sizeof(reqtype_));
  _internal_metadata_.Clear();
}

bool Common2Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.Common2Req)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.UniKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BatchNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &batchno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RefNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RefText = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reftext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reftext().data(), static_cast<int>(this->reftext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Req.RefText"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Req.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Req.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ToRoot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsSafe = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsPush = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool UpCache = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &upcache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.MsgType ReqType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reqtype(static_cast< ::txdata::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ReqData = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reqdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp ReqTime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reqtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.Common2Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.Common2Req)
  return false;
#undef DO_
}

void Common2Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.Common2Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // int64 BatchNo = 2;
  if (this->batchno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->batchno(), output);
  }

  // int64 RefNum = 3;
  if (this->refnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->refnum(), output);
  }

  // string RefText = 4;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Req.RefText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reftext(), output);
  }

  // string SenderID = 5;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Req.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->senderid(), output);
  }

  // string RecverID = 6;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Req.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->recverid(), output);
  }

  // bool ToRoot = 7;
  if (this->toroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->toroot(), output);
  }

  // bool IsLog = 8;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->islog(), output);
  }

  // bool IsSafe = 9;
  if (this->issafe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->issafe(), output);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->ispush(), output);
  }

  // bool UpCache = 11;
  if (this->upcache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->upcache(), output);
  }

  // .txdata.MsgType ReqType = 12;
  if (this->reqtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->reqtype(), output);
  }

  // bytes ReqData = 13;
  if (this->reqdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->reqdata(), output);
  }

  // .google.protobuf.Timestamp ReqTime = 14;
  if (this->has_reqtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_reqtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.Common2Req)
}

::google::protobuf::uint8* Common2Req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.Common2Req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // int64 BatchNo = 2;
  if (this->batchno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->batchno(), target);
  }

  // int64 RefNum = 3;
  if (this->refnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->refnum(), target);
  }

  // string RefText = 4;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Req.RefText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reftext(), target);
  }

  // string SenderID = 5;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Req.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->senderid(), target);
  }

  // string RecverID = 6;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Req.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->recverid(), target);
  }

  // bool ToRoot = 7;
  if (this->toroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->toroot(), target);
  }

  // bool IsLog = 8;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->islog(), target);
  }

  // bool IsSafe = 9;
  if (this->issafe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->issafe(), target);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->ispush(), target);
  }

  // bool UpCache = 11;
  if (this->upcache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->upcache(), target);
  }

  // .txdata.MsgType ReqType = 12;
  if (this->reqtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->reqtype(), target);
  }

  // bytes ReqData = 13;
  if (this->reqdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->reqdata(), target);
  }

  // .google.protobuf.Timestamp ReqTime = 14;
  if (this->has_reqtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_reqtime(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.Common2Req)
  return target;
}

size_t Common2Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.Common2Req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RefText = 4;
  if (this->reftext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reftext());
  }

  // string SenderID = 5;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 6;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // bytes ReqData = 13;
  if (this->reqdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reqdata());
  }

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .google.protobuf.Timestamp ReqTime = 14;
  if (this->has_reqtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reqtime_);
  }

  // int64 BatchNo = 2;
  if (this->batchno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->batchno());
  }

  // int64 RefNum = 3;
  if (this->refnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->refnum());
  }

  // bool ToRoot = 7;
  if (this->toroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 8;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  // bool IsSafe = 9;
  if (this->issafe() != 0) {
    total_size += 1 + 1;
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    total_size += 1 + 1;
  }

  // bool UpCache = 11;
  if (this->upcache() != 0) {
    total_size += 1 + 1;
  }

  // .txdata.MsgType ReqType = 12;
  if (this->reqtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reqtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Common2Req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.Common2Req)
  GOOGLE_DCHECK_NE(&from, this);
  const Common2Req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Common2Req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.Common2Req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.Common2Req)
    MergeFrom(*source);
  }
}

void Common2Req::MergeFrom(const Common2Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.Common2Req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reftext().size() > 0) {

    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.reqdata().size() > 0) {

    reqdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqdata_);
  }
  if (from.has_key()) {
    mutable_key()->::txdata::UniKey::MergeFrom(from.key());
  }
  if (from.has_reqtime()) {
    mutable_reqtime()->::google::protobuf::Timestamp::MergeFrom(from.reqtime());
  }
  if (from.batchno() != 0) {
    set_batchno(from.batchno());
  }
  if (from.refnum() != 0) {
    set_refnum(from.refnum());
  }
  if (from.toroot() != 0) {
    set_toroot(from.toroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
  if (from.issafe() != 0) {
    set_issafe(from.issafe());
  }
  if (from.ispush() != 0) {
    set_ispush(from.ispush());
  }
  if (from.upcache() != 0) {
    set_upcache(from.upcache());
  }
  if (from.reqtype() != 0) {
    set_reqtype(from.reqtype());
  }
}

void Common2Req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.Common2Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Common2Req::CopyFrom(const Common2Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.Common2Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Common2Req::IsInitialized() const {
  return true;
}

void Common2Req::Swap(Common2Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Common2Req::InternalSwap(Common2Req* other) {
  using std::swap;
  reftext_.Swap(&other->reftext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reqdata_.Swap(&other->reqdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(reqtime_, other->reqtime_);
  swap(batchno_, other->batchno_);
  swap(refnum_, other->refnum_);
  swap(toroot_, other->toroot_);
  swap(islog_, other->islog_);
  swap(issafe_, other->issafe_);
  swap(ispush_, other->ispush_);
  swap(upcache_, other->upcache_);
  swap(reqtype_, other->reqtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Common2Req::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Common2Rsp::InitAsDefaultInstance() {
  ::txdata::_Common2Rsp_default_instance_._instance.get_mutable()->key_ = const_cast< ::txdata::UniKey*>(
      ::txdata::UniKey::internal_default_instance());
  ::txdata::_Common2Rsp_default_instance_._instance.get_mutable()->rsptime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Common2Rsp::clear_rsptime() {
  if (GetArenaNoVirtual() == NULL && rsptime_ != NULL) {
    delete rsptime_;
  }
  rsptime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Common2Rsp::kKeyFieldNumber;
const int Common2Rsp::kBatchNoFieldNumber;
const int Common2Rsp::kRefNumFieldNumber;
const int Common2Rsp::kRefTextFieldNumber;
const int Common2Rsp::kSenderIDFieldNumber;
const int Common2Rsp::kRecverIDFieldNumber;
const int Common2Rsp::kToRootFieldNumber;
const int Common2Rsp::kIsLogFieldNumber;
const int Common2Rsp::kIsSafeFieldNumber;
const int Common2Rsp::kIsPushFieldNumber;
const int Common2Rsp::kUpCacheFieldNumber;
const int Common2Rsp::kRspTypeFieldNumber;
const int Common2Rsp::kRspDataFieldNumber;
const int Common2Rsp::kRspTimeFieldNumber;
const int Common2Rsp::kIsLastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Common2Rsp::Common2Rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_Common2Rsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.Common2Rsp)
}
Common2Rsp::Common2Rsp(const Common2Rsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reftext().size() > 0) {
    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  rspdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rspdata().size() > 0) {
    rspdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdata_);
  }
  if (from.has_key()) {
    key_ = new ::txdata::UniKey(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_rsptime()) {
    rsptime_ = new ::google::protobuf::Timestamp(*from.rsptime_);
  } else {
    rsptime_ = NULL;
  }
  ::memcpy(&batchno_, &from.batchno_,
    static_cast<size_t>(reinterpret_cast<char*>(&islast_) -
    reinterpret_cast<char*>(&batchno_)) + sizeof(islast_));
  // @@protoc_insertion_point(copy_constructor:txdata.Common2Rsp)
}

void Common2Rsp::SharedCtor() {
  reftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&key_)) + sizeof(islast_));
}

Common2Rsp::~Common2Rsp() {
  // @@protoc_insertion_point(destructor:txdata.Common2Rsp)
  SharedDtor();
}

void Common2Rsp::SharedDtor() {
  reftext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete rsptime_;
}

void Common2Rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Common2Rsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Common2Rsp& Common2Rsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_Common2Rsp.base);
  return *internal_default_instance();
}


void Common2Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.Common2Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reftext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && rsptime_ != NULL) {
    delete rsptime_;
  }
  rsptime_ = NULL;
  ::memset(&batchno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islast_) -
      reinterpret_cast<char*>(&batchno_)) + sizeof(islast_));
  _internal_metadata_.Clear();
}

bool Common2Rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.Common2Rsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.UniKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BatchNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &batchno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RefNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RefText = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reftext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reftext().data(), static_cast<int>(this->reftext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Rsp.RefText"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Rsp.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Rsp.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ToRoot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsSafe = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsPush = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool UpCache = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &upcache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.MsgType RspType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rsptype(static_cast< ::txdata::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes RspData = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rspdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp RspTime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsptime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLast = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.Common2Rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.Common2Rsp)
  return false;
#undef DO_
}

void Common2Rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.Common2Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // int64 BatchNo = 2;
  if (this->batchno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->batchno(), output);
  }

  // int64 RefNum = 3;
  if (this->refnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->refnum(), output);
  }

  // string RefText = 4;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Rsp.RefText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reftext(), output);
  }

  // string SenderID = 5;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Rsp.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->senderid(), output);
  }

  // string RecverID = 6;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Rsp.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->recverid(), output);
  }

  // bool ToRoot = 7;
  if (this->toroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->toroot(), output);
  }

  // bool IsLog = 8;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->islog(), output);
  }

  // bool IsSafe = 9;
  if (this->issafe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->issafe(), output);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->ispush(), output);
  }

  // bool UpCache = 11;
  if (this->upcache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->upcache(), output);
  }

  // .txdata.MsgType RspType = 12;
  if (this->rsptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->rsptype(), output);
  }

  // bytes RspData = 13;
  if (this->rspdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->rspdata(), output);
  }

  // .google.protobuf.Timestamp RspTime = 14;
  if (this->has_rsptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_rsptime(), output);
  }

  // bool IsLast = 15;
  if (this->islast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->islast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.Common2Rsp)
}

::google::protobuf::uint8* Common2Rsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.Common2Rsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // int64 BatchNo = 2;
  if (this->batchno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->batchno(), target);
  }

  // int64 RefNum = 3;
  if (this->refnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->refnum(), target);
  }

  // string RefText = 4;
  if (this->reftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reftext().data(), static_cast<int>(this->reftext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Rsp.RefText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reftext(), target);
  }

  // string SenderID = 5;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Rsp.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->senderid(), target);
  }

  // string RecverID = 6;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Rsp.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->recverid(), target);
  }

  // bool ToRoot = 7;
  if (this->toroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->toroot(), target);
  }

  // bool IsLog = 8;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->islog(), target);
  }

  // bool IsSafe = 9;
  if (this->issafe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->issafe(), target);
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->ispush(), target);
  }

  // bool UpCache = 11;
  if (this->upcache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->upcache(), target);
  }

  // .txdata.MsgType RspType = 12;
  if (this->rsptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->rsptype(), target);
  }

  // bytes RspData = 13;
  if (this->rspdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->rspdata(), target);
  }

  // .google.protobuf.Timestamp RspTime = 14;
  if (this->has_rsptime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_rsptime(), deterministic, target);
  }

  // bool IsLast = 15;
  if (this->islast() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->islast(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.Common2Rsp)
  return target;
}

size_t Common2Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.Common2Rsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string RefText = 4;
  if (this->reftext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reftext());
  }

  // string SenderID = 5;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 6;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // bytes RspData = 13;
  if (this->rspdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rspdata());
  }

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .google.protobuf.Timestamp RspTime = 14;
  if (this->has_rsptime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rsptime_);
  }

  // int64 BatchNo = 2;
  if (this->batchno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->batchno());
  }

  // int64 RefNum = 3;
  if (this->refnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->refnum());
  }

  // bool ToRoot = 7;
  if (this->toroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 8;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  // bool IsSafe = 9;
  if (this->issafe() != 0) {
    total_size += 1 + 1;
  }

  // bool IsPush = 10;
  if (this->ispush() != 0) {
    total_size += 1 + 1;
  }

  // .txdata.MsgType RspType = 12;
  if (this->rsptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rsptype());
  }

  // bool UpCache = 11;
  if (this->upcache() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLast = 15;
  if (this->islast() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Common2Rsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.Common2Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  const Common2Rsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Common2Rsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.Common2Rsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.Common2Rsp)
    MergeFrom(*source);
  }
}

void Common2Rsp::MergeFrom(const Common2Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.Common2Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reftext().size() > 0) {

    reftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reftext_);
  }
  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.rspdata().size() > 0) {

    rspdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rspdata_);
  }
  if (from.has_key()) {
    mutable_key()->::txdata::UniKey::MergeFrom(from.key());
  }
  if (from.has_rsptime()) {
    mutable_rsptime()->::google::protobuf::Timestamp::MergeFrom(from.rsptime());
  }
  if (from.batchno() != 0) {
    set_batchno(from.batchno());
  }
  if (from.refnum() != 0) {
    set_refnum(from.refnum());
  }
  if (from.toroot() != 0) {
    set_toroot(from.toroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
  if (from.issafe() != 0) {
    set_issafe(from.issafe());
  }
  if (from.ispush() != 0) {
    set_ispush(from.ispush());
  }
  if (from.rsptype() != 0) {
    set_rsptype(from.rsptype());
  }
  if (from.upcache() != 0) {
    set_upcache(from.upcache());
  }
  if (from.islast() != 0) {
    set_islast(from.islast());
  }
}

void Common2Rsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.Common2Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Common2Rsp::CopyFrom(const Common2Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.Common2Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Common2Rsp::IsInitialized() const {
  return true;
}

void Common2Rsp::Swap(Common2Rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Common2Rsp::InternalSwap(Common2Rsp* other) {
  using std::swap;
  reftext_.Swap(&other->reftext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rspdata_.Swap(&other->rspdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(rsptime_, other->rsptime_);
  swap(batchno_, other->batchno_);
  swap(refnum_, other->refnum_);
  swap(toroot_, other->toroot_);
  swap(islog_, other->islog_);
  swap(issafe_, other->issafe_);
  swap(ispush_, other->ispush_);
  swap(rsptype_, other->rsptype_);
  swap(upcache_, other->upcache_);
  swap(islast_, other->islast_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Common2Rsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Common2Ack::InitAsDefaultInstance() {
  ::txdata::_Common2Ack_default_instance_._instance.get_mutable()->key_ = const_cast< ::txdata::UniKey*>(
      ::txdata::UniKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Common2Ack::kKeyFieldNumber;
const int Common2Ack::kSenderIDFieldNumber;
const int Common2Ack::kRecverIDFieldNumber;
const int Common2Ack::kToRootFieldNumber;
const int Common2Ack::kIsLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Common2Ack::Common2Ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_Common2Ack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.Common2Ack)
}
Common2Ack::Common2Ack(const Common2Ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.senderid().size() > 0) {
    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recverid().size() > 0) {
    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.has_key()) {
    key_ = new ::txdata::UniKey(*from.key_);
  } else {
    key_ = NULL;
  }
  ::memcpy(&toroot_, &from.toroot_,
    static_cast<size_t>(reinterpret_cast<char*>(&islog_) -
    reinterpret_cast<char*>(&toroot_)) + sizeof(islog_));
  // @@protoc_insertion_point(copy_constructor:txdata.Common2Ack)
}

void Common2Ack::SharedCtor() {
  senderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islog_) -
      reinterpret_cast<char*>(&key_)) + sizeof(islog_));
}

Common2Ack::~Common2Ack() {
  // @@protoc_insertion_point(destructor:txdata.Common2Ack)
  SharedDtor();
}

void Common2Ack::SharedDtor() {
  senderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
}

void Common2Ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Common2Ack::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Common2Ack& Common2Ack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_Common2Ack.base);
  return *internal_default_instance();
}


void Common2Ack::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.Common2Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  senderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  ::memset(&toroot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islog_) -
      reinterpret_cast<char*>(&toroot_)) + sizeof(islog_));
  _internal_metadata_.Clear();
}

bool Common2Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.Common2Ack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.UniKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->senderid().data(), static_cast<int>(this->senderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Ack.SenderID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recverid().data(), static_cast<int>(this->recverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.Common2Ack.RecverID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ToRoot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &toroot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsLog = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.Common2Ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.Common2Ack)
  return false;
#undef DO_
}

void Common2Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.Common2Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Ack.SenderID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->senderid(), output);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Ack.RecverID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->recverid(), output);
  }

  // bool ToRoot = 4;
  if (this->toroot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->toroot(), output);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->islog(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.Common2Ack)
}

::google::protobuf::uint8* Common2Ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.Common2Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->senderid().data(), static_cast<int>(this->senderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Ack.SenderID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->senderid(), target);
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recverid().data(), static_cast<int>(this->recverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.Common2Ack.RecverID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->recverid(), target);
  }

  // bool ToRoot = 4;
  if (this->toroot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->toroot(), target);
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->islog(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.Common2Ack)
  return target;
}

size_t Common2Ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.Common2Ack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SenderID = 2;
  if (this->senderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senderid());
  }

  // string RecverID = 3;
  if (this->recverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recverid());
  }

  // .txdata.UniKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // bool ToRoot = 4;
  if (this->toroot() != 0) {
    total_size += 1 + 1;
  }

  // bool IsLog = 5;
  if (this->islog() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Common2Ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.Common2Ack)
  GOOGLE_DCHECK_NE(&from, this);
  const Common2Ack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Common2Ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.Common2Ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.Common2Ack)
    MergeFrom(*source);
  }
}

void Common2Ack::MergeFrom(const Common2Ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.Common2Ack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.senderid().size() > 0) {

    senderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senderid_);
  }
  if (from.recverid().size() > 0) {

    recverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recverid_);
  }
  if (from.has_key()) {
    mutable_key()->::txdata::UniKey::MergeFrom(from.key());
  }
  if (from.toroot() != 0) {
    set_toroot(from.toroot());
  }
  if (from.islog() != 0) {
    set_islog(from.islog());
  }
}

void Common2Ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.Common2Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Common2Ack::CopyFrom(const Common2Ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.Common2Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Common2Ack::IsInitialized() const {
  return true;
}

void Common2Ack::Swap(Common2Ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Common2Ack::InternalSwap(Common2Ack* other) {
  using std::swap;
  senderid_.Swap(&other->senderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recverid_.Swap(&other->recverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(toroot_, other->toroot_);
  swap(islog_, other->islog_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Common2Ack::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommonErr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonErr::kErrNoFieldNumber;
const int CommonErr::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonErr::CommonErr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_CommonErr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.CommonErr)
}
CommonErr::CommonErr(const CommonErr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  errno_ = from.errno_;
  // @@protoc_insertion_point(copy_constructor:txdata.CommonErr)
}

void CommonErr::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errno_ = 0;
}

CommonErr::~CommonErr() {
  // @@protoc_insertion_point(destructor:txdata.CommonErr)
  SharedDtor();
}

void CommonErr::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommonErr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommonErr::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonErr& CommonErr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_CommonErr.base);
  return *internal_default_instance();
}


void CommonErr::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.CommonErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errno_ = 0;
  _internal_metadata_.Clear();
}

bool CommonErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.CommonErr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ErrNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.CommonErr.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.CommonErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.CommonErr)
  return false;
#undef DO_
}

void CommonErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.CommonErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ErrNo = 1;
  if (this->errno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errno(), output);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonErr.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.CommonErr)
}

::google::protobuf::uint8* CommonErr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.CommonErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ErrNo = 1;
  if (this->errno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errno(), target);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.CommonErr.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.CommonErr)
  return target;
}

size_t CommonErr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.CommonErr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int32 ErrNo = 1;
  if (this->errno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.CommonErr)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonErr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonErr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.CommonErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.CommonErr)
    MergeFrom(*source);
  }
}

void CommonErr::MergeFrom(const CommonErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.CommonErr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.errno() != 0) {
    set_errno(from.errno());
  }
}

void CommonErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.CommonErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonErr::CopyFrom(const CommonErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.CommonErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonErr::IsInitialized() const {
  return true;
}

void CommonErr::Swap(CommonErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonErr::InternalSwap(CommonErr* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errno_, other->errno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommonErr::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionInfo::kUserIDFieldNumber;
const int ConnectionInfo::kBelongIDFieldNumber;
const int ConnectionInfo::kVersionFieldNumber;
const int ConnectionInfo::kLinkModeFieldNumber;
const int ConnectionInfo::kExePidFieldNumber;
const int ConnectionInfo::kExePathFieldNumber;
const int ConnectionInfo::kRemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionInfo::ConnectionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ConnectionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ConnectionInfo)
}
ConnectionInfo::ConnectionInfo(const ConnectionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  belongid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.belongid().size() > 0) {
    belongid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.belongid_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  exepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exepath().size() > 0) {
    exepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exepath_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  ::memcpy(&linkmode_, &from.linkmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&exepid_) -
    reinterpret_cast<char*>(&linkmode_)) + sizeof(exepid_));
  // @@protoc_insertion_point(copy_constructor:txdata.ConnectionInfo)
}

void ConnectionInfo::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  belongid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&linkmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exepid_) -
      reinterpret_cast<char*>(&linkmode_)) + sizeof(exepid_));
}

ConnectionInfo::~ConnectionInfo() {
  // @@protoc_insertion_point(destructor:txdata.ConnectionInfo)
  SharedDtor();
}

void ConnectionInfo::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  belongid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionInfo::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionInfo& ConnectionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ConnectionInfo.base);
  return *internal_default_instance();
}


void ConnectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  belongid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&linkmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exepid_) -
      reinterpret_cast<char*>(&linkmode_)) + sizeof(exepid_));
  _internal_metadata_.Clear();
}

bool ConnectionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ConnectionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BelongID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_belongid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->belongid().data(), static_cast<int>(this->belongid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.BelongID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.Version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.ConnectionInfo.LinkType LinkMode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_linkmode(static_cast< ::txdata::ConnectionInfo_LinkType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ExePid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exepid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ExePath = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exepath().data(), static_cast<int>(this->exepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.ExePath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Remark = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectionInfo.Remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ConnectionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ConnectionInfo)
  return false;
#undef DO_
}

void ConnectionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string BelongID = 2;
  if (this->belongid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->belongid().data(), static_cast<int>(this->belongid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.BelongID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->belongid(), output);
  }

  // string Version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // .txdata.ConnectionInfo.LinkType LinkMode = 4;
  if (this->linkmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->linkmode(), output);
  }

  // int32 ExePid = 5;
  if (this->exepid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->exepid(), output);
  }

  // string ExePath = 6;
  if (this->exepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exepath().data(), static_cast<int>(this->exepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.ExePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->exepath(), output);
  }

  // string Remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->remark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ConnectionInfo)
}

::google::protobuf::uint8* ConnectionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string BelongID = 2;
  if (this->belongid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->belongid().data(), static_cast<int>(this->belongid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.BelongID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->belongid(), target);
  }

  // string Version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // .txdata.ConnectionInfo.LinkType LinkMode = 4;
  if (this->linkmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->linkmode(), target);
  }

  // int32 ExePid = 5;
  if (this->exepid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->exepid(), target);
  }

  // string ExePath = 6;
  if (this->exepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exepath().data(), static_cast<int>(this->exepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.ExePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->exepath(), target);
  }

  // string Remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectionInfo.Remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->remark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ConnectionInfo)
  return target;
}

size_t ConnectionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ConnectionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string BelongID = 2;
  if (this->belongid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->belongid());
  }

  // string Version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string ExePath = 6;
  if (this->exepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exepath());
  }

  // string Remark = 7;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // .txdata.ConnectionInfo.LinkType LinkMode = 4;
  if (this->linkmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->linkmode());
  }

  // int32 ExePid = 5;
  if (this->exepid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exepid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ConnectionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ConnectionInfo)
    MergeFrom(*source);
  }
}

void ConnectionInfo::MergeFrom(const ConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.belongid().size() > 0) {

    belongid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.belongid_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.exepath().size() > 0) {

    exepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exepath_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.linkmode() != 0) {
    set_linkmode(from.linkmode());
  }
  if (from.exepid() != 0) {
    set_exepid(from.exepid());
  }
}

void ConnectionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionInfo::CopyFrom(const ConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionInfo::IsInitialized() const {
  return true;
}

void ConnectionInfo::Swap(ConnectionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionInfo::InternalSwap(ConnectionInfo* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  belongid_.Swap(&other->belongid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exepath_.Swap(&other->exepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(linkmode_, other->linkmode_);
  swap(exepid_, other->exepid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionInfo::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisconnectedData::InitAsDefaultInstance() {
  ::txdata::_DisconnectedData_default_instance_._instance.get_mutable()->info_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisconnectedData::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisconnectedData::DisconnectedData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_DisconnectedData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.DisconnectedData)
}
DisconnectedData::DisconnectedData(const DisconnectedData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::txdata::ConnectionInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:txdata.DisconnectedData)
}

void DisconnectedData::SharedCtor() {
  info_ = NULL;
}

DisconnectedData::~DisconnectedData() {
  // @@protoc_insertion_point(destructor:txdata.DisconnectedData)
  SharedDtor();
}

void DisconnectedData::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void DisconnectedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisconnectedData::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisconnectedData& DisconnectedData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_DisconnectedData.base);
  return *internal_default_instance();
}


void DisconnectedData::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.DisconnectedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool DisconnectedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.DisconnectedData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.ConnectionInfo Info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.DisconnectedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.DisconnectedData)
  return false;
#undef DO_
}

void DisconnectedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.DisconnectedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo Info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.DisconnectedData)
}

::google::protobuf::uint8* DisconnectedData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.DisconnectedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo Info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.DisconnectedData)
  return target;
}

size_t DisconnectedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.DisconnectedData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .txdata.ConnectionInfo Info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisconnectedData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.DisconnectedData)
  GOOGLE_DCHECK_NE(&from, this);
  const DisconnectedData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisconnectedData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.DisconnectedData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.DisconnectedData)
    MergeFrom(*source);
  }
}

void DisconnectedData::MergeFrom(const DisconnectedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.DisconnectedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::txdata::ConnectionInfo::MergeFrom(from.info());
  }
}

void DisconnectedData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.DisconnectedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectedData::CopyFrom(const DisconnectedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.DisconnectedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectedData::IsInitialized() const {
  return true;
}

void DisconnectedData::Swap(DisconnectedData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisconnectedData::InternalSwap(DisconnectedData* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisconnectedData::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectReq::InitAsDefaultInstance() {
  ::txdata::_ConnectReq_default_instance_._instance.get_mutable()->inforeq_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectReq::kInfoReqFieldNumber;
const int ConnectReq::kPathwayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectReq::ConnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ConnectReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ConnectReq)
}
ConnectReq::ConnectReq(const ConnectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pathway_(from.pathway_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inforeq()) {
    inforeq_ = new ::txdata::ConnectionInfo(*from.inforeq_);
  } else {
    inforeq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:txdata.ConnectReq)
}

void ConnectReq::SharedCtor() {
  inforeq_ = NULL;
}

ConnectReq::~ConnectReq() {
  // @@protoc_insertion_point(destructor:txdata.ConnectReq)
  SharedDtor();
}

void ConnectReq::SharedDtor() {
  if (this != internal_default_instance()) delete inforeq_;
}

void ConnectReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectReq& ConnectReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ConnectReq.base);
  return *internal_default_instance();
}


void ConnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ConnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pathway_.Clear();
  if (GetArenaNoVirtual() == NULL && inforeq_ != NULL) {
    delete inforeq_;
  }
  inforeq_ = NULL;
  _internal_metadata_.Clear();
}

bool ConnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ConnectReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.ConnectionInfo InfoReq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inforeq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Pathway = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pathway()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathway(this->pathway_size() - 1).data(),
            static_cast<int>(this->pathway(this->pathway_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectReq.Pathway"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ConnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ConnectReq)
  return false;
#undef DO_
}

void ConnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ConnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_inforeq(), output);
  }

  // repeated string Pathway = 2;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectReq.Pathway");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->pathway(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ConnectReq)
}

::google::protobuf::uint8* ConnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ConnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_inforeq(), deterministic, target);
  }

  // repeated string Pathway = 2;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectReq.Pathway");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->pathway(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ConnectReq)
  return target;
}

size_t ConnectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ConnectReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string Pathway = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pathway_size());
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pathway(i));
  }

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inforeq_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ConnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ConnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ConnectReq)
    MergeFrom(*source);
  }
}

void ConnectReq::MergeFrom(const ConnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ConnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pathway_.MergeFrom(from.pathway_);
  if (from.has_inforeq()) {
    mutable_inforeq()->::txdata::ConnectionInfo::MergeFrom(from.inforeq());
  }
}

void ConnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectReq::CopyFrom(const ConnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectReq::IsInitialized() const {
  return true;
}

void ConnectReq::Swap(ConnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectReq::InternalSwap(ConnectReq* other) {
  using std::swap;
  pathway_.InternalSwap(CastToBase(&other->pathway_));
  swap(inforeq_, other->inforeq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectRsp::InitAsDefaultInstance() {
  ::txdata::_ConnectRsp_default_instance_._instance.get_mutable()->inforeq_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
  ::txdata::_ConnectRsp_default_instance_._instance.get_mutable()->inforsp_ = const_cast< ::txdata::ConnectionInfo*>(
      ::txdata::ConnectionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectRsp::kInfoReqFieldNumber;
const int ConnectRsp::kInfoRspFieldNumber;
const int ConnectRsp::kErrNoFieldNumber;
const int ConnectRsp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectRsp::ConnectRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ConnectRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ConnectRsp)
}
ConnectRsp::ConnectRsp(const ConnectRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_inforeq()) {
    inforeq_ = new ::txdata::ConnectionInfo(*from.inforeq_);
  } else {
    inforeq_ = NULL;
  }
  if (from.has_inforsp()) {
    inforsp_ = new ::txdata::ConnectionInfo(*from.inforsp_);
  } else {
    inforsp_ = NULL;
  }
  errno_ = from.errno_;
  // @@protoc_insertion_point(copy_constructor:txdata.ConnectRsp)
}

void ConnectRsp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inforeq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errno_) -
      reinterpret_cast<char*>(&inforeq_)) + sizeof(errno_));
}

ConnectRsp::~ConnectRsp() {
  // @@protoc_insertion_point(destructor:txdata.ConnectRsp)
  SharedDtor();
}

void ConnectRsp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inforeq_;
  if (this != internal_default_instance()) delete inforsp_;
}

void ConnectRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectRsp& ConnectRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ConnectRsp.base);
  return *internal_default_instance();
}


void ConnectRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ConnectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && inforeq_ != NULL) {
    delete inforeq_;
  }
  inforeq_ = NULL;
  if (GetArenaNoVirtual() == NULL && inforsp_ != NULL) {
    delete inforsp_;
  }
  inforsp_ = NULL;
  errno_ = 0;
  _internal_metadata_.Clear();
}

bool ConnectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ConnectRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .txdata.ConnectionInfo InfoReq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inforeq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.ConnectionInfo InfoRsp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inforsp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ErrNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ConnectRsp.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ConnectRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ConnectRsp)
  return false;
#undef DO_
}

void ConnectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ConnectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_inforeq(), output);
  }

  // .txdata.ConnectionInfo InfoRsp = 2;
  if (this->has_inforsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_inforsp(), output);
  }

  // int32 ErrNo = 3;
  if (this->errno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->errno(), output);
  }

  // string ErrMsg = 4;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectRsp.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ConnectRsp)
}

::google::protobuf::uint8* ConnectRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ConnectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_inforeq(), deterministic, target);
  }

  // .txdata.ConnectionInfo InfoRsp = 2;
  if (this->has_inforsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_inforsp(), deterministic, target);
  }

  // int32 ErrNo = 3;
  if (this->errno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->errno(), target);
  }

  // string ErrMsg = 4;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ConnectRsp.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ConnectRsp)
  return target;
}

size_t ConnectRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ConnectRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ErrMsg = 4;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // .txdata.ConnectionInfo InfoReq = 1;
  if (this->has_inforeq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inforeq_);
  }

  // .txdata.ConnectionInfo InfoRsp = 2;
  if (this->has_inforsp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inforsp_);
  }

  // int32 ErrNo = 3;
  if (this->errno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ConnectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ConnectRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ConnectRsp)
    MergeFrom(*source);
  }
}

void ConnectRsp::MergeFrom(const ConnectRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ConnectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_inforeq()) {
    mutable_inforeq()->::txdata::ConnectionInfo::MergeFrom(from.inforeq());
  }
  if (from.has_inforsp()) {
    mutable_inforsp()->::txdata::ConnectionInfo::MergeFrom(from.inforsp());
  }
  if (from.errno() != 0) {
    set_errno(from.errno());
  }
}

void ConnectRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ConnectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectRsp::CopyFrom(const ConnectRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ConnectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectRsp::IsInitialized() const {
  return true;
}

void ConnectRsp::Swap(ConnectRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectRsp::InternalSwap(ConnectRsp* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(inforeq_, other->inforeq_);
  swap(inforsp_, other->inforsp_);
  swap(errno_, other->errno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnlineNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineNotice::kRootIsOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineNotice::OnlineNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_OnlineNotice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.OnlineNotice)
}
OnlineNotice::OnlineNotice(const OnlineNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rootisonline_ = from.rootisonline_;
  // @@protoc_insertion_point(copy_constructor:txdata.OnlineNotice)
}

void OnlineNotice::SharedCtor() {
  rootisonline_ = false;
}

OnlineNotice::~OnlineNotice() {
  // @@protoc_insertion_point(destructor:txdata.OnlineNotice)
  SharedDtor();
}

void OnlineNotice::SharedDtor() {
}

void OnlineNotice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnlineNotice::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineNotice& OnlineNotice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_OnlineNotice.base);
  return *internal_default_instance();
}


void OnlineNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.OnlineNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rootisonline_ = false;
  _internal_metadata_.Clear();
}

bool OnlineNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.OnlineNotice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool RootIsOnline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rootisonline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.OnlineNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.OnlineNotice)
  return false;
#undef DO_
}

void OnlineNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.OnlineNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool RootIsOnline = 1;
  if (this->rootisonline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rootisonline(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.OnlineNotice)
}

::google::protobuf::uint8* OnlineNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.OnlineNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool RootIsOnline = 1;
  if (this->rootisonline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rootisonline(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.OnlineNotice)
  return target;
}

size_t OnlineNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.OnlineNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool RootIsOnline = 1;
  if (this->rootisonline() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlineNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.OnlineNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.OnlineNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.OnlineNotice)
    MergeFrom(*source);
  }
}

void OnlineNotice::MergeFrom(const OnlineNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.OnlineNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rootisonline() != 0) {
    set_rootisonline(from.rootisonline());
  }
}

void OnlineNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.OnlineNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineNotice::CopyFrom(const OnlineNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.OnlineNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineNotice::IsInitialized() const {
  return true;
}

void OnlineNotice::Swap(OnlineNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineNotice::InternalSwap(OnlineNotice* other) {
  using std::swap;
  swap(rootisonline_, other->rootisonline_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnlineNotice::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemReport::kLevelFieldNumber;
const int SystemReport::kUserIDFieldNumber;
const int SystemReport::kPathwayFieldNumber;
const int SystemReport::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemReport::SystemReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_SystemReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.SystemReport)
}
SystemReport::SystemReport(const SystemReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pathway_(from.pathway_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:txdata.SystemReport)
}

void SystemReport::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
}

SystemReport::~SystemReport() {
  // @@protoc_insertion_point(destructor:txdata.SystemReport)
  SharedDtor();
}

void SystemReport::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SystemReport::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemReport& SystemReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_SystemReport.base);
  return *internal_default_instance();
}


void SystemReport::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.SystemReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pathway_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  _internal_metadata_.Clear();
}

bool SystemReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.SystemReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SystemReport.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Pathway = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pathway()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathway(this->pathway_size() - 1).data(),
            static_cast<int>(this->pathway(this->pathway_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SystemReport.Pathway"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SystemReport.Message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.SystemReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.SystemReport)
  return false;
#undef DO_
}

void SystemReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.SystemReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // string UserID = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // repeated string Pathway = 3;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Pathway");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->pathway(i), output);
  }

  // string Message = 4;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.SystemReport)
}

::google::protobuf::uint8* SystemReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.SystemReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // string UserID = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // repeated string Pathway = 3;
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathway(i).data(), static_cast<int>(this->pathway(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Pathway");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->pathway(i), target);
  }

  // string Message = 4;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SystemReport.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.SystemReport)
  return target;
}

size_t SystemReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.SystemReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string Pathway = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pathway_size());
  for (int i = 0, n = this->pathway_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pathway(i));
  }

  // string UserID = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string Message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.SystemReport)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.SystemReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.SystemReport)
    MergeFrom(*source);
  }
}

void SystemReport::MergeFrom(const SystemReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.SystemReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pathway_.MergeFrom(from.pathway_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void SystemReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.SystemReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemReport::CopyFrom(const SystemReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.SystemReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemReport::IsInitialized() const {
  return true;
}

void SystemReport::Swap(SystemReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemReport::InternalSwap(SystemReport* other) {
  using std::swap;
  pathway_.InternalSwap(CastToBase(&other->pathway_));
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SystemReport::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EchoItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoItem::kDataFieldNumber;
const int EchoItem::kRspCntFieldNumber;
const int EchoItem::kSecGapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoItem::EchoItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_EchoItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.EchoItem)
}
EchoItem::EchoItem(const EchoItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&rspcnt_, &from.rspcnt_,
    static_cast<size_t>(reinterpret_cast<char*>(&secgap_) -
    reinterpret_cast<char*>(&rspcnt_)) + sizeof(secgap_));
  // @@protoc_insertion_point(copy_constructor:txdata.EchoItem)
}

void EchoItem::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rspcnt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secgap_) -
      reinterpret_cast<char*>(&rspcnt_)) + sizeof(secgap_));
}

EchoItem::~EchoItem() {
  // @@protoc_insertion_point(destructor:txdata.EchoItem)
  SharedDtor();
}

void EchoItem::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EchoItem::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoItem& EchoItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_EchoItem.base);
  return *internal_default_instance();
}


void EchoItem::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.EchoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rspcnt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secgap_) -
      reinterpret_cast<char*>(&rspcnt_)) + sizeof(secgap_));
  _internal_metadata_.Clear();
}

bool EchoItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.EchoItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EchoItem.Data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RspCnt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rspcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SecGap = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secgap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.EchoItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.EchoItem)
  return false;
#undef DO_
}

void EchoItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.EchoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // int32 RspCnt = 2;
  if (this->rspcnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rspcnt(), output);
  }

  // int32 SecGap = 3;
  if (this->secgap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->secgap(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.EchoItem)
}

::google::protobuf::uint8* EchoItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.EchoItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EchoItem.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // int32 RspCnt = 2;
  if (this->rspcnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rspcnt(), target);
  }

  // int32 SecGap = 3;
  if (this->secgap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->secgap(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.EchoItem)
  return target;
}

size_t EchoItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.EchoItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // int32 RspCnt = 2;
  if (this->rspcnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rspcnt());
  }

  // int32 SecGap = 3;
  if (this->secgap() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->secgap());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EchoItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.EchoItem)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.EchoItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.EchoItem)
    MergeFrom(*source);
  }
}

void EchoItem::MergeFrom(const EchoItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.EchoItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.rspcnt() != 0) {
    set_rspcnt(from.rspcnt());
  }
  if (from.secgap() != 0) {
    set_secgap(from.secgap());
  }
}

void EchoItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.EchoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoItem::CopyFrom(const EchoItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.EchoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoItem::IsInitialized() const {
  return true;
}

void EchoItem::Swap(EchoItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoItem::InternalSwap(EchoItem* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rspcnt_, other->rspcnt_);
  swap(secgap_, other->secgap_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EchoItem::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BinItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinItem::kTypeFieldNumber;
const int BinItem::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinItem::BinItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_BinItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.BinItem)
}
BinItem::BinItem(const BinItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:txdata.BinItem)
}

void BinItem::SharedCtor() {
  type_ = 0;
}

BinItem::~BinItem() {
  // @@protoc_insertion_point(destructor:txdata.BinItem)
  SharedDtor();
}

void BinItem::SharedDtor() {
}

void BinItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BinItem::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BinItem& BinItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_BinItem.base);
  return *internal_default_instance();
}


void BinItem::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.BinItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  type_ = 0;
  _internal_metadata_.Clear();
}

bool BinItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.BinItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.BinItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.BinItem)
  return false;
#undef DO_
}

void BinItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.BinItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // repeated bytes Data = 2;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->data(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.BinItem)
}

::google::protobuf::uint8* BinItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.BinItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // repeated bytes Data = 2;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->data(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.BinItem)
  return target;
}

size_t BinItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.BinItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes Data = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0, n = this->data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BinItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.BinItem)
  GOOGLE_DCHECK_NE(&from, this);
  const BinItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.BinItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.BinItem)
    MergeFrom(*source);
  }
}

void BinItem::MergeFrom(const BinItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.BinItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void BinItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.BinItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinItem::CopyFrom(const BinItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.BinItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinItem::IsInitialized() const {
  return true;
}

void BinItem::Swap(BinItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinItem::InternalSwap(BinItem* other) {
  using std::swap;
  data_.InternalSwap(CastToBase(&other->data_));
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BinItem::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailItem::kUsernameFieldNumber;
const int EmailItem::kPasswordFieldNumber;
const int EmailItem::kSmtpAddrFieldNumber;
const int EmailItem::kToFieldNumber;
const int EmailItem::kSubjectFieldNumber;
const int EmailItem::kContentTypeFieldNumber;
const int EmailItem::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailItem::EmailItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_EmailItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.EmailItem)
}
EmailItem::EmailItem(const EmailItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  smtpaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.smtpaddr().size() > 0) {
    smtpaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smtpaddr_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  contenttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contenttype().size() > 0) {
    contenttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttype_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.EmailItem)
}

void EmailItem::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smtpaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EmailItem::~EmailItem() {
  // @@protoc_insertion_point(destructor:txdata.EmailItem)
  SharedDtor();
}

void EmailItem::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smtpaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EmailItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailItem::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailItem& EmailItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_EmailItem.base);
  return *internal_default_instance();
}


void EmailItem::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.EmailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smtpaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EmailItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.EmailItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EmailItem.Username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EmailItem.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SmtpAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smtpaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->smtpaddr().data(), static_cast<int>(this->smtpaddr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EmailItem.SmtpAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string To = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EmailItem.To"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Subject = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EmailItem.Subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ContentType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contenttype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contenttype().data(), static_cast<int>(this->contenttype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EmailItem.ContentType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.EmailItem.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.EmailItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.EmailItem)
  return false;
#undef DO_
}

void EmailItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.EmailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string SmtpAddr = 3;
  if (this->smtpaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smtpaddr().data(), static_cast<int>(this->smtpaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.SmtpAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smtpaddr(), output);
  }

  // string To = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.To");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // string Subject = 5;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->subject(), output);
  }

  // string ContentType = 6;
  if (this->contenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttype().data(), static_cast<int>(this->contenttype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.ContentType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->contenttype(), output);
  }

  // string Content = 7;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.EmailItem)
}

::google::protobuf::uint8* EmailItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.EmailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string SmtpAddr = 3;
  if (this->smtpaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->smtpaddr().data(), static_cast<int>(this->smtpaddr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.SmtpAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smtpaddr(), target);
  }

  // string To = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.To");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // string Subject = 5;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->subject(), target);
  }

  // string ContentType = 6;
  if (this->contenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttype().data(), static_cast<int>(this->contenttype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.ContentType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->contenttype(), target);
  }

  // string Content = 7;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.EmailItem.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.EmailItem)
  return target;
}

size_t EmailItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.EmailItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string SmtpAddr = 3;
  if (this->smtpaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->smtpaddr());
  }

  // string To = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string Subject = 5;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string ContentType = 6;
  if (this->contenttype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contenttype());
  }

  // string Content = 7;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.EmailItem)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.EmailItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.EmailItem)
    MergeFrom(*source);
  }
}

void EmailItem::MergeFrom(const EmailItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.EmailItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.smtpaddr().size() > 0) {

    smtpaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smtpaddr_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.contenttype().size() > 0) {

    contenttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttype_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void EmailItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.EmailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailItem::CopyFrom(const EmailItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.EmailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailItem::IsInitialized() const {
  return true;
}

void EmailItem::Swap(EmailItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailItem::InternalSwap(EmailItem* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  smtpaddr_.Swap(&other->smtpaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contenttype_.Swap(&other->contenttype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailItem::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QryConnInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QryConnInfoReq::QryConnInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_QryConnInfoReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.QryConnInfoReq)
}
QryConnInfoReq::QryConnInfoReq(const QryConnInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:txdata.QryConnInfoReq)
}

void QryConnInfoReq::SharedCtor() {
}

QryConnInfoReq::~QryConnInfoReq() {
  // @@protoc_insertion_point(destructor:txdata.QryConnInfoReq)
  SharedDtor();
}

void QryConnInfoReq::SharedDtor() {
}

void QryConnInfoReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QryConnInfoReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QryConnInfoReq& QryConnInfoReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_QryConnInfoReq.base);
  return *internal_default_instance();
}


void QryConnInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.QryConnInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool QryConnInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.QryConnInfoReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.QryConnInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.QryConnInfoReq)
  return false;
#undef DO_
}

void QryConnInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.QryConnInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.QryConnInfoReq)
}

::google::protobuf::uint8* QryConnInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.QryConnInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.QryConnInfoReq)
  return target;
}

size_t QryConnInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.QryConnInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QryConnInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.QryConnInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QryConnInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QryConnInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.QryConnInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.QryConnInfoReq)
    MergeFrom(*source);
  }
}

void QryConnInfoReq::MergeFrom(const QryConnInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.QryConnInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void QryConnInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.QryConnInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QryConnInfoReq::CopyFrom(const QryConnInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.QryConnInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QryConnInfoReq::IsInitialized() const {
  return true;
}

void QryConnInfoReq::Swap(QryConnInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QryConnInfoReq::InternalSwap(QryConnInfoReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QryConnInfoReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

QryConnInfoRsp_CacheEntry_DoNotUse::QryConnInfoRsp_CacheEntry_DoNotUse() {}
QryConnInfoRsp_CacheEntry_DoNotUse::QryConnInfoRsp_CacheEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void QryConnInfoRsp_CacheEntry_DoNotUse::MergeFrom(const QryConnInfoRsp_CacheEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata QryConnInfoRsp_CacheEntry_DoNotUse::GetMetadata() const {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[17];
}
void QryConnInfoRsp_CacheEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void QryConnInfoRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QryConnInfoRsp::kUserIDFieldNumber;
const int QryConnInfoRsp::kCacheFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QryConnInfoRsp::QryConnInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_QryConnInfoRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.QryConnInfoRsp)
}
QryConnInfoRsp::QryConnInfoRsp(const QryConnInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cache_.MergeFrom(from.cache_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.QryConnInfoRsp)
}

void QryConnInfoRsp::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

QryConnInfoRsp::~QryConnInfoRsp() {
  // @@protoc_insertion_point(destructor:txdata.QryConnInfoRsp)
  SharedDtor();
}

void QryConnInfoRsp::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QryConnInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QryConnInfoRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QryConnInfoRsp& QryConnInfoRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_QryConnInfoRsp.base);
  return *internal_default_instance();
}


void QryConnInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.QryConnInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cache_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QryConnInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.QryConnInfoRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.QryConnInfoRsp.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .txdata.ConnectReq> Cache = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          QryConnInfoRsp_CacheEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              QryConnInfoRsp_CacheEntry_DoNotUse,
              ::std::string, ::txdata::ConnectReq,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::txdata::ConnectReq > > parser(&cache_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.QryConnInfoRsp.CacheEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.QryConnInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.QryConnInfoRsp)
  return false;
#undef DO_
}

void QryConnInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.QryConnInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QryConnInfoRsp.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // map<string, .txdata.ConnectReq> Cache = 2;
  if (!this->cache().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "txdata.QryConnInfoRsp.CacheEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->cache().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cache().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::const_iterator
          it = this->cache().begin();
          it != this->cache().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QryConnInfoRsp_CacheEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cache_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QryConnInfoRsp_CacheEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::const_iterator
          it = this->cache().begin();
          it != this->cache().end(); ++it) {
        entry.reset(cache_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.QryConnInfoRsp)
}

::google::protobuf::uint8* QryConnInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.QryConnInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QryConnInfoRsp.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // map<string, .txdata.ConnectReq> Cache = 2;
  if (!this->cache().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "txdata.QryConnInfoRsp.CacheEntry.key");
      }
    };

    if (deterministic &&
        this->cache().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cache().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::const_iterator
          it = this->cache().begin();
          it != this->cache().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QryConnInfoRsp_CacheEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cache_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QryConnInfoRsp_CacheEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::const_iterator
          it = this->cache().begin();
          it != this->cache().end(); ++it) {
        entry.reset(cache_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.QryConnInfoRsp)
  return target;
}

size_t QryConnInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.QryConnInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .txdata.ConnectReq> Cache = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cache_size());
  {
    ::std::unique_ptr<QryConnInfoRsp_CacheEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::txdata::ConnectReq >::const_iterator
        it = this->cache().begin();
        it != this->cache().end(); ++it) {
      entry.reset(cache_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QryConnInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.QryConnInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QryConnInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QryConnInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.QryConnInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.QryConnInfoRsp)
    MergeFrom(*source);
  }
}

void QryConnInfoRsp::MergeFrom(const QryConnInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.QryConnInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cache_.MergeFrom(from.cache_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
}

void QryConnInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.QryConnInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QryConnInfoRsp::CopyFrom(const QryConnInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.QryConnInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QryConnInfoRsp::IsInitialized() const {
  return true;
}

void QryConnInfoRsp::Swap(QryConnInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QryConnInfoRsp::InternalSwap(QryConnInfoRsp* other) {
  using std::swap;
  cache_.Swap(&other->cache_);
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QryConnInfoRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryRecordReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRecordReq::kUserIDFieldNumber;
const int QueryRecordReq::kSeqNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRecordReq::QueryRecordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_QueryRecordReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.QueryRecordReq)
}
QueryRecordReq::QueryRecordReq(const QueryRecordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  seqno_ = from.seqno_;
  // @@protoc_insertion_point(copy_constructor:txdata.QueryRecordReq)
}

void QueryRecordReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
}

QueryRecordReq::~QueryRecordReq() {
  // @@protoc_insertion_point(destructor:txdata.QueryRecordReq)
  SharedDtor();
}

void QueryRecordReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryRecordReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryRecordReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRecordReq& QueryRecordReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_QueryRecordReq.base);
  return *internal_default_instance();
}


void QueryRecordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.QueryRecordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool QueryRecordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.QueryRecordReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.QueryRecordReq.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 SeqNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.QueryRecordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.QueryRecordReq)
  return false;
#undef DO_
}

void QueryRecordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.QueryRecordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordReq.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.QueryRecordReq)
}

::google::protobuf::uint8* QueryRecordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.QueryRecordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordReq.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.QueryRecordReq)
  return target;
}

size_t QueryRecordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.QueryRecordReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRecordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.QueryRecordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRecordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRecordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.QueryRecordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.QueryRecordReq)
    MergeFrom(*source);
  }
}

void QueryRecordReq::MergeFrom(const QueryRecordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.QueryRecordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
}

void QueryRecordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.QueryRecordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRecordReq::CopyFrom(const QueryRecordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.QueryRecordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRecordReq::IsInitialized() const {
  return true;
}

void QueryRecordReq::Swap(QueryRecordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRecordReq::InternalSwap(QueryRecordReq* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seqno_, other->seqno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRecordReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryRecordRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRecordRsp::kUserIDFieldNumber;
const int QueryRecordRsp::kSeqNoFieldNumber;
const int QueryRecordRsp::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRecordRsp::QueryRecordRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_QueryRecordRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.QueryRecordRsp)
}
QueryRecordRsp::QueryRecordRsp(const QueryRecordRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  seqno_ = from.seqno_;
  // @@protoc_insertion_point(copy_constructor:txdata.QueryRecordRsp)
}

void QueryRecordRsp::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
}

QueryRecordRsp::~QueryRecordRsp() {
  // @@protoc_insertion_point(destructor:txdata.QueryRecordRsp)
  SharedDtor();
}

void QueryRecordRsp::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryRecordRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryRecordRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRecordRsp& QueryRecordRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_QueryRecordRsp.base);
  return *internal_default_instance();
}


void QueryRecordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.QueryRecordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqno_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool QueryRecordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.QueryRecordRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.QueryRecordRsp.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 SeqNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes Data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.QueryRecordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.QueryRecordRsp)
  return false;
#undef DO_
}

void QueryRecordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.QueryRecordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordRsp.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqno(), output);
  }

  // repeated bytes Data = 3;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->data(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.QueryRecordRsp)
}

::google::protobuf::uint8* QueryRecordRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.QueryRecordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.QueryRecordRsp.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqno(), target);
  }

  // repeated bytes Data = 3;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->data(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.QueryRecordRsp)
  return target;
}

size_t QueryRecordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.QueryRecordRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes Data = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0, n = this->data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // int64 SeqNo = 2;
  if (this->seqno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRecordRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.QueryRecordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRecordRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRecordRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.QueryRecordRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.QueryRecordRsp)
    MergeFrom(*source);
  }
}

void QueryRecordRsp::MergeFrom(const QueryRecordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.QueryRecordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.seqno() != 0) {
    set_seqno(from.seqno());
  }
}

void QueryRecordRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.QueryRecordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRecordRsp::CopyFrom(const QueryRecordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.QueryRecordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRecordRsp::IsInitialized() const {
  return true;
}

void QueryRecordRsp::Swap(QueryRecordRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRecordRsp::InternalSwap(QueryRecordRsp* other) {
  using std::swap;
  data_.InternalSwap(CastToBase(&other->data_));
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seqno_, other->seqno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRecordRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecCmdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecCmdReq::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecCmdReq::ExecCmdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ExecCmdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ExecCmdReq)
}
ExecCmdReq::ExecCmdReq(const ExecCmdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.ExecCmdReq)
}

void ExecCmdReq::SharedCtor() {
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecCmdReq::~ExecCmdReq() {
  // @@protoc_insertion_point(destructor:txdata.ExecCmdReq)
  SharedDtor();
}

void ExecCmdReq::SharedDtor() {
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecCmdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecCmdReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecCmdReq& ExecCmdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ExecCmdReq.base);
  return *internal_default_instance();
}


void ExecCmdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecCmdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ExecCmdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ExecCmdReq.Cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ExecCmdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ExecCmdReq)
  return false;
#undef DO_
}

void ExecCmdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdReq.Cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ExecCmdReq)
}

::google::protobuf::uint8* ExecCmdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdReq.Cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ExecCmdReq)
  return target;
}

size_t ExecCmdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ExecCmdReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Cmd = 1;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecCmdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ExecCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecCmdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecCmdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ExecCmdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ExecCmdReq)
    MergeFrom(*source);
  }
}

void ExecCmdReq::MergeFrom(const ExecCmdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ExecCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd().size() > 0) {

    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
}

void ExecCmdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ExecCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecCmdReq::CopyFrom(const ExecCmdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ExecCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecCmdReq::IsInitialized() const {
  return true;
}

void ExecCmdReq::Swap(ExecCmdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecCmdReq::InternalSwap(ExecCmdReq* other) {
  using std::swap;
  cmd_.Swap(&other->cmd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecCmdReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecCmdRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecCmdRsp::kReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecCmdRsp::ExecCmdRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_ExecCmdRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.ExecCmdRsp)
}
ExecCmdRsp::ExecCmdRsp(const ExecCmdRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reply().size() > 0) {
    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
  // @@protoc_insertion_point(copy_constructor:txdata.ExecCmdRsp)
}

void ExecCmdRsp::SharedCtor() {
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecCmdRsp::~ExecCmdRsp() {
  // @@protoc_insertion_point(destructor:txdata.ExecCmdRsp)
  SharedDtor();
}

void ExecCmdRsp::SharedDtor() {
  reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecCmdRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecCmdRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecCmdRsp& ExecCmdRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_ExecCmdRsp.base);
  return *internal_default_instance();
}


void ExecCmdRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecCmdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.ExecCmdRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Reply = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reply()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reply().data(), static_cast<int>(this->reply().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.ExecCmdRsp.Reply"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.ExecCmdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.ExecCmdRsp)
  return false;
#undef DO_
}

void ExecCmdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Reply = 1;
  if (this->reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdRsp.Reply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reply(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.ExecCmdRsp)
}

::google::protobuf::uint8* ExecCmdRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Reply = 1;
  if (this->reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.ExecCmdRsp.Reply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reply(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.ExecCmdRsp)
  return target;
}

size_t ExecCmdRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.ExecCmdRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Reply = 1;
  if (this->reply().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reply());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecCmdRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.ExecCmdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecCmdRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecCmdRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.ExecCmdRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.ExecCmdRsp)
    MergeFrom(*source);
  }
}

void ExecCmdRsp::MergeFrom(const ExecCmdRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.ExecCmdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reply().size() > 0) {

    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
}

void ExecCmdRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.ExecCmdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecCmdRsp::CopyFrom(const ExecCmdRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.ExecCmdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecCmdRsp::IsInitialized() const {
  return true;
}

void ExecCmdRsp::Swap(ExecCmdRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecCmdRsp::InternalSwap(ExecCmdRsp* other) {
  using std::swap;
  reply_.Swap(&other->reply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecCmdRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushWrap::InitAsDefaultInstance() {
  ::txdata::_PushWrap_default_instance_._instance.get_mutable()->msgtime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void PushWrap::clear_msgtime() {
  if (GetArenaNoVirtual() == NULL && msgtime_ != NULL) {
    delete msgtime_;
  }
  msgtime_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushWrap::kMsgNoFieldNumber;
const int PushWrap::kUserIDFieldNumber;
const int PushWrap::kMsgTimeFieldNumber;
const int PushWrap::kMsgTypeFieldNumber;
const int PushWrap::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushWrap::PushWrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_PushWrap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.PushWrap)
}
PushWrap::PushWrap(const PushWrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_msgtime()) {
    msgtime_ = new ::google::protobuf::Timestamp(*from.msgtime_);
  } else {
    msgtime_ = NULL;
  }
  ::memcpy(&msgno_, &from.msgno_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&msgno_)) + sizeof(msgtype_));
  // @@protoc_insertion_point(copy_constructor:txdata.PushWrap)
}

void PushWrap::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&msgtime_)) + sizeof(msgtype_));
}

PushWrap::~PushWrap() {
  // @@protoc_insertion_point(destructor:txdata.PushWrap)
  SharedDtor();
}

void PushWrap::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msgtime_;
}

void PushWrap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushWrap::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushWrap& PushWrap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_PushWrap.base);
  return *internal_default_instance();
}


void PushWrap::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.PushWrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msgtime_ != NULL) {
    delete msgtime_;
  }
  msgtime_ = NULL;
  ::memset(&msgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&msgno_)) + sizeof(msgtype_));
  _internal_metadata_.Clear();
}

bool PushWrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.PushWrap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 MsgNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.PushWrap.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp MsgTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .txdata.MsgType MsgType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::txdata::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes MsgData = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.PushWrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.PushWrap)
  return false;
#undef DO_
}

void PushWrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.PushWrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->msgno(), output);
  }

  // string UserID = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.PushWrap.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // .google.protobuf.Timestamp MsgTime = 3;
  if (this->has_msgtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_msgtime(), output);
  }

  // .txdata.MsgType MsgType = 11;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->msgtype(), output);
  }

  // bytes MsgData = 12;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.PushWrap)
}

::google::protobuf::uint8* PushWrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.PushWrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->msgno(), target);
  }

  // string UserID = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.PushWrap.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // .google.protobuf.Timestamp MsgTime = 3;
  if (this->has_msgtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_msgtime(), deterministic, target);
  }

  // .txdata.MsgType MsgType = 11;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->msgtype(), target);
  }

  // bytes MsgData = 12;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.PushWrap)
  return target;
}

size_t PushWrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.PushWrap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserID = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // bytes MsgData = 12;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .google.protobuf.Timestamp MsgTime = 3;
  if (this->has_msgtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgtime_);
  }

  // int64 MsgNo = 1;
  if (this->msgno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgno());
  }

  // .txdata.MsgType MsgType = 11;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushWrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.PushWrap)
  GOOGLE_DCHECK_NE(&from, this);
  const PushWrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushWrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.PushWrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.PushWrap)
    MergeFrom(*source);
  }
}

void PushWrap::MergeFrom(const PushWrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.PushWrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_msgtime()) {
    mutable_msgtime()->::google::protobuf::Timestamp::MergeFrom(from.msgtime());
  }
  if (from.msgno() != 0) {
    set_msgno(from.msgno());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void PushWrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.PushWrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushWrap::CopyFrom(const PushWrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.PushWrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushWrap::IsInitialized() const {
  return true;
}

void PushWrap::Swap(PushWrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushWrap::InternalSwap(PushWrap* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgtime_, other->msgtime_);
  swap(msgno_, other->msgno_);
  swap(msgtype_, other->msgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushWrap::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushItem::kSubjectFieldNumber;
const int PushItem::kContentFieldNumber;
const int PushItem::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushItem::PushItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_PushItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.PushItem)
}
PushItem::PushItem(const PushItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:txdata.PushItem)
}

void PushItem::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
}

PushItem::~PushItem() {
  // @@protoc_insertion_point(destructor:txdata.PushItem)
  SharedDtor();
}

void PushItem::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushItem::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushItem& PushItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_PushItem.base);
  return *internal_default_instance();
}


void PushItem::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.PushItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  _internal_metadata_.Clear();
}

bool PushItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.PushItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Subject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.PushItem.Subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.PushItem.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.PushItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.PushItem)
  return false;
#undef DO_
}

void PushItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.PushItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.PushItem.Subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // string Content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.PushItem.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.PushItem)
}

::google::protobuf::uint8* PushItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.PushItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.PushItem.Subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // string Content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.PushItem.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.PushItem)
  return target;
}

size_t PushItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.PushItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string Content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.PushItem)
  GOOGLE_DCHECK_NE(&from, this);
  const PushItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.PushItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.PushItem)
    MergeFrom(*source);
  }
}

void PushItem::MergeFrom(const PushItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.PushItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void PushItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.PushItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushItem::CopyFrom(const PushItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.PushItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushItem::IsInitialized() const {
  return true;
}

void PushItem::Swap(PushItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushItem::InternalSwap(PushItem* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushItem::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeReq::kFromMsgNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeReq::SubscribeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_SubscribeReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.SubscribeReq)
}
SubscribeReq::SubscribeReq(const SubscribeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frommsgno_ = from.frommsgno_;
  // @@protoc_insertion_point(copy_constructor:txdata.SubscribeReq)
}

void SubscribeReq::SharedCtor() {
  frommsgno_ = GOOGLE_LONGLONG(0);
}

SubscribeReq::~SubscribeReq() {
  // @@protoc_insertion_point(destructor:txdata.SubscribeReq)
  SharedDtor();
}

void SubscribeReq::SharedDtor() {
}

void SubscribeReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeReq::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeReq& SubscribeReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_SubscribeReq.base);
  return *internal_default_instance();
}


void SubscribeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frommsgno_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool SubscribeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.SubscribeReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 FromMsgNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frommsgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.SubscribeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.SubscribeReq)
  return false;
#undef DO_
}

void SubscribeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FromMsgNo = 1;
  if (this->frommsgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->frommsgno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.SubscribeReq)
}

::google::protobuf::uint8* SubscribeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FromMsgNo = 1;
  if (this->frommsgno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->frommsgno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.SubscribeReq)
  return target;
}

size_t SubscribeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.SubscribeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 FromMsgNo = 1;
  if (this->frommsgno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frommsgno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.SubscribeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.SubscribeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.SubscribeReq)
    MergeFrom(*source);
  }
}

void SubscribeReq::MergeFrom(const SubscribeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.SubscribeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frommsgno() != 0) {
    set_frommsgno(from.frommsgno());
  }
}

void SubscribeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.SubscribeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeReq::CopyFrom(const SubscribeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.SubscribeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeReq::IsInitialized() const {
  return true;
}

void SubscribeReq::Swap(SubscribeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeReq::InternalSwap(SubscribeReq* other) {
  using std::swap;
  swap(frommsgno_, other->frommsgno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeReq::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRsp::kFromMsgNoFieldNumber;
const int SubscribeRsp::kErrNoFieldNumber;
const int SubscribeRsp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRsp::SubscribeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_txdata_2eproto::scc_info_SubscribeRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:txdata.SubscribeRsp)
}
SubscribeRsp::SubscribeRsp(const SubscribeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  ::memcpy(&frommsgno_, &from.frommsgno_,
    static_cast<size_t>(reinterpret_cast<char*>(&errno_) -
    reinterpret_cast<char*>(&frommsgno_)) + sizeof(errno_));
  // @@protoc_insertion_point(copy_constructor:txdata.SubscribeRsp)
}

void SubscribeRsp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frommsgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errno_) -
      reinterpret_cast<char*>(&frommsgno_)) + sizeof(errno_));
}

SubscribeRsp::~SubscribeRsp() {
  // @@protoc_insertion_point(destructor:txdata.SubscribeRsp)
  SharedDtor();
}

void SubscribeRsp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRsp::descriptor() {
  ::protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRsp& SubscribeRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_txdata_2eproto::scc_info_SubscribeRsp.base);
  return *internal_default_instance();
}


void SubscribeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:txdata.SubscribeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frommsgno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errno_) -
      reinterpret_cast<char*>(&frommsgno_)) + sizeof(errno_));
  _internal_metadata_.Clear();
}

bool SubscribeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:txdata.SubscribeRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 FromMsgNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frommsgno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ErrNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "txdata.SubscribeRsp.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:txdata.SubscribeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:txdata.SubscribeRsp)
  return false;
#undef DO_
}

void SubscribeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:txdata.SubscribeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FromMsgNo = 1;
  if (this->frommsgno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->frommsgno(), output);
  }

  // int32 ErrNo = 2;
  if (this->errno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno(), output);
  }

  // string ErrMsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SubscribeRsp.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:txdata.SubscribeRsp)
}

::google::protobuf::uint8* SubscribeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:txdata.SubscribeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 FromMsgNo = 1;
  if (this->frommsgno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->frommsgno(), target);
  }

  // int32 ErrNo = 2;
  if (this->errno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno(), target);
  }

  // string ErrMsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "txdata.SubscribeRsp.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txdata.SubscribeRsp)
  return target;
}

size_t SubscribeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txdata.SubscribeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ErrMsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int64 FromMsgNo = 1;
  if (this->frommsgno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frommsgno());
  }

  // int32 ErrNo = 2;
  if (this->errno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:txdata.SubscribeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:txdata.SubscribeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:txdata.SubscribeRsp)
    MergeFrom(*source);
  }
}

void SubscribeRsp::MergeFrom(const SubscribeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:txdata.SubscribeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.frommsgno() != 0) {
    set_frommsgno(from.frommsgno());
  }
  if (from.errno() != 0) {
    set_errno(from.errno());
  }
}

void SubscribeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:txdata.SubscribeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRsp::CopyFrom(const SubscribeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txdata.SubscribeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRsp::IsInitialized() const {
  return true;
}

void SubscribeRsp::Swap(SubscribeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRsp::InternalSwap(SubscribeRsp* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(frommsgno_, other->frommsgno_);
  swap(errno_, other->errno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRsp::GetMetadata() const {
  protobuf_txdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_txdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace txdata
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::UniKey* Arena::CreateMaybeMessage< ::txdata::UniKey >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::UniKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::Common1Req* Arena::CreateMaybeMessage< ::txdata::Common1Req >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::Common1Req >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::Common1Rsp* Arena::CreateMaybeMessage< ::txdata::Common1Rsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::Common1Rsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::Common2Req* Arena::CreateMaybeMessage< ::txdata::Common2Req >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::Common2Req >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::Common2Rsp* Arena::CreateMaybeMessage< ::txdata::Common2Rsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::Common2Rsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::Common2Ack* Arena::CreateMaybeMessage< ::txdata::Common2Ack >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::Common2Ack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::CommonErr* Arena::CreateMaybeMessage< ::txdata::CommonErr >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::CommonErr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ConnectionInfo* Arena::CreateMaybeMessage< ::txdata::ConnectionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ConnectionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::DisconnectedData* Arena::CreateMaybeMessage< ::txdata::DisconnectedData >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::DisconnectedData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ConnectReq* Arena::CreateMaybeMessage< ::txdata::ConnectReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ConnectReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ConnectRsp* Arena::CreateMaybeMessage< ::txdata::ConnectRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ConnectRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::OnlineNotice* Arena::CreateMaybeMessage< ::txdata::OnlineNotice >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::OnlineNotice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::SystemReport* Arena::CreateMaybeMessage< ::txdata::SystemReport >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::SystemReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::EchoItem* Arena::CreateMaybeMessage< ::txdata::EchoItem >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::EchoItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::BinItem* Arena::CreateMaybeMessage< ::txdata::BinItem >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::BinItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::EmailItem* Arena::CreateMaybeMessage< ::txdata::EmailItem >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::EmailItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::QryConnInfoReq* Arena::CreateMaybeMessage< ::txdata::QryConnInfoReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::QryConnInfoReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::QryConnInfoRsp_CacheEntry_DoNotUse* Arena::CreateMaybeMessage< ::txdata::QryConnInfoRsp_CacheEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::QryConnInfoRsp_CacheEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::QryConnInfoRsp* Arena::CreateMaybeMessage< ::txdata::QryConnInfoRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::QryConnInfoRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::QueryRecordReq* Arena::CreateMaybeMessage< ::txdata::QueryRecordReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::QueryRecordReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::QueryRecordRsp* Arena::CreateMaybeMessage< ::txdata::QueryRecordRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::QueryRecordRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ExecCmdReq* Arena::CreateMaybeMessage< ::txdata::ExecCmdReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ExecCmdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::ExecCmdRsp* Arena::CreateMaybeMessage< ::txdata::ExecCmdRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::ExecCmdRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::PushWrap* Arena::CreateMaybeMessage< ::txdata::PushWrap >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::PushWrap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::PushItem* Arena::CreateMaybeMessage< ::txdata::PushItem >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::PushItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::SubscribeReq* Arena::CreateMaybeMessage< ::txdata::SubscribeReq >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::SubscribeReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::txdata::SubscribeRsp* Arena::CreateMaybeMessage< ::txdata::SubscribeRsp >(Arena* arena) {
  return Arena::CreateInternal< ::txdata::SubscribeRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
