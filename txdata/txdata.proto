syntax = "proto3";

package txdata;

import public "google/protobuf/timestamp.proto";

enum MsgType {
    Zero1                =  0;
    ID_ConnectedData     =  1;
    ID_DisconnectedData  =  2;
    ID_CommonNtosReq     = 31;
    ID_CommonNtosRsp     = 32;
    ID_CommonStonReq     = 33;
    ID_CommonStoaRsp     = 34;
    ID_ExecuteCommandReq = 35;
    ID_ExecuteCommandRsp = 36;
}

message ConnectionInfo {
    enum AppType {
        Zero2  = 0;
        SERVER = 1; //服务端
        NODE   = 2; //节点端
        CLIENT = 3; //客户端,受控端
    }
    enum LinkType {
        Zero3   = 0;
        CONNECT = 1; //以client的身份,connect到server,建立起来的连接.
        ACCEPT  = 2; //以server的身份,accept,建立起来的连接.
    }
    string          UniqueID = 1;//唯一ID
    string          BelongID = 2;//属于哪个ID
    string          Version  = 3;//版本号
    AppType         ExeType  = 4;
    bool            IsLeaf   = 5;//叶子节点(当AppType/ExeType为NODE时,表示NODE是否为LeafNode)
    LinkType        LinkDir  = 6;//连接方向
    int32           ExePid   = 7;//进程ID
    string          ExePath  = 8;//程序路径
}

message ConnectedData {
    ConnectionInfo  Info    = 1;
    repeated string Pathway = 2;//两者之间要按顺序走哪些AGENT
/* ParentA:(父亲agent), ParentC1:(父亲client1), SonA:(儿子agent), GrandsonA:(孙子agent)
ParentA
│  ParentC1               ParentA收到的Pathway=[]
│  ParentC2               ParentA收到的Pathway=[]
│
└─SonA                    ParentA收到的Pathway=[SonA]
    │  SonC1              ParentA收到的Pathway=[SonA]
    │  SonC2              ParentA收到的Pathway=[SonA]
    │
    └─GrandsonA           ParentA收到的Pathway=[GrandsonA,SonA]
            GrandsonC1    ParentA收到的Pathway=[GrandsonA,SonA]
            GrandsonC2    ParentA收到的Pathway=[GrandsonA,SonA]
*/
}

message DisconnectedData {
    ConnectionInfo  Info    = 1;
}

message ExecuteCommandReq {
    int64           RequestID = 1;
    repeated string Pathway   = 2;
    string          Command   = 3;
}

message ExecuteCommandRsp {
    int64           RequestID = 1;
    string          UniqueID  = 2;//这个参数可以没有,我用它检查了数据,安心
    string          Result    = 3;//结果.
    int32           ErrNo     = 4;
    string          ErrMsg    = 5;
}

message CommonNtosReq {//通用请求(请求的方向是agentTOserver)
    int64                     RequestID  = 1;//(正:超时等待,要回响应);(零:不等待,不用回复响应);(负:背景上报,要回响应)
    string                    UniqueID   = 2;
    int64                     SeqNo      = 3;//(正:缓存数据,发不过去要重试)(零:未缓存数据,发不过去就算了)(负:绝无可能)
    bool                      Endeavour  = 4;//收不到服务器的响应就不罢休.
    string                    DataType   = 5;
    bytes                     Data       = 6;
    google.protobuf.Timestamp ReportTime = 7;
}

message CommonNtosRsp {
    int64           RequestID = 1;
    repeated string Pathway   = 2;
    int64           SeqNo     = 3;//这个参数可以没有,我用它检查了数据,安心
    int32           ErrNo     = 4;//(ErrNo==0)表示SERVER处理成功,AGENT可以删除自己的缓存了.
    string          ErrMsg    = 5;//(ErrNo==0 && len(ErrMsg)==0)表示SERVER处理成功,同时没有任何警告,处理得非常完美.
}

message ReportDataItem {
    string Topic = 1;//Data的主题.
    string Data  = 2;
}

message SendMailItem {//发送邮件的项
    string Username    = 1;
    string Password    = 2;
    string SmtpAddr    = 3;
    string To          = 4;
    string Subject     = 5;
    string ContentType = 6;
    string Content     = 7;
}
