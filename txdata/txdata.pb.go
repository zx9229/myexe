// Code generated by protoc-gen-go. DO NOT EDIT.
// source: txdata.proto

package txdata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Timestamp from public import google/protobuf/timestamp.proto
type Timestamp = timestamp.Timestamp

// 注意: 务必要和各结构体的序号对应起来. 校验的命令如下所示:
// Linux  : grep    "^message" txdata.proto | awk -F" " 'BEGIN{cnt=0}{print"ID_"$2,"= "cnt++";"}'
// Linux  : grep    "^message" txdata.proto
// Windows: findstr "^message" txdata.proto
type MsgType int32

const (
	MsgType_Zero1               MsgType = 0
	MsgType_ID_Common2Ack       MsgType = 1
	MsgType_ID_CommonErr        MsgType = 2
	MsgType_ID_Common2Req       MsgType = 3
	MsgType_ID_Common2Rsp       MsgType = 4
	MsgType_ID_ConnectionInfo   MsgType = 5
	MsgType_ID_DisconnectedData MsgType = 6
	MsgType_ID_ConnectReq       MsgType = 7
	MsgType_ID_ConnectRsp       MsgType = 8
	MsgType_ID_OnlineNotice     MsgType = 9
	MsgType_ID_SystemReport     MsgType = 10
	MsgType_ID_QueryRecordReq   MsgType = 11
	MsgType_ID_QueryRecordRsp   MsgType = 12
	MsgType_ID_ExecCmdReq       MsgType = 13
	MsgType_ID_ExecCmdRsp       MsgType = 14
	MsgType_ID_EchoItem         MsgType = 15
	MsgType_ID_ReportDataItem   MsgType = 16
	MsgType_ID_SendMailItem     MsgType = 17
	MsgType_ID_QryConnInfoReq   MsgType = 18
	MsgType_ID_QryConnInfoRsp   MsgType = 19
)

var MsgType_name = map[int32]string{
	0:  "Zero1",
	1:  "ID_Common2Ack",
	2:  "ID_CommonErr",
	3:  "ID_Common2Req",
	4:  "ID_Common2Rsp",
	5:  "ID_ConnectionInfo",
	6:  "ID_DisconnectedData",
	7:  "ID_ConnectReq",
	8:  "ID_ConnectRsp",
	9:  "ID_OnlineNotice",
	10: "ID_SystemReport",
	11: "ID_QueryRecordReq",
	12: "ID_QueryRecordRsp",
	13: "ID_ExecCmdReq",
	14: "ID_ExecCmdRsp",
	15: "ID_EchoItem",
	16: "ID_ReportDataItem",
	17: "ID_SendMailItem",
	18: "ID_QryConnInfoReq",
	19: "ID_QryConnInfoRsp",
}
var MsgType_value = map[string]int32{
	"Zero1":               0,
	"ID_Common2Ack":       1,
	"ID_CommonErr":        2,
	"ID_Common2Req":       3,
	"ID_Common2Rsp":       4,
	"ID_ConnectionInfo":   5,
	"ID_DisconnectedData": 6,
	"ID_ConnectReq":       7,
	"ID_ConnectRsp":       8,
	"ID_OnlineNotice":     9,
	"ID_SystemReport":     10,
	"ID_QueryRecordReq":   11,
	"ID_QueryRecordRsp":   12,
	"ID_ExecCmdReq":       13,
	"ID_ExecCmdRsp":       14,
	"ID_EchoItem":         15,
	"ID_ReportDataItem":   16,
	"ID_SendMailItem":     17,
	"ID_QryConnInfoReq":   18,
	"ID_QryConnInfoRsp":   19,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{0}
}

type ConnectionInfo_LinkType int32

const (
	ConnectionInfo_Zero2   ConnectionInfo_LinkType = 0
	ConnectionInfo_CONNECT ConnectionInfo_LinkType = 1
	ConnectionInfo_ACCEPT  ConnectionInfo_LinkType = 2
)

var ConnectionInfo_LinkType_name = map[int32]string{
	0: "Zero2",
	1: "CONNECT",
	2: "ACCEPT",
}
var ConnectionInfo_LinkType_value = map[string]int32{
	"Zero2":   0,
	"CONNECT": 1,
	"ACCEPT":  2,
}

func (x ConnectionInfo_LinkType) String() string {
	return proto.EnumName(ConnectionInfo_LinkType_name, int32(x))
}
func (ConnectionInfo_LinkType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{5, 0}
}

// 唯一标识一个消息.
type UniKey struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	MsgNo                int64    `protobuf:"varint,2,opt,name=MsgNo,proto3" json:"MsgNo,omitempty"`
	SeqNo                int32    `protobuf:"varint,3,opt,name=SeqNo,proto3" json:"SeqNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UniKey) Reset()         { *m = UniKey{} }
func (m *UniKey) String() string { return proto.CompactTextString(m) }
func (*UniKey) ProtoMessage()    {}
func (*UniKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{0}
}
func (m *UniKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UniKey.Unmarshal(m, b)
}
func (m *UniKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UniKey.Marshal(b, m, deterministic)
}
func (dst *UniKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniKey.Merge(dst, src)
}
func (m *UniKey) XXX_Size() int {
	return xxx_messageInfo_UniKey.Size(m)
}
func (m *UniKey) XXX_DiscardUnknown() {
	xxx_messageInfo_UniKey.DiscardUnknown(m)
}

var xxx_messageInfo_UniKey proto.InternalMessageInfo

func (m *UniKey) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UniKey) GetMsgNo() int64 {
	if m != nil {
		return m.MsgNo
	}
	return 0
}

func (m *UniKey) GetSeqNo() int32 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

// 对某消息进行确认.
type Common2Ack struct {
	Key                  *UniKey  `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	SenderID             string   `protobuf:"bytes,2,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	RecverID             string   `protobuf:"bytes,3,opt,name=RecverID,proto3" json:"RecverID,omitempty"`
	TxToRoot             bool     `protobuf:"varint,4,opt,name=TxToRoot,proto3" json:"TxToRoot,omitempty"`
	IsLog                bool     `protobuf:"varint,5,opt,name=IsLog,proto3" json:"IsLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Common2Ack) Reset()         { *m = Common2Ack{} }
func (m *Common2Ack) String() string { return proto.CompactTextString(m) }
func (*Common2Ack) ProtoMessage()    {}
func (*Common2Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{1}
}
func (m *Common2Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Common2Ack.Unmarshal(m, b)
}
func (m *Common2Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Common2Ack.Marshal(b, m, deterministic)
}
func (dst *Common2Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Common2Ack.Merge(dst, src)
}
func (m *Common2Ack) XXX_Size() int {
	return xxx_messageInfo_Common2Ack.Size(m)
}
func (m *Common2Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Common2Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Common2Ack proto.InternalMessageInfo

func (m *Common2Ack) GetKey() *UniKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Common2Ack) GetSenderID() string {
	if m != nil {
		return m.SenderID
	}
	return ""
}

func (m *Common2Ack) GetRecverID() string {
	if m != nil {
		return m.RecverID
	}
	return ""
}

func (m *Common2Ack) GetTxToRoot() bool {
	if m != nil {
		return m.TxToRoot
	}
	return false
}

func (m *Common2Ack) GetIsLog() bool {
	if m != nil {
		return m.IsLog
	}
	return false
}

// 常用于(Common2Req)和(Common2Rsp)的通信过程中.
type CommonErr struct {
	ErrNo                int32    `protobuf:"varint,1,opt,name=ErrNo,proto3" json:"ErrNo,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonErr) Reset()         { *m = CommonErr{} }
func (m *CommonErr) String() string { return proto.CompactTextString(m) }
func (*CommonErr) ProtoMessage()    {}
func (*CommonErr) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{2}
}
func (m *CommonErr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonErr.Unmarshal(m, b)
}
func (m *CommonErr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonErr.Marshal(b, m, deterministic)
}
func (dst *CommonErr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonErr.Merge(dst, src)
}
func (m *CommonErr) XXX_Size() int {
	return xxx_messageInfo_CommonErr.Size(m)
}
func (m *CommonErr) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonErr.DiscardUnknown(m)
}

var xxx_messageInfo_CommonErr proto.InternalMessageInfo

func (m *CommonErr) GetErrNo() int32 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *CommonErr) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type Common2Req struct {
	Key                  *UniKey              `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	SenderID             string               `protobuf:"bytes,2,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	RecverID             string               `protobuf:"bytes,3,opt,name=RecverID,proto3" json:"RecverID,omitempty"`
	TxToRoot             bool                 `protobuf:"varint,4,opt,name=TxToRoot,proto3" json:"TxToRoot,omitempty"`
	IsLog                bool                 `protobuf:"varint,5,opt,name=IsLog,proto3" json:"IsLog,omitempty"`
	IsSafe               bool                 `protobuf:"varint,6,opt,name=IsSafe,proto3" json:"IsSafe,omitempty"`
	IsPush               bool                 `protobuf:"varint,7,opt,name=IsPush,proto3" json:"IsPush,omitempty"`
	UpCache              bool                 `protobuf:"varint,8,opt,name=UpCache,proto3" json:"UpCache,omitempty"`
	ReqType              MsgType              `protobuf:"varint,9,opt,name=ReqType,proto3,enum=txdata.MsgType" json:"ReqType,omitempty"`
	ReqData              []byte               `protobuf:"bytes,10,opt,name=ReqData,proto3" json:"ReqData,omitempty"`
	ReqTime              *timestamp.Timestamp `protobuf:"bytes,11,opt,name=ReqTime,proto3" json:"ReqTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Common2Req) Reset()         { *m = Common2Req{} }
func (m *Common2Req) String() string { return proto.CompactTextString(m) }
func (*Common2Req) ProtoMessage()    {}
func (*Common2Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{3}
}
func (m *Common2Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Common2Req.Unmarshal(m, b)
}
func (m *Common2Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Common2Req.Marshal(b, m, deterministic)
}
func (dst *Common2Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Common2Req.Merge(dst, src)
}
func (m *Common2Req) XXX_Size() int {
	return xxx_messageInfo_Common2Req.Size(m)
}
func (m *Common2Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Common2Req.DiscardUnknown(m)
}

var xxx_messageInfo_Common2Req proto.InternalMessageInfo

func (m *Common2Req) GetKey() *UniKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Common2Req) GetSenderID() string {
	if m != nil {
		return m.SenderID
	}
	return ""
}

func (m *Common2Req) GetRecverID() string {
	if m != nil {
		return m.RecverID
	}
	return ""
}

func (m *Common2Req) GetTxToRoot() bool {
	if m != nil {
		return m.TxToRoot
	}
	return false
}

func (m *Common2Req) GetIsLog() bool {
	if m != nil {
		return m.IsLog
	}
	return false
}

func (m *Common2Req) GetIsSafe() bool {
	if m != nil {
		return m.IsSafe
	}
	return false
}

func (m *Common2Req) GetIsPush() bool {
	if m != nil {
		return m.IsPush
	}
	return false
}

func (m *Common2Req) GetUpCache() bool {
	if m != nil {
		return m.UpCache
	}
	return false
}

func (m *Common2Req) GetReqType() MsgType {
	if m != nil {
		return m.ReqType
	}
	return MsgType_Zero1
}

func (m *Common2Req) GetReqData() []byte {
	if m != nil {
		return m.ReqData
	}
	return nil
}

func (m *Common2Req) GetReqTime() *timestamp.Timestamp {
	if m != nil {
		return m.ReqTime
	}
	return nil
}

// 可能出现的情况:SERVER收到了请求结构体,但是解析请求结构体失败,然后不知道怎么赋值响应结构体,便可使用(CommonErr)返回具体错误.
type Common2Rsp struct {
	Key                  *UniKey              `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	SenderID             string               `protobuf:"bytes,2,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	RecverID             string               `protobuf:"bytes,3,opt,name=RecverID,proto3" json:"RecverID,omitempty"`
	TxToRoot             bool                 `protobuf:"varint,4,opt,name=TxToRoot,proto3" json:"TxToRoot,omitempty"`
	IsLog                bool                 `protobuf:"varint,5,opt,name=IsLog,proto3" json:"IsLog,omitempty"`
	IsSafe               bool                 `protobuf:"varint,6,opt,name=IsSafe,proto3" json:"IsSafe,omitempty"`
	IsPush               bool                 `protobuf:"varint,7,opt,name=IsPush,proto3" json:"IsPush,omitempty"`
	UpCache              bool                 `protobuf:"varint,8,opt,name=UpCache,proto3" json:"UpCache,omitempty"`
	RspType              MsgType              `protobuf:"varint,9,opt,name=RspType,proto3,enum=txdata.MsgType" json:"RspType,omitempty"`
	RspData              []byte               `protobuf:"bytes,10,opt,name=RspData,proto3" json:"RspData,omitempty"`
	RspTime              *timestamp.Timestamp `protobuf:"bytes,11,opt,name=RspTime,proto3" json:"RspTime,omitempty"`
	IsLast               bool                 `protobuf:"varint,12,opt,name=IsLast,proto3" json:"IsLast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Common2Rsp) Reset()         { *m = Common2Rsp{} }
func (m *Common2Rsp) String() string { return proto.CompactTextString(m) }
func (*Common2Rsp) ProtoMessage()    {}
func (*Common2Rsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{4}
}
func (m *Common2Rsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Common2Rsp.Unmarshal(m, b)
}
func (m *Common2Rsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Common2Rsp.Marshal(b, m, deterministic)
}
func (dst *Common2Rsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Common2Rsp.Merge(dst, src)
}
func (m *Common2Rsp) XXX_Size() int {
	return xxx_messageInfo_Common2Rsp.Size(m)
}
func (m *Common2Rsp) XXX_DiscardUnknown() {
	xxx_messageInfo_Common2Rsp.DiscardUnknown(m)
}

var xxx_messageInfo_Common2Rsp proto.InternalMessageInfo

func (m *Common2Rsp) GetKey() *UniKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Common2Rsp) GetSenderID() string {
	if m != nil {
		return m.SenderID
	}
	return ""
}

func (m *Common2Rsp) GetRecverID() string {
	if m != nil {
		return m.RecverID
	}
	return ""
}

func (m *Common2Rsp) GetTxToRoot() bool {
	if m != nil {
		return m.TxToRoot
	}
	return false
}

func (m *Common2Rsp) GetIsLog() bool {
	if m != nil {
		return m.IsLog
	}
	return false
}

func (m *Common2Rsp) GetIsSafe() bool {
	if m != nil {
		return m.IsSafe
	}
	return false
}

func (m *Common2Rsp) GetIsPush() bool {
	if m != nil {
		return m.IsPush
	}
	return false
}

func (m *Common2Rsp) GetUpCache() bool {
	if m != nil {
		return m.UpCache
	}
	return false
}

func (m *Common2Rsp) GetRspType() MsgType {
	if m != nil {
		return m.RspType
	}
	return MsgType_Zero1
}

func (m *Common2Rsp) GetRspData() []byte {
	if m != nil {
		return m.RspData
	}
	return nil
}

func (m *Common2Rsp) GetRspTime() *timestamp.Timestamp {
	if m != nil {
		return m.RspTime
	}
	return nil
}

func (m *Common2Rsp) GetIsLast() bool {
	if m != nil {
		return m.IsLast
	}
	return false
}

type ConnectionInfo struct {
	UserID               string                  `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	BelongID             string                  `protobuf:"bytes,2,opt,name=BelongID,proto3" json:"BelongID,omitempty"`
	Version              string                  `protobuf:"bytes,3,opt,name=Version,proto3" json:"Version,omitempty"`
	LinkMode             ConnectionInfo_LinkType `protobuf:"varint,4,opt,name=LinkMode,proto3,enum=txdata.ConnectionInfo_LinkType" json:"LinkMode,omitempty"`
	ExePid               int32                   `protobuf:"varint,5,opt,name=ExePid,proto3" json:"ExePid,omitempty"`
	ExePath              string                  `protobuf:"bytes,6,opt,name=ExePath,proto3" json:"ExePath,omitempty"`
	Remark               string                  `protobuf:"bytes,7,opt,name=Remark,proto3" json:"Remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ConnectionInfo) Reset()         { *m = ConnectionInfo{} }
func (m *ConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectionInfo) ProtoMessage()    {}
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{5}
}
func (m *ConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionInfo.Unmarshal(m, b)
}
func (m *ConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionInfo.Marshal(b, m, deterministic)
}
func (dst *ConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionInfo.Merge(dst, src)
}
func (m *ConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectionInfo.Size(m)
}
func (m *ConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionInfo proto.InternalMessageInfo

func (m *ConnectionInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ConnectionInfo) GetBelongID() string {
	if m != nil {
		return m.BelongID
	}
	return ""
}

func (m *ConnectionInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ConnectionInfo) GetLinkMode() ConnectionInfo_LinkType {
	if m != nil {
		return m.LinkMode
	}
	return ConnectionInfo_Zero2
}

func (m *ConnectionInfo) GetExePid() int32 {
	if m != nil {
		return m.ExePid
	}
	return 0
}

func (m *ConnectionInfo) GetExePath() string {
	if m != nil {
		return m.ExePath
	}
	return ""
}

func (m *ConnectionInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type DisconnectedData struct {
	Info                 *ConnectionInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DisconnectedData) Reset()         { *m = DisconnectedData{} }
func (m *DisconnectedData) String() string { return proto.CompactTextString(m) }
func (*DisconnectedData) ProtoMessage()    {}
func (*DisconnectedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{6}
}
func (m *DisconnectedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectedData.Unmarshal(m, b)
}
func (m *DisconnectedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectedData.Marshal(b, m, deterministic)
}
func (dst *DisconnectedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectedData.Merge(dst, src)
}
func (m *DisconnectedData) XXX_Size() int {
	return xxx_messageInfo_DisconnectedData.Size(m)
}
func (m *DisconnectedData) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectedData.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectedData proto.InternalMessageInfo

func (m *DisconnectedData) GetInfo() *ConnectionInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ConnectReq struct {
	InfoReq              *ConnectionInfo `protobuf:"bytes,1,opt,name=InfoReq,proto3" json:"InfoReq,omitempty"`
	Pathway              []string        `protobuf:"bytes,2,rep,name=Pathway,proto3" json:"Pathway,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConnectReq) Reset()         { *m = ConnectReq{} }
func (m *ConnectReq) String() string { return proto.CompactTextString(m) }
func (*ConnectReq) ProtoMessage()    {}
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{7}
}
func (m *ConnectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectReq.Unmarshal(m, b)
}
func (m *ConnectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectReq.Marshal(b, m, deterministic)
}
func (dst *ConnectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectReq.Merge(dst, src)
}
func (m *ConnectReq) XXX_Size() int {
	return xxx_messageInfo_ConnectReq.Size(m)
}
func (m *ConnectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectReq proto.InternalMessageInfo

func (m *ConnectReq) GetInfoReq() *ConnectionInfo {
	if m != nil {
		return m.InfoReq
	}
	return nil
}

func (m *ConnectReq) GetPathway() []string {
	if m != nil {
		return m.Pathway
	}
	return nil
}

type ConnectRsp struct {
	InfoReq              *ConnectionInfo `protobuf:"bytes,1,opt,name=InfoReq,proto3" json:"InfoReq,omitempty"`
	InfoRsp              *ConnectionInfo `protobuf:"bytes,2,opt,name=InfoRsp,proto3" json:"InfoRsp,omitempty"`
	ErrNo                int32           `protobuf:"varint,3,opt,name=ErrNo,proto3" json:"ErrNo,omitempty"`
	ErrMsg               string          `protobuf:"bytes,4,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConnectRsp) Reset()         { *m = ConnectRsp{} }
func (m *ConnectRsp) String() string { return proto.CompactTextString(m) }
func (*ConnectRsp) ProtoMessage()    {}
func (*ConnectRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{8}
}
func (m *ConnectRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRsp.Unmarshal(m, b)
}
func (m *ConnectRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRsp.Marshal(b, m, deterministic)
}
func (dst *ConnectRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRsp.Merge(dst, src)
}
func (m *ConnectRsp) XXX_Size() int {
	return xxx_messageInfo_ConnectRsp.Size(m)
}
func (m *ConnectRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRsp proto.InternalMessageInfo

func (m *ConnectRsp) GetInfoReq() *ConnectionInfo {
	if m != nil {
		return m.InfoReq
	}
	return nil
}

func (m *ConnectRsp) GetInfoRsp() *ConnectionInfo {
	if m != nil {
		return m.InfoRsp
	}
	return nil
}

func (m *ConnectRsp) GetErrNo() int32 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *ConnectRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

// 从(根节点)发往(叶子节点)方向的通知,表达"收到通知的节点,此刻都能和ROOT连通"
type OnlineNotice struct {
	RootIsOnline         bool     `protobuf:"varint,1,opt,name=RootIsOnline,proto3" json:"RootIsOnline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnlineNotice) Reset()         { *m = OnlineNotice{} }
func (m *OnlineNotice) String() string { return proto.CompactTextString(m) }
func (*OnlineNotice) ProtoMessage()    {}
func (*OnlineNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{9}
}
func (m *OnlineNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnlineNotice.Unmarshal(m, b)
}
func (m *OnlineNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnlineNotice.Marshal(b, m, deterministic)
}
func (dst *OnlineNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnlineNotice.Merge(dst, src)
}
func (m *OnlineNotice) XXX_Size() int {
	return xxx_messageInfo_OnlineNotice.Size(m)
}
func (m *OnlineNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_OnlineNotice.DiscardUnknown(m)
}

var xxx_messageInfo_OnlineNotice proto.InternalMessageInfo

func (m *OnlineNotice) GetRootIsOnline() bool {
	if m != nil {
		return m.RootIsOnline
	}
	return false
}

// 发往(根节点)方向的通知/报告.
type SystemReport struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Pathway              []string `protobuf:"bytes,2,rep,name=Pathway,proto3" json:"Pathway,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemReport) Reset()         { *m = SystemReport{} }
func (m *SystemReport) String() string { return proto.CompactTextString(m) }
func (*SystemReport) ProtoMessage()    {}
func (*SystemReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{10}
}
func (m *SystemReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemReport.Unmarshal(m, b)
}
func (m *SystemReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemReport.Marshal(b, m, deterministic)
}
func (dst *SystemReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemReport.Merge(dst, src)
}
func (m *SystemReport) XXX_Size() int {
	return xxx_messageInfo_SystemReport.Size(m)
}
func (m *SystemReport) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemReport.DiscardUnknown(m)
}

var xxx_messageInfo_SystemReport proto.InternalMessageInfo

func (m *SystemReport) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *SystemReport) GetPathway() []string {
	if m != nil {
		return m.Pathway
	}
	return nil
}

func (m *SystemReport) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// 从ROOT查询记录的请求.
type QueryRecordReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	SeqNo                int64    `protobuf:"varint,2,opt,name=SeqNo,proto3" json:"SeqNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRecordReq) Reset()         { *m = QueryRecordReq{} }
func (m *QueryRecordReq) String() string { return proto.CompactTextString(m) }
func (*QueryRecordReq) ProtoMessage()    {}
func (*QueryRecordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{11}
}
func (m *QueryRecordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRecordReq.Unmarshal(m, b)
}
func (m *QueryRecordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRecordReq.Marshal(b, m, deterministic)
}
func (dst *QueryRecordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRecordReq.Merge(dst, src)
}
func (m *QueryRecordReq) XXX_Size() int {
	return xxx_messageInfo_QueryRecordReq.Size(m)
}
func (m *QueryRecordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRecordReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRecordReq proto.InternalMessageInfo

func (m *QueryRecordReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *QueryRecordReq) GetSeqNo() int64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

// 从ROOT查询记录的响应.
type QueryRecordRsp struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	SeqNo                int64    `protobuf:"varint,2,opt,name=SeqNo,proto3" json:"SeqNo,omitempty"`
	Data                 [][]byte `protobuf:"bytes,3,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRecordRsp) Reset()         { *m = QueryRecordRsp{} }
func (m *QueryRecordRsp) String() string { return proto.CompactTextString(m) }
func (*QueryRecordRsp) ProtoMessage()    {}
func (*QueryRecordRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{12}
}
func (m *QueryRecordRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRecordRsp.Unmarshal(m, b)
}
func (m *QueryRecordRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRecordRsp.Marshal(b, m, deterministic)
}
func (dst *QueryRecordRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRecordRsp.Merge(dst, src)
}
func (m *QueryRecordRsp) XXX_Size() int {
	return xxx_messageInfo_QueryRecordRsp.Size(m)
}
func (m *QueryRecordRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRecordRsp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRecordRsp proto.InternalMessageInfo

func (m *QueryRecordRsp) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *QueryRecordRsp) GetSeqNo() int64 {
	if m != nil {
		return m.SeqNo
	}
	return 0
}

func (m *QueryRecordRsp) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 执行命令的请求.
type ExecCmdReq struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecCmdReq) Reset()         { *m = ExecCmdReq{} }
func (m *ExecCmdReq) String() string { return proto.CompactTextString(m) }
func (*ExecCmdReq) ProtoMessage()    {}
func (*ExecCmdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{13}
}
func (m *ExecCmdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecCmdReq.Unmarshal(m, b)
}
func (m *ExecCmdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecCmdReq.Marshal(b, m, deterministic)
}
func (dst *ExecCmdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecCmdReq.Merge(dst, src)
}
func (m *ExecCmdReq) XXX_Size() int {
	return xxx_messageInfo_ExecCmdReq.Size(m)
}
func (m *ExecCmdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecCmdReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExecCmdReq proto.InternalMessageInfo

func (m *ExecCmdReq) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

// 执行命令的响应.
type ExecCmdRsp struct {
	Reply                string   `protobuf:"bytes,1,opt,name=Reply,proto3" json:"Reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecCmdRsp) Reset()         { *m = ExecCmdRsp{} }
func (m *ExecCmdRsp) String() string { return proto.CompactTextString(m) }
func (*ExecCmdRsp) ProtoMessage()    {}
func (*ExecCmdRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{14}
}
func (m *ExecCmdRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecCmdRsp.Unmarshal(m, b)
}
func (m *ExecCmdRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecCmdRsp.Marshal(b, m, deterministic)
}
func (dst *ExecCmdRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecCmdRsp.Merge(dst, src)
}
func (m *ExecCmdRsp) XXX_Size() int {
	return xxx_messageInfo_ExecCmdRsp.Size(m)
}
func (m *ExecCmdRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecCmdRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ExecCmdRsp proto.InternalMessageInfo

func (m *ExecCmdRsp) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

type EchoItem struct {
	LocalID              string   `protobuf:"bytes,1,opt,name=LocalID,proto3" json:"LocalID,omitempty"`
	RemoteID             string   `protobuf:"bytes,2,opt,name=RemoteID,proto3" json:"RemoteID,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoItem) Reset()         { *m = EchoItem{} }
func (m *EchoItem) String() string { return proto.CompactTextString(m) }
func (*EchoItem) ProtoMessage()    {}
func (*EchoItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{15}
}
func (m *EchoItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoItem.Unmarshal(m, b)
}
func (m *EchoItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoItem.Marshal(b, m, deterministic)
}
func (dst *EchoItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoItem.Merge(dst, src)
}
func (m *EchoItem) XXX_Size() int {
	return xxx_messageInfo_EchoItem.Size(m)
}
func (m *EchoItem) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoItem.DiscardUnknown(m)
}

var xxx_messageInfo_EchoItem proto.InternalMessageInfo

func (m *EchoItem) GetLocalID() string {
	if m != nil {
		return m.LocalID
	}
	return ""
}

func (m *EchoItem) GetRemoteID() string {
	if m != nil {
		return m.RemoteID
	}
	return ""
}

func (m *EchoItem) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReportDataItem struct {
	Topic                string   `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportDataItem) Reset()         { *m = ReportDataItem{} }
func (m *ReportDataItem) String() string { return proto.CompactTextString(m) }
func (*ReportDataItem) ProtoMessage()    {}
func (*ReportDataItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{16}
}
func (m *ReportDataItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportDataItem.Unmarshal(m, b)
}
func (m *ReportDataItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportDataItem.Marshal(b, m, deterministic)
}
func (dst *ReportDataItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportDataItem.Merge(dst, src)
}
func (m *ReportDataItem) XXX_Size() int {
	return xxx_messageInfo_ReportDataItem.Size(m)
}
func (m *ReportDataItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportDataItem.DiscardUnknown(m)
}

var xxx_messageInfo_ReportDataItem proto.InternalMessageInfo

func (m *ReportDataItem) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ReportDataItem) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// 发送邮件的项
type SendMailItem struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	SmtpAddr             string   `protobuf:"bytes,3,opt,name=SmtpAddr,proto3" json:"SmtpAddr,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=To,proto3" json:"To,omitempty"`
	Subject              string   `protobuf:"bytes,5,opt,name=Subject,proto3" json:"Subject,omitempty"`
	ContentType          string   `protobuf:"bytes,6,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Content              string   `protobuf:"bytes,7,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMailItem) Reset()         { *m = SendMailItem{} }
func (m *SendMailItem) String() string { return proto.CompactTextString(m) }
func (*SendMailItem) ProtoMessage()    {}
func (*SendMailItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{17}
}
func (m *SendMailItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMailItem.Unmarshal(m, b)
}
func (m *SendMailItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMailItem.Marshal(b, m, deterministic)
}
func (dst *SendMailItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMailItem.Merge(dst, src)
}
func (m *SendMailItem) XXX_Size() int {
	return xxx_messageInfo_SendMailItem.Size(m)
}
func (m *SendMailItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMailItem.DiscardUnknown(m)
}

var xxx_messageInfo_SendMailItem proto.InternalMessageInfo

func (m *SendMailItem) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SendMailItem) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SendMailItem) GetSmtpAddr() string {
	if m != nil {
		return m.SmtpAddr
	}
	return ""
}

func (m *SendMailItem) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendMailItem) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *SendMailItem) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *SendMailItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type QryConnInfoReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QryConnInfoReq) Reset()         { *m = QryConnInfoReq{} }
func (m *QryConnInfoReq) String() string { return proto.CompactTextString(m) }
func (*QryConnInfoReq) ProtoMessage()    {}
func (*QryConnInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{18}
}
func (m *QryConnInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QryConnInfoReq.Unmarshal(m, b)
}
func (m *QryConnInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QryConnInfoReq.Marshal(b, m, deterministic)
}
func (dst *QryConnInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QryConnInfoReq.Merge(dst, src)
}
func (m *QryConnInfoReq) XXX_Size() int {
	return xxx_messageInfo_QryConnInfoReq.Size(m)
}
func (m *QryConnInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QryConnInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_QryConnInfoReq proto.InternalMessageInfo

type QryConnInfoRsp struct {
	UserID               string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Cache                map[string]*ConnectReq `protobuf:"bytes,2,rep,name=Cache,proto3" json:"Cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *QryConnInfoRsp) Reset()         { *m = QryConnInfoRsp{} }
func (m *QryConnInfoRsp) String() string { return proto.CompactTextString(m) }
func (*QryConnInfoRsp) ProtoMessage()    {}
func (*QryConnInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_txdata_e591acf8b0aad013, []int{19}
}
func (m *QryConnInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QryConnInfoRsp.Unmarshal(m, b)
}
func (m *QryConnInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QryConnInfoRsp.Marshal(b, m, deterministic)
}
func (dst *QryConnInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QryConnInfoRsp.Merge(dst, src)
}
func (m *QryConnInfoRsp) XXX_Size() int {
	return xxx_messageInfo_QryConnInfoRsp.Size(m)
}
func (m *QryConnInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_QryConnInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_QryConnInfoRsp proto.InternalMessageInfo

func (m *QryConnInfoRsp) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *QryConnInfoRsp) GetCache() map[string]*ConnectReq {
	if m != nil {
		return m.Cache
	}
	return nil
}

func init() {
	proto.RegisterType((*UniKey)(nil), "txdata.UniKey")
	proto.RegisterType((*Common2Ack)(nil), "txdata.Common2Ack")
	proto.RegisterType((*CommonErr)(nil), "txdata.CommonErr")
	proto.RegisterType((*Common2Req)(nil), "txdata.Common2Req")
	proto.RegisterType((*Common2Rsp)(nil), "txdata.Common2Rsp")
	proto.RegisterType((*ConnectionInfo)(nil), "txdata.ConnectionInfo")
	proto.RegisterType((*DisconnectedData)(nil), "txdata.DisconnectedData")
	proto.RegisterType((*ConnectReq)(nil), "txdata.ConnectReq")
	proto.RegisterType((*ConnectRsp)(nil), "txdata.ConnectRsp")
	proto.RegisterType((*OnlineNotice)(nil), "txdata.OnlineNotice")
	proto.RegisterType((*SystemReport)(nil), "txdata.SystemReport")
	proto.RegisterType((*QueryRecordReq)(nil), "txdata.QueryRecordReq")
	proto.RegisterType((*QueryRecordRsp)(nil), "txdata.QueryRecordRsp")
	proto.RegisterType((*ExecCmdReq)(nil), "txdata.ExecCmdReq")
	proto.RegisterType((*ExecCmdRsp)(nil), "txdata.ExecCmdRsp")
	proto.RegisterType((*EchoItem)(nil), "txdata.EchoItem")
	proto.RegisterType((*ReportDataItem)(nil), "txdata.ReportDataItem")
	proto.RegisterType((*SendMailItem)(nil), "txdata.SendMailItem")
	proto.RegisterType((*QryConnInfoReq)(nil), "txdata.QryConnInfoReq")
	proto.RegisterType((*QryConnInfoRsp)(nil), "txdata.QryConnInfoRsp")
	proto.RegisterMapType((map[string]*ConnectReq)(nil), "txdata.QryConnInfoRsp.CacheEntry")
	proto.RegisterEnum("txdata.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("txdata.ConnectionInfo_LinkType", ConnectionInfo_LinkType_name, ConnectionInfo_LinkType_value)
}

func init() { proto.RegisterFile("txdata.proto", fileDescriptor_txdata_e591acf8b0aad013) }

var fileDescriptor_txdata_e591acf8b0aad013 = []byte{
	// 1123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0xcf, 0x6e, 0xdb, 0xc6,
	0x13, 0x0e, 0x25, 0xeb, 0xdf, 0x48, 0x91, 0x37, 0xeb, 0xfc, 0xf2, 0x23, 0x74, 0x68, 0x54, 0x9e,
	0xd4, 0x1c, 0x94, 0x56, 0x2d, 0xd0, 0x36, 0x05, 0x02, 0xb8, 0x92, 0x0e, 0x42, 0x24, 0xc5, 0x59,
	0xcb, 0x45, 0x91, 0x8b, 0x41, 0x53, 0x63, 0x99, 0xb5, 0xc8, 0xa5, 0xb8, 0x74, 0x62, 0x3d, 0x48,
	0x81, 0x9e, 0xf2, 0x0a, 0x7d, 0x8d, 0xbe, 0x44, 0x1f, 0xa3, 0xf7, 0x62, 0xff, 0x49, 0xa2, 0x61,
	0x3b, 0x6d, 0x4f, 0x45, 0x6f, 0xfc, 0xbe, 0x99, 0xd9, 0xfd, 0x76, 0x76, 0x66, 0x96, 0xd0, 0xc8,
	0xae, 0xe7, 0x7e, 0xe6, 0x77, 0x93, 0x94, 0x67, 0x9c, 0x96, 0x35, 0x6a, 0x3d, 0x5d, 0x70, 0xbe,
	0x58, 0xe2, 0x73, 0xc5, 0x9e, 0x5d, 0x9d, 0x3f, 0xcf, 0xc2, 0x08, 0x45, 0xe6, 0x47, 0x89, 0x76,
	0xf4, 0xc6, 0x50, 0x3e, 0x89, 0xc3, 0x57, 0xb8, 0xa6, 0x4f, 0xa0, 0x7c, 0x22, 0x30, 0x1d, 0x0d,
	0x5c, 0xa7, 0xed, 0x74, 0x6a, 0xcc, 0x20, 0xfa, 0x18, 0x4a, 0x13, 0xb1, 0x98, 0x72, 0xb7, 0xd0,
	0x76, 0x3a, 0x45, 0xa6, 0x81, 0x64, 0x8f, 0x71, 0x35, 0xe5, 0x6e, 0xb1, 0xed, 0x74, 0x4a, 0x4c,
	0x03, 0xef, 0x17, 0x07, 0xa0, 0xcf, 0xa3, 0x88, 0xc7, 0xbd, 0xc3, 0xe0, 0x92, 0xb6, 0xa1, 0xf8,
	0x0a, 0xd7, 0x6a, 0xbd, 0x7a, 0xaf, 0xd9, 0x35, 0x0a, 0xf5, 0x7e, 0x4c, 0x9a, 0x68, 0x0b, 0xaa,
	0xc7, 0x18, 0xcf, 0xd5, 0xb6, 0x05, 0xb5, 0xed, 0x06, 0x4b, 0x1b, 0xc3, 0xe0, 0x9d, 0xb2, 0x15,
	0xb5, 0xcd, 0x62, 0x69, 0x9b, 0x5d, 0xcf, 0x38, 0xe3, 0x3c, 0x73, 0xf7, 0xda, 0x4e, 0xa7, 0xca,
	0x36, 0x58, 0x4a, 0x1b, 0x89, 0x31, 0x5f, 0xb8, 0x25, 0x65, 0xd0, 0xc0, 0xfb, 0x16, 0x6a, 0x5a,
	0xd9, 0x30, 0x4d, 0xa5, 0xcb, 0x30, 0x4d, 0xa7, 0x5c, 0x49, 0x2b, 0x31, 0x0d, 0x64, 0x06, 0x86,
	0x69, 0x3a, 0x11, 0x0b, 0x23, 0xc5, 0x20, 0xef, 0xf7, 0xc2, 0xe6, 0x54, 0x0c, 0x57, 0xff, 0xa6,
	0x53, 0x49, 0xc9, 0x23, 0x71, 0xec, 0x9f, 0xa3, 0x5b, 0x56, 0xb4, 0x41, 0x9a, 0x3f, 0xba, 0x12,
	0x17, 0x6e, 0xc5, 0xf2, 0x12, 0x51, 0x17, 0x2a, 0x27, 0x49, 0xdf, 0x0f, 0x2e, 0xd0, 0xad, 0x2a,
	0x83, 0x85, 0xf4, 0x33, 0xa8, 0x30, 0x5c, 0xcd, 0xd6, 0x09, 0xba, 0xb5, 0xb6, 0xd3, 0x69, 0xf6,
	0xf6, 0xed, 0xc9, 0x26, 0x62, 0x21, 0x69, 0x66, 0xed, 0x72, 0x11, 0x86, 0xab, 0x81, 0x9f, 0xf9,
	0x2e, 0xb4, 0x9d, 0x4e, 0x83, 0x59, 0x48, 0xbf, 0xd2, 0x8b, 0x84, 0x11, 0xba, 0x75, 0x95, 0x9e,
	0x56, 0x57, 0x17, 0x60, 0xd7, 0x16, 0x60, 0x77, 0x66, 0x0b, 0x90, 0x59, 0x57, 0xef, 0x8f, 0x9d,
	0xfc, 0x8a, 0xe4, 0x3f, 0x9c, 0x5f, 0x91, 0xdc, 0x9f, 0x5f, 0x6d, 0x57, 0xf9, 0x15, 0x49, 0x2e,
	0xbf, 0x1a, 0xaa, 0xfc, 0x8a, 0xe4, 0x2f, 0xe7, 0x57, 0xbb, 0x6a, 0xb1, 0x63, 0x5f, 0x64, 0x6e,
	0xc3, 0x8a, 0x95, 0xc8, 0xfb, 0xb9, 0x00, 0xcd, 0x3e, 0x8f, 0x63, 0x0c, 0xb2, 0x90, 0xc7, 0xa3,
	0xf8, 0x9c, 0xdf, 0x39, 0x04, 0x5a, 0x50, 0xfd, 0x1e, 0x97, 0x3c, 0x5e, 0x6c, 0x33, 0x6e, 0xb1,
	0x94, 0xfb, 0x03, 0xa6, 0x22, 0xe4, 0xb1, 0x49, 0xb8, 0x85, 0xf4, 0x3b, 0xa8, 0x8e, 0xc3, 0xf8,
	0x72, 0xc2, 0xe7, 0xa8, 0xf2, 0xdd, 0xec, 0x3d, 0xb5, 0x87, 0xce, 0xef, 0xdb, 0x95, 0x6e, 0x2a,
	0x09, 0x9b, 0x00, 0xd5, 0x8d, 0xd7, 0x78, 0x14, 0xce, 0xd5, 0x8d, 0x94, 0x98, 0x41, 0x72, 0x3b,
	0xf9, 0xe5, 0x67, 0x17, 0xea, 0x4e, 0x6a, 0xcc, 0x42, 0x19, 0xc1, 0x30, 0xf2, 0xd3, 0x4b, 0x75,
	0x29, 0x35, 0x66, 0x90, 0xd7, 0xd5, 0x32, 0x54, 0x6e, 0x6b, 0x50, 0x7a, 0x8b, 0x29, 0xef, 0x91,
	0x07, 0xb4, 0x0e, 0x95, 0xfe, 0xeb, 0xe9, 0x74, 0xd8, 0x9f, 0x11, 0x87, 0x02, 0x94, 0x0f, 0xfb,
	0xfd, 0xe1, 0xd1, 0x8c, 0x14, 0xbc, 0x97, 0x40, 0x06, 0xa1, 0x08, 0xb4, 0x42, 0x9c, 0xab, 0xcc,
	0x3f, 0x83, 0x3d, 0x29, 0xd4, 0x54, 0xe5, 0x93, 0xdb, 0x8f, 0xc1, 0x94, 0x8f, 0xf7, 0xa3, 0x2c,
	0x67, 0xc5, 0xcb, 0x71, 0xf1, 0x39, 0x54, 0x94, 0x0d, 0x57, 0x1f, 0x09, 0xb6, 0x6e, 0xf2, 0x84,
	0xf2, 0x3c, 0xef, 0xfd, 0xb5, 0x5b, 0x68, 0x17, 0xe5, 0x09, 0x0d, 0xf4, 0x3e, 0x38, 0xdb, 0xa5,
	0x45, 0xf2, 0x0f, 0x96, 0xb6, 0x11, 0x22, 0x51, 0xd7, 0xf8, 0xb1, 0x08, 0x91, 0x6c, 0x47, 0x65,
	0xf1, 0xf6, 0x51, 0xb9, 0x97, 0x1b, 0x95, 0x3d, 0x68, 0xbc, 0x8e, 0x97, 0x61, 0x8c, 0x53, 0x9e,
	0x85, 0x01, 0x52, 0x0f, 0x1a, 0xb2, 0xbb, 0x46, 0x42, 0xb3, 0x4a, 0x66, 0x95, 0xe5, 0x38, 0xef,
	0x2d, 0x34, 0x8e, 0xd7, 0x22, 0xc3, 0x88, 0x61, 0xc2, 0xd3, 0xec, 0xce, 0x1a, 0xbc, 0x33, 0x2d,
	0xd2, 0x32, 0x41, 0x21, 0xfc, 0x05, 0xda, 0x0a, 0x34, 0xd0, 0x7b, 0x09, 0xcd, 0x37, 0x57, 0x98,
	0xae, 0x19, 0x06, 0x3c, 0x9d, 0xcb, 0x0c, 0xdc, 0xf3, 0xcc, 0xe9, 0x07, 0xcd, 0x3c, 0x73, 0xfa,
	0x41, 0x63, 0xf9, 0x78, 0x91, 0xfc, 0xbd, 0x78, 0x4a, 0x61, 0x4f, 0xf5, 0x71, 0xb1, 0x5d, 0xec,
	0x34, 0x98, 0xfa, 0xf6, 0x3e, 0x01, 0x18, 0x5e, 0x63, 0xd0, 0x8f, 0x94, 0x1e, 0x02, 0xc5, 0x7e,
	0x34, 0x37, 0x8b, 0xc9, 0x4f, 0xcf, 0xdb, 0xda, 0x75, 0xfe, 0x19, 0x26, 0xcb, 0xb5, 0xf1, 0xd0,
	0xc0, 0x9b, 0x41, 0x75, 0x18, 0x5c, 0xf0, 0x51, 0x86, 0x91, 0x3c, 0xfd, 0x98, 0x07, 0xfe, 0x72,
	0x23, 0xc9, 0x42, 0x3d, 0x0b, 0x23, 0x9e, 0xe1, 0xb6, 0x6b, 0x2d, 0xde, 0x51, 0x26, 0x79, 0xad,
	0xec, 0x05, 0x34, 0xf5, 0x1d, 0x48, 0xa4, 0xd6, 0x7e, 0x0c, 0xa5, 0x19, 0x4f, 0xc2, 0xc0, 0xee,
	0xae, 0xc0, 0x26, 0xb6, 0xb0, 0x13, 0xfb, 0x9b, 0x03, 0x0d, 0x39, 0x84, 0x27, 0x7e, 0xb8, 0x54,
	0xa1, 0x2d, 0xa8, 0xca, 0xd4, 0xc4, 0x7e, 0x84, 0x26, 0x7a, 0x83, 0xa5, 0xed, 0xc8, 0x17, 0xe2,
	0x3d, 0x4f, 0xe7, 0x56, 0x98, 0xc5, 0x6a, 0xb8, 0x47, 0x59, 0x72, 0x38, 0x9f, 0xa7, 0x76, 0x80,
	0x5b, 0x4c, 0x9b, 0x50, 0x98, 0x71, 0x53, 0x72, 0x85, 0x19, 0x97, 0x47, 0x3f, 0xbe, 0x3a, 0xfb,
	0x09, 0x83, 0x4c, 0x0d, 0x89, 0x1a, 0xb3, 0x90, 0xb6, 0xa1, 0xde, 0xe7, 0x71, 0x86, 0x71, 0xa6,
	0x46, 0xae, 0x9e, 0x14, 0xbb, 0x94, 0x8c, 0x35, 0xd0, 0x8c, 0x0b, 0x0b, 0x3d, 0x02, 0xcd, 0x37,
	0xe9, 0x5a, 0x36, 0x84, 0x69, 0x1b, 0xef, 0x57, 0x27, 0x4f, 0xdd, 0x53, 0x07, 0x5f, 0x43, 0x49,
	0xcf, 0x7f, 0x59, 0xa3, 0xf5, 0xde, 0xa7, 0xb6, 0xbf, 0xf2, 0xe1, 0x5d, 0xe5, 0x33, 0x8c, 0xb3,
	0x74, 0xcd, 0xb4, 0x7f, 0x6b, 0x0c, 0xb0, 0x25, 0x65, 0x59, 0x5c, 0xa2, 0xbd, 0x74, 0xf9, 0x49,
	0x3b, 0x50, 0x7a, 0xe7, 0x2f, 0xaf, 0xd0, 0x34, 0x2e, 0xbd, 0xd1, 0xb8, 0x0c, 0x57, 0x4c, 0x3b,
	0xbc, 0x28, 0x7c, 0xe3, 0x3c, 0xfb, 0x50, 0x84, 0x8a, 0x79, 0x58, 0xec, 0xcc, 0xfb, 0x82, 0x3c,
	0xa0, 0x8f, 0xe0, 0xe1, 0x68, 0x70, 0xba, 0xfd, 0x45, 0x23, 0x0e, 0x25, 0xd0, 0xd8, 0x50, 0xc3,
	0x34, 0x25, 0x85, 0xbc, 0x13, 0xc3, 0x15, 0x29, 0xde, 0xa0, 0x44, 0x42, 0xf6, 0xe8, 0xff, 0xe0,
	0x91, 0xa2, 0x76, 0xc7, 0x06, 0x29, 0xd1, 0xff, 0xc3, 0xc1, 0x68, 0x70, 0x7a, 0x73, 0x7e, 0x92,
	0xf2, 0x66, 0x09, 0xab, 0x96, 0x54, 0x6e, 0x50, 0x22, 0x21, 0x55, 0x7a, 0x00, 0xfb, 0xa3, 0xc1,
	0xe9, 0xee, 0x0c, 0x21, 0x35, 0x43, 0xee, 0x0e, 0x09, 0x02, 0x66, 0xff, 0x7c, 0x77, 0x93, 0xfa,
	0x2d, 0xb4, 0x48, 0x48, 0xc3, 0x6c, 0xb5, 0xed, 0x3b, 0xf2, 0xf0, 0x06, 0x25, 0x12, 0xd2, 0xa4,
	0xfb, 0x50, 0x97, 0x94, 0xe9, 0x2c, 0xb2, 0x6f, 0x56, 0xcb, 0x37, 0x05, 0x21, 0x56, 0xd0, 0x4e,
	0xb9, 0x93, 0x47, 0x76, 0xe7, 0x5c, 0xe5, 0x10, 0x7a, 0x0b, 0x2d, 0x12, 0x72, 0x70, 0xf4, 0xe0,
	0xac, 0xac, 0xde, 0xec, 0x2f, 0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x13, 0x5b, 0xe3, 0xa9, 0xba,
	0x0b, 0x00, 0x00,
}
